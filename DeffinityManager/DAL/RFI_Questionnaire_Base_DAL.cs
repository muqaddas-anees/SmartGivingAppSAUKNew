using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_Questionnaire
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:16
	/// </summary>
	public class RFI_Questionnaire_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_Questionnaire Load(DataRow oRow)
		{
			BE.RFI_Questionnaire oReturn = new BE.RFI_Questionnaire();
			oReturn.QUESTIONNAIREID = (int)oRow["QUESTIONNAIREID"];
			oReturn.PROJECTREFERENCE = (int)oRow["PROJECTREFERENCE"];
			oReturn.SUBSECTIONID = (int)oRow["SUBSECTIONID"];
			oReturn.QUESTION = (string)oRow["QUESTION"];
			oReturn.ANSWER = (oRow["ANSWER"] == DBNull.Value ? (null) : ((int?)oRow["ANSWER"]));
			oReturn.NOTES = (oRow["NOTES"] == DBNull.Value ? (null) : ((string)oRow["NOTES"]));
			return oReturn;
		}

		/// <summary>
		/// Insert MasterTemplate
		/// </summary>
		public static int Insert(BE.RFI_Questionnaire oRFI_Questionnaire)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_INSERT", oRFI_Questionnaire.ItemParameter());
		}

        public static int Insert(int TemplateID, int ProjectReference, int SubsectionID)
        {
            return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString,CommandType.StoredProcedure,"dbo.DEFFINITY_RFI_QUESTIONNAIRE_TEMPLATE_INSERT",new System.Data.SqlClient.SqlParameter[]{new System.Data.SqlClient.SqlParameter("@TEMPLATEID", TemplateID),new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE", ProjectReference),new System.Data.SqlClient.SqlParameter("@SUBSECTIONID", SubsectionID)});

        }

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.RFI_Questionnaire Select(int questionnaireid)
		{
			DataSet dsRFI_Questionnaire = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_SELECT", new System.Data.SqlClient.SqlParameter[]{ new System.Data.SqlClient.SqlParameter("@QUESTIONNAIREID", questionnaireid) });
			BE.RFI_Questionnaire oRFI_Questionnaire = null;
			if (dsRFI_Questionnaire.Tables[0].Rows.Count > 0)
				oRFI_Questionnaire = RFI_Questionnaire_Base_DAL.Load(dsRFI_Questionnaire.Tables[0].Rows[0]);
			return oRFI_Questionnaire;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int questionnaireid)
		{
			return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@QUESTIONNAIREID", questionnaireid) })) > 0;
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
		public static DataTable Fill()
		{
			DataSet dsRFI_Questionnaire = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_FILL");
			return dsRFI_Questionnaire.Tables[0];
		}

        

		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_Questionnaire oRFI_Questionnaire)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_UPDATE", oRFI_Questionnaire.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(int questionnaireid)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@QUESTIONNAIREID", questionnaireid) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_QUESTIONNAIRE_DELETEALL");
		}
	}
}

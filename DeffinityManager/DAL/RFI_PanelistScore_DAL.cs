using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_PanelistScore
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:08
	/// 
	/// Remark: Use this class to write custom code.
	/// </summary>
	public class RFI_PanelistScore_DAL : RFI_PanelistScore_Base_DAL
	{
		/// <summary>
		/// Constructor
		/// </summary>
		private RFI_PanelistScore_DAL() { }
        /// <summary>
        /// Check if entity exists
        /// </summary>
        public static bool Exists(int ProjectReference)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.deffinity_RFI_GetApproversStatus", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ProjectReference", ProjectReference) })) > 0;
        }
        public static int GetPanelistID(int ContractorID, int ProjectReference)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORECARD_GETPANELISTID", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@CONTRACTORID", ContractorID), new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE", ProjectReference) }));
        }
        public static DataTable Fill(int PanelistID, int ProjectReference, int SubsectionID)
        {
            DataSet dsRFI_Main = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORECARD_FILL", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@PANELISTID", PanelistID), new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE", ProjectReference), new System.Data.SqlClient.SqlParameter("@SUBSECTIONID", SubsectionID) });
            return dsRFI_Main.Tables[0];
        }
        public static bool Update(int ID, double Score, string Comments)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORECARD_UPDATE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", ID), new System.Data.SqlClient.SqlParameter("@SCORE", Score), new System.Data.SqlClient.SqlParameter("@COMMENTS", Comments) })) > 0;

        }

	}
}

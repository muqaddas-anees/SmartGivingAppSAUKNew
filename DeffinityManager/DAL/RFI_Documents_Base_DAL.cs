using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_Documents
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 30/07/2009 15:30:31
	/// </summary>
	public class RFI_Documents_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_Documents Load(DataRow oRow)
		{
			BE.RFI_Documents oReturn = new BE.RFI_Documents();
			oReturn.ID = (Guid)oRow["ID"];
			oReturn.DOCUMENTNAME = (string)oRow["DOCUMENTNAME"];
			oReturn.DOCUMENTTYPE = (string)oRow["DOCUMENTTYPE"];
			oReturn.DOCUMENT = (byte[])oRow["DOCUMENT"];
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.RFI_Documents oRFI_Documents)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_INSERT", oRFI_Documents.ItemParameter());
		}

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.RFI_Documents Select(Guid id)
		{
			DataSet dsRFI_Documents = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_SELECT", new System.Data.SqlClient.SqlParameter[]{ new System.Data.SqlClient.SqlParameter("@ID", id) });
			BE.RFI_Documents oRFI_Documents = null;
			if (dsRFI_Documents.Tables[0].Rows.Count > 0)
				oRFI_Documents = RFI_Documents_Base_DAL.Load(dsRFI_Documents.Tables[0].Rows[0]);
			return oRFI_Documents;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(Guid id)
		{
			return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) })) > 0;
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
		public static DataTable Fill()
		{
			DataSet dsRFI_Documents = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_FILL");
			return dsRFI_Documents.Tables[0];
		}

		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_Documents oRFI_Documents)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_UPDATE", oRFI_Documents.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(Guid id)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_DOCUMENTS_DELETEALL");
		}
	}
}

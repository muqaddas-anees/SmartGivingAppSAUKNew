#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssetsGenMgt.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Gendata")]
	public partial class AssetsGenDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEquipment(AssetsGenMgt.Entity.Equipment instance);
    partial void UpdateEquipment(AssetsGenMgt.Entity.Equipment instance);
    partial void DeleteEquipment(AssetsGenMgt.Entity.Equipment instance);
    partial void InsertEquipmentStatus(AssetsGenMgt.Entity.EquipmentStatus instance);
    partial void UpdateEquipmentStatus(AssetsGenMgt.Entity.EquipmentStatus instance);
    partial void DeleteEquipmentStatus(AssetsGenMgt.Entity.EquipmentStatus instance);
    partial void InsertEquipmentType(AssetsGenMgt.Entity.EquipmentType instance);
    partial void UpdateEquipmentType(AssetsGenMgt.Entity.EquipmentType instance);
    partial void DeleteEquipmentType(AssetsGenMgt.Entity.EquipmentType instance);
    partial void InsertCabinet(AssetsGenMgt.Entity.Cabinet instance);
    partial void UpdateCabinet(AssetsGenMgt.Entity.Cabinet instance);
    partial void DeleteCabinet(AssetsGenMgt.Entity.Cabinet instance);
    partial void InsertCabinetEquipment(AssetsGenMgt.Entity.CabinetEquipment instance);
    partial void UpdateCabinetEquipment(AssetsGenMgt.Entity.CabinetEquipment instance);
    partial void DeleteCabinetEquipment(AssetsGenMgt.Entity.CabinetEquipment instance);
    partial void InsertLocation(AssetsGenMgt.Entity.Location instance);
    partial void UpdateLocation(AssetsGenMgt.Entity.Location instance);
    partial void DeleteLocation(AssetsGenMgt.Entity.Location instance);
    partial void InsertIPAddress(AssetsGenMgt.Entity.IPAddress instance);
    partial void UpdateIPAddress(AssetsGenMgt.Entity.IPAddress instance);
    partial void DeleteIPAddress(AssetsGenMgt.Entity.IPAddress instance);
    partial void InsertIPFunction(AssetsGenMgt.Entity.IPFunction instance);
    partial void UpdateIPFunction(AssetsGenMgt.Entity.IPFunction instance);
    partial void DeleteIPFunction(AssetsGenMgt.Entity.IPFunction instance);
    partial void InsertPort(AssetsGenMgt.Entity.Port instance);
    partial void UpdatePort(AssetsGenMgt.Entity.Port instance);
    partial void DeletePort(AssetsGenMgt.Entity.Port instance);
    partial void InsertPortType(AssetsGenMgt.Entity.PortType instance);
    partial void UpdatePortType(AssetsGenMgt.Entity.PortType instance);
    partial void DeletePortType(AssetsGenMgt.Entity.PortType instance);
    partial void InsertBuilding(AssetsGenMgt.Entity.Building instance);
    partial void UpdateBuilding(AssetsGenMgt.Entity.Building instance);
    partial void DeleteBuilding(AssetsGenMgt.Entity.Building instance);
    partial void InsertSite(AssetsGenMgt.Entity.Site instance);
    partial void UpdateSite(AssetsGenMgt.Entity.Site instance);
    partial void DeleteSite(AssetsGenMgt.Entity.Site instance);
    partial void InsertVisioTemplateShape(AssetsGenMgt.Entity.VisioTemplateShape instance);
    partial void UpdateVisioTemplateShape(AssetsGenMgt.Entity.VisioTemplateShape instance);
    partial void DeleteVisioTemplateShape(AssetsGenMgt.Entity.VisioTemplateShape instance);
    partial void InsertPortPower(AssetsGenMgt.Entity.PortPower instance);
    partial void UpdatePortPower(AssetsGenMgt.Entity.PortPower instance);
    partial void DeletePortPower(AssetsGenMgt.Entity.PortPower instance);
    partial void InsertPortSpeed(AssetsGenMgt.Entity.PortSpeed instance);
    partial void UpdatePortSpeed(AssetsGenMgt.Entity.PortSpeed instance);
    partial void DeletePortSpeed(AssetsGenMgt.Entity.PortSpeed instance);
    partial void InsertPortStatus(AssetsGenMgt.Entity.PortStatus instance);
    partial void UpdatePortStatus(AssetsGenMgt.Entity.PortStatus instance);
    partial void DeletePortStatus(AssetsGenMgt.Entity.PortStatus instance);
    partial void InsertAttributeType(AssetsGenMgt.Entity.AttributeType instance);
    partial void UpdateAttributeType(AssetsGenMgt.Entity.AttributeType instance);
    partial void DeleteAttributeType(AssetsGenMgt.Entity.AttributeType instance);
    partial void InsertEquipmentAttribute(AssetsGenMgt.Entity.EquipmentAttribute instance);
    partial void UpdateEquipmentAttribute(AssetsGenMgt.Entity.EquipmentAttribute instance);
    partial void DeleteEquipmentAttribute(AssetsGenMgt.Entity.EquipmentAttribute instance);
    #endregion
		
		public AssetsGenDataContext() : 
				base(global::DeffinityManager.Properties.Settings.Default.DBAssetsGenString, mappingSource)
		{
			OnCreated();
		}
		
		public AssetsGenDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetsGenDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetsGenDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetsGenDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.Equipment> Equipments
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.Equipment>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.EquipmentStatus> EquipmentStatus
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.EquipmentStatus>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.EquipmentType> EquipmentTypes
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.EquipmentType>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.Cabinet> Cabinets
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.Cabinet>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.CabinetEquipment> CabinetEquipments
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.CabinetEquipment>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.Location> Locations
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.Location>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.IPAddress> IPAddresses
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.IPAddress>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.IPFunction> IPFunctions
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.IPFunction>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.Port> Ports
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.Port>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.PortType> PortTypes
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.PortType>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.Building> Buildings
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.Building>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.Site> Sites
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.Site>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.VisioTemplateShape> VisioTemplateShapes
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.VisioTemplateShape>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.PortPower> PortPowers
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.PortPower>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.PortSpeed> PortSpeeds
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.PortSpeed>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.PortStatus> PortStatus
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.PortStatus>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.PortTrace> PortTraces
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.PortTrace>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.AttributeType> AttributeTypes
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.AttributeType>();
			}
		}
		
		public System.Data.Linq.Table<AssetsGenMgt.Entity.EquipmentAttribute> EquipmentAttributes
		{
			get
			{
				return this.GetTable<AssetsGenMgt.Entity.EquipmentAttribute>();
			}
		}
	}
}
namespace AssetsGenMgt.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipment")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EquipmentNo;
		
		private System.Nullable<int> _EquipmentType;
		
		private string _EquipmentName;
		
		private string _EquipmentRef;
		
		private System.Nullable<int> _PortCount;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _PositionNo;
		
		private System.Nullable<int> _Side;
		
		private System.Nullable<int> _PatchPanelFlag;
		
		private System.Nullable<int> _ChildDeviceFlag;
		
		private System.Nullable<int> _VirtualDeviceFlag;
		
		private System.Nullable<int> _DeviceLevel;
		
		private System.Nullable<int> _ParentEquipmentNo;
		
		private System.Nullable<int> _EquipmentStatus;
		
		private string _Notes;
		
		private System.Nullable<int> _StatusFlag;
		
		private System.Nullable<int> _ImportFlag;
		
		private System.Nullable<int> _StandAloneFlag;
		
		private System.Nullable<double> _LeftInset;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<int> _InternalFlag;
		
		private System.Nullable<int> _Offset;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
		private System.Nullable<int> _VisioShape;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentNoChanging(int value);
    partial void OnEquipmentNoChanged();
    partial void OnEquipmentTypeChanging(System.Nullable<int> value);
    partial void OnEquipmentTypeChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    partial void OnEquipmentRefChanging(string value);
    partial void OnEquipmentRefChanged();
    partial void OnPortCountChanging(System.Nullable<int> value);
    partial void OnPortCountChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnPositionNoChanging(System.Nullable<int> value);
    partial void OnPositionNoChanged();
    partial void OnSideChanging(System.Nullable<int> value);
    partial void OnSideChanged();
    partial void OnPatchPanelFlagChanging(System.Nullable<int> value);
    partial void OnPatchPanelFlagChanged();
    partial void OnChildDeviceFlagChanging(System.Nullable<int> value);
    partial void OnChildDeviceFlagChanged();
    partial void OnVirtualDeviceFlagChanging(System.Nullable<int> value);
    partial void OnVirtualDeviceFlagChanged();
    partial void OnDeviceLevelChanging(System.Nullable<int> value);
    partial void OnDeviceLevelChanged();
    partial void OnParentEquipmentNoChanging(System.Nullable<int> value);
    partial void OnParentEquipmentNoChanged();
    partial void OnEquipmentStatusChanging(System.Nullable<int> value);
    partial void OnEquipmentStatusChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusFlagChanging(System.Nullable<int> value);
    partial void OnStatusFlagChanged();
    partial void OnImportFlagChanging(System.Nullable<int> value);
    partial void OnImportFlagChanged();
    partial void OnStandAloneFlagChanging(System.Nullable<int> value);
    partial void OnStandAloneFlagChanged();
    partial void OnLeftInsetChanging(System.Nullable<double> value);
    partial void OnLeftInsetChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnInternalFlagChanging(System.Nullable<int> value);
    partial void OnInternalFlagChanged();
    partial void OnOffsetChanging(System.Nullable<int> value);
    partial void OnOffsetChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    partial void OnVisioShapeChanging(System.Nullable<int> value);
    partial void OnVisioShapeChanged();
    #endregion
		
		public Equipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EquipmentNo
		{
			get
			{
				return this._EquipmentNo;
			}
			set
			{
				if ((this._EquipmentNo != value))
				{
					this.OnEquipmentNoChanging(value);
					this.SendPropertyChanging();
					this._EquipmentNo = value;
					this.SendPropertyChanged("EquipmentNo");
					this.OnEquipmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="Int")]
		public System.Nullable<int> EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="VarChar(50)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentRef", DbType="VarChar(50)")]
		public string EquipmentRef
		{
			get
			{
				return this._EquipmentRef;
			}
			set
			{
				if ((this._EquipmentRef != value))
				{
					this.OnEquipmentRefChanging(value);
					this.SendPropertyChanging();
					this._EquipmentRef = value;
					this.SendPropertyChanged("EquipmentRef");
					this.OnEquipmentRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortCount", DbType="Int")]
		public System.Nullable<int> PortCount
		{
			get
			{
				return this._PortCount;
			}
			set
			{
				if ((this._PortCount != value))
				{
					this.OnPortCountChanging(value);
					this.SendPropertyChanging();
					this._PortCount = value;
					this.SendPropertyChanged("PortCount");
					this.OnPortCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionNo", DbType="Int")]
		public System.Nullable<int> PositionNo
		{
			get
			{
				return this._PositionNo;
			}
			set
			{
				if ((this._PositionNo != value))
				{
					this.OnPositionNoChanging(value);
					this.SendPropertyChanging();
					this._PositionNo = value;
					this.SendPropertyChanged("PositionNo");
					this.OnPositionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side", DbType="Int")]
		public System.Nullable<int> Side
		{
			get
			{
				return this._Side;
			}
			set
			{
				if ((this._Side != value))
				{
					this.OnSideChanging(value);
					this.SendPropertyChanging();
					this._Side = value;
					this.SendPropertyChanged("Side");
					this.OnSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatchPanelFlag", DbType="Int")]
		public System.Nullable<int> PatchPanelFlag
		{
			get
			{
				return this._PatchPanelFlag;
			}
			set
			{
				if ((this._PatchPanelFlag != value))
				{
					this.OnPatchPanelFlagChanging(value);
					this.SendPropertyChanging();
					this._PatchPanelFlag = value;
					this.SendPropertyChanged("PatchPanelFlag");
					this.OnPatchPanelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildDeviceFlag", DbType="Int")]
		public System.Nullable<int> ChildDeviceFlag
		{
			get
			{
				return this._ChildDeviceFlag;
			}
			set
			{
				if ((this._ChildDeviceFlag != value))
				{
					this.OnChildDeviceFlagChanging(value);
					this.SendPropertyChanging();
					this._ChildDeviceFlag = value;
					this.SendPropertyChanged("ChildDeviceFlag");
					this.OnChildDeviceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualDeviceFlag", DbType="Int")]
		public System.Nullable<int> VirtualDeviceFlag
		{
			get
			{
				return this._VirtualDeviceFlag;
			}
			set
			{
				if ((this._VirtualDeviceFlag != value))
				{
					this.OnVirtualDeviceFlagChanging(value);
					this.SendPropertyChanging();
					this._VirtualDeviceFlag = value;
					this.SendPropertyChanged("VirtualDeviceFlag");
					this.OnVirtualDeviceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceLevel", DbType="Int")]
		public System.Nullable<int> DeviceLevel
		{
			get
			{
				return this._DeviceLevel;
			}
			set
			{
				if ((this._DeviceLevel != value))
				{
					this.OnDeviceLevelChanging(value);
					this.SendPropertyChanging();
					this._DeviceLevel = value;
					this.SendPropertyChanged("DeviceLevel");
					this.OnDeviceLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentEquipmentNo", DbType="Int")]
		public System.Nullable<int> ParentEquipmentNo
		{
			get
			{
				return this._ParentEquipmentNo;
			}
			set
			{
				if ((this._ParentEquipmentNo != value))
				{
					this.OnParentEquipmentNoChanging(value);
					this.SendPropertyChanging();
					this._ParentEquipmentNo = value;
					this.SendPropertyChanged("ParentEquipmentNo");
					this.OnParentEquipmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentStatus", DbType="Int")]
		public System.Nullable<int> EquipmentStatus
		{
			get
			{
				return this._EquipmentStatus;
			}
			set
			{
				if ((this._EquipmentStatus != value))
				{
					this.OnEquipmentStatusChanging(value);
					this.SendPropertyChanging();
					this._EquipmentStatus = value;
					this.SendPropertyChanged("EquipmentStatus");
					this.OnEquipmentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="Int")]
		public System.Nullable<int> StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportFlag", DbType="Int")]
		public System.Nullable<int> ImportFlag
		{
			get
			{
				return this._ImportFlag;
			}
			set
			{
				if ((this._ImportFlag != value))
				{
					this.OnImportFlagChanging(value);
					this.SendPropertyChanging();
					this._ImportFlag = value;
					this.SendPropertyChanged("ImportFlag");
					this.OnImportFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandAloneFlag", DbType="Int")]
		public System.Nullable<int> StandAloneFlag
		{
			get
			{
				return this._StandAloneFlag;
			}
			set
			{
				if ((this._StandAloneFlag != value))
				{
					this.OnStandAloneFlagChanging(value);
					this.SendPropertyChanging();
					this._StandAloneFlag = value;
					this.SendPropertyChanged("StandAloneFlag");
					this.OnStandAloneFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftInset", DbType="Float")]
		public System.Nullable<double> LeftInset
		{
			get
			{
				return this._LeftInset;
			}
			set
			{
				if ((this._LeftInset != value))
				{
					this.OnLeftInsetChanging(value);
					this.SendPropertyChanging();
					this._LeftInset = value;
					this.SendPropertyChanged("LeftInset");
					this.OnLeftInsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Float")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalFlag", DbType="Int")]
		public System.Nullable<int> InternalFlag
		{
			get
			{
				return this._InternalFlag;
			}
			set
			{
				if ((this._InternalFlag != value))
				{
					this.OnInternalFlagChanging(value);
					this.SendPropertyChanging();
					this._InternalFlag = value;
					this.SendPropertyChanged("InternalFlag");
					this.OnInternalFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offset", DbType="Int")]
		public System.Nullable<int> Offset
		{
			get
			{
				return this._Offset;
			}
			set
			{
				if ((this._Offset != value))
				{
					this.OnOffsetChanging(value);
					this.SendPropertyChanging();
					this._Offset = value;
					this.SendPropertyChanged("Offset");
					this.OnOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisioShape", DbType="Int")]
		public System.Nullable<int> VisioShape
		{
			get
			{
				return this._VisioShape;
			}
			set
			{
				if ((this._VisioShape != value))
				{
					this.OnVisioShapeChanging(value);
					this.SendPropertyChanging();
					this._VisioShape = value;
					this.SendPropertyChanged("VisioShape");
					this.OnVisioShapeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentStatus")]
	public partial class EquipmentStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public EquipmentStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentType")]
	public partial class EquipmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public EquipmentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cabinet")]
	public partial class Cabinet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CabinetNo;
		
		private System.Nullable<int> _SiteNo;
		
		private System.Nullable<int> _BuildingNo;
		
		private System.Nullable<int> _LocationNo;
		
		private string _CabinetName;
		
		private System.Nullable<byte> _VirtualFlag;
		
		private System.Nullable<int> _CabinetSize;
		
		private string _Notes;
		
		private System.Nullable<byte> _StatusFlag;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
		private System.Nullable<int> _SpecialCabinetFlag;
		
		private System.Nullable<double> _SpecialCabinetWidth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCabinetNoChanging(int value);
    partial void OnCabinetNoChanged();
    partial void OnSiteNoChanging(System.Nullable<int> value);
    partial void OnSiteNoChanged();
    partial void OnBuildingNoChanging(System.Nullable<int> value);
    partial void OnBuildingNoChanged();
    partial void OnLocationNoChanging(System.Nullable<int> value);
    partial void OnLocationNoChanged();
    partial void OnCabinetNameChanging(string value);
    partial void OnCabinetNameChanged();
    partial void OnVirtualFlagChanging(System.Nullable<byte> value);
    partial void OnVirtualFlagChanged();
    partial void OnCabinetSizeChanging(System.Nullable<int> value);
    partial void OnCabinetSizeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusFlagChanging(System.Nullable<byte> value);
    partial void OnStatusFlagChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    partial void OnSpecialCabinetFlagChanging(System.Nullable<int> value);
    partial void OnSpecialCabinetFlagChanged();
    partial void OnSpecialCabinetWidthChanging(System.Nullable<double> value);
    partial void OnSpecialCabinetWidthChanged();
    #endregion
		
		public Cabinet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this.OnCabinetNoChanging(value);
					this.SendPropertyChanging();
					this._CabinetNo = value;
					this.SendPropertyChanged("CabinetNo");
					this.OnCabinetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteNo", DbType="Int")]
		public System.Nullable<int> SiteNo
		{
			get
			{
				return this._SiteNo;
			}
			set
			{
				if ((this._SiteNo != value))
				{
					this.OnSiteNoChanging(value);
					this.SendPropertyChanging();
					this._SiteNo = value;
					this.SendPropertyChanged("SiteNo");
					this.OnSiteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingNo", DbType="Int")]
		public System.Nullable<int> BuildingNo
		{
			get
			{
				return this._BuildingNo;
			}
			set
			{
				if ((this._BuildingNo != value))
				{
					this.OnBuildingNoChanging(value);
					this.SendPropertyChanging();
					this._BuildingNo = value;
					this.SendPropertyChanged("BuildingNo");
					this.OnBuildingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationNo", DbType="Int")]
		public System.Nullable<int> LocationNo
		{
			get
			{
				return this._LocationNo;
			}
			set
			{
				if ((this._LocationNo != value))
				{
					this.OnLocationNoChanging(value);
					this.SendPropertyChanging();
					this._LocationNo = value;
					this.SendPropertyChanged("LocationNo");
					this.OnLocationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetName", DbType="VarChar(50)")]
		public string CabinetName
		{
			get
			{
				return this._CabinetName;
			}
			set
			{
				if ((this._CabinetName != value))
				{
					this.OnCabinetNameChanging(value);
					this.SendPropertyChanging();
					this._CabinetName = value;
					this.SendPropertyChanged("CabinetName");
					this.OnCabinetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualFlag", DbType="TinyInt")]
		public System.Nullable<byte> VirtualFlag
		{
			get
			{
				return this._VirtualFlag;
			}
			set
			{
				if ((this._VirtualFlag != value))
				{
					this.OnVirtualFlagChanging(value);
					this.SendPropertyChanging();
					this._VirtualFlag = value;
					this.SendPropertyChanged("VirtualFlag");
					this.OnVirtualFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetSize", DbType="Int")]
		public System.Nullable<int> CabinetSize
		{
			get
			{
				return this._CabinetSize;
			}
			set
			{
				if ((this._CabinetSize != value))
				{
					this.OnCabinetSizeChanging(value);
					this.SendPropertyChanging();
					this._CabinetSize = value;
					this.SendPropertyChanged("CabinetSize");
					this.OnCabinetSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="TinyInt")]
		public System.Nullable<byte> StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialCabinetFlag", DbType="Int")]
		public System.Nullable<int> SpecialCabinetFlag
		{
			get
			{
				return this._SpecialCabinetFlag;
			}
			set
			{
				if ((this._SpecialCabinetFlag != value))
				{
					this.OnSpecialCabinetFlagChanging(value);
					this.SendPropertyChanging();
					this._SpecialCabinetFlag = value;
					this.SendPropertyChanged("SpecialCabinetFlag");
					this.OnSpecialCabinetFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialCabinetWidth", DbType="Float")]
		public System.Nullable<double> SpecialCabinetWidth
		{
			get
			{
				return this._SpecialCabinetWidth;
			}
			set
			{
				if ((this._SpecialCabinetWidth != value))
				{
					this.OnSpecialCabinetWidthChanging(value);
					this.SendPropertyChanging();
					this._SpecialCabinetWidth = value;
					this.SendPropertyChanged("SpecialCabinetWidth");
					this.OnSpecialCabinetWidthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabinetEquipment")]
	public partial class CabinetEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CabinetNo;
		
		private int _EquipmentNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCabinetNoChanging(int value);
    partial void OnCabinetNoChanged();
    partial void OnEquipmentNoChanging(int value);
    partial void OnEquipmentNoChanged();
    #endregion
		
		public CabinetEquipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CabinetNo
		{
			get
			{
				return this._CabinetNo;
			}
			set
			{
				if ((this._CabinetNo != value))
				{
					this.OnCabinetNoChanging(value);
					this.SendPropertyChanging();
					this._CabinetNo = value;
					this.SendPropertyChanged("CabinetNo");
					this.OnCabinetNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EquipmentNo
		{
			get
			{
				return this._EquipmentNo;
			}
			set
			{
				if ((this._EquipmentNo != value))
				{
					this.OnEquipmentNoChanging(value);
					this.SendPropertyChanging();
					this._EquipmentNo = value;
					this.SendPropertyChanged("EquipmentNo");
					this.OnEquipmentNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationNo;
		
		private string _LocationName;
		
		private System.Nullable<byte> _StatusFlag;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationNoChanging(int value);
    partial void OnLocationNoChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnStatusFlagChanging(System.Nullable<byte> value);
    partial void OnStatusFlagChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public Location()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LocationNo
		{
			get
			{
				return this._LocationNo;
			}
			set
			{
				if ((this._LocationNo != value))
				{
					this.OnLocationNoChanging(value);
					this.SendPropertyChanging();
					this._LocationNo = value;
					this.SendPropertyChanged("LocationNo");
					this.OnLocationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="VarChar(50)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="TinyInt")]
		public System.Nullable<byte> StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IPAddress")]
	public partial class IPAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _EquipmentNo;
		
		private System.Nullable<int> _PortNo;
		
		private string _IPAddress1;
		
		private string _IPAddress_Sort;
		
		private string _SubnetMask;
		
		private string _SubnetMask_Sort;
		
		private string _GatewayAddress;
		
		private string _GatewayAddress_Sort;
		
		private string _PrimaryDNSName;
		
		private string _PrimaryDNSAddress;
		
		private string _PrimaryDNSAddress_Sort;
		
		private string _SecondaryDNSName;
		
		private string _SecondaryDNSAddress;
		
		private string _SecondaryDNSAddress_Sort;
		
		private string _MACAddress;
		
		private string _VLAN;
		
		private string _DNSName;
		
		private System.Nullable<int> _IPFunction;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
		private int _IPAddressNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentNoChanging(System.Nullable<int> value);
    partial void OnEquipmentNoChanged();
    partial void OnPortNoChanging(System.Nullable<int> value);
    partial void OnPortNoChanged();
    partial void OnIPAddress1Changing(string value);
    partial void OnIPAddress1Changed();
    partial void OnIPAddress_SortChanging(string value);
    partial void OnIPAddress_SortChanged();
    partial void OnSubnetMaskChanging(string value);
    partial void OnSubnetMaskChanged();
    partial void OnSubnetMask_SortChanging(string value);
    partial void OnSubnetMask_SortChanged();
    partial void OnGatewayAddressChanging(string value);
    partial void OnGatewayAddressChanged();
    partial void OnGatewayAddress_SortChanging(string value);
    partial void OnGatewayAddress_SortChanged();
    partial void OnPrimaryDNSNameChanging(string value);
    partial void OnPrimaryDNSNameChanged();
    partial void OnPrimaryDNSAddressChanging(string value);
    partial void OnPrimaryDNSAddressChanged();
    partial void OnPrimaryDNSAddress_SortChanging(string value);
    partial void OnPrimaryDNSAddress_SortChanged();
    partial void OnSecondaryDNSNameChanging(string value);
    partial void OnSecondaryDNSNameChanged();
    partial void OnSecondaryDNSAddressChanging(string value);
    partial void OnSecondaryDNSAddressChanged();
    partial void OnSecondaryDNSAddress_SortChanging(string value);
    partial void OnSecondaryDNSAddress_SortChanged();
    partial void OnMACAddressChanging(string value);
    partial void OnMACAddressChanged();
    partial void OnVLANChanging(string value);
    partial void OnVLANChanged();
    partial void OnDNSNameChanging(string value);
    partial void OnDNSNameChanged();
    partial void OnIPFunctionChanging(System.Nullable<int> value);
    partial void OnIPFunctionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    partial void OnIPAddressNoChanging(int value);
    partial void OnIPAddressNoChanged();
    #endregion
		
		public IPAddress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentNo", DbType="Int")]
		public System.Nullable<int> EquipmentNo
		{
			get
			{
				return this._EquipmentNo;
			}
			set
			{
				if ((this._EquipmentNo != value))
				{
					this.OnEquipmentNoChanging(value);
					this.SendPropertyChanging();
					this._EquipmentNo = value;
					this.SendPropertyChanged("EquipmentNo");
					this.OnEquipmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNo", DbType="Int")]
		public System.Nullable<int> PortNo
		{
			get
			{
				return this._PortNo;
			}
			set
			{
				if ((this._PortNo != value))
				{
					this.OnPortNoChanging(value);
					this.SendPropertyChanging();
					this._PortNo = value;
					this.SendPropertyChanged("PortNo");
					this.OnPortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IPAddress", Storage="_IPAddress1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IPAddress1
		{
			get
			{
				return this._IPAddress1;
			}
			set
			{
				if ((this._IPAddress1 != value))
				{
					this.OnIPAddress1Changing(value);
					this.SendPropertyChanging();
					this._IPAddress1 = value;
					this.SendPropertyChanged("IPAddress1");
					this.OnIPAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress_Sort", DbType="VarChar(50)")]
		public string IPAddress_Sort
		{
			get
			{
				return this._IPAddress_Sort;
			}
			set
			{
				if ((this._IPAddress_Sort != value))
				{
					this.OnIPAddress_SortChanging(value);
					this.SendPropertyChanging();
					this._IPAddress_Sort = value;
					this.SendPropertyChanged("IPAddress_Sort");
					this.OnIPAddress_SortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubnetMask", DbType="VarChar(50)")]
		public string SubnetMask
		{
			get
			{
				return this._SubnetMask;
			}
			set
			{
				if ((this._SubnetMask != value))
				{
					this.OnSubnetMaskChanging(value);
					this.SendPropertyChanging();
					this._SubnetMask = value;
					this.SendPropertyChanged("SubnetMask");
					this.OnSubnetMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubnetMask_Sort", DbType="VarChar(50)")]
		public string SubnetMask_Sort
		{
			get
			{
				return this._SubnetMask_Sort;
			}
			set
			{
				if ((this._SubnetMask_Sort != value))
				{
					this.OnSubnetMask_SortChanging(value);
					this.SendPropertyChanging();
					this._SubnetMask_Sort = value;
					this.SendPropertyChanged("SubnetMask_Sort");
					this.OnSubnetMask_SortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GatewayAddress", DbType="VarChar(50)")]
		public string GatewayAddress
		{
			get
			{
				return this._GatewayAddress;
			}
			set
			{
				if ((this._GatewayAddress != value))
				{
					this.OnGatewayAddressChanging(value);
					this.SendPropertyChanging();
					this._GatewayAddress = value;
					this.SendPropertyChanged("GatewayAddress");
					this.OnGatewayAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GatewayAddress_Sort", DbType="VarChar(50)")]
		public string GatewayAddress_Sort
		{
			get
			{
				return this._GatewayAddress_Sort;
			}
			set
			{
				if ((this._GatewayAddress_Sort != value))
				{
					this.OnGatewayAddress_SortChanging(value);
					this.SendPropertyChanging();
					this._GatewayAddress_Sort = value;
					this.SendPropertyChanged("GatewayAddress_Sort");
					this.OnGatewayAddress_SortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryDNSName", DbType="VarChar(50)")]
		public string PrimaryDNSName
		{
			get
			{
				return this._PrimaryDNSName;
			}
			set
			{
				if ((this._PrimaryDNSName != value))
				{
					this.OnPrimaryDNSNameChanging(value);
					this.SendPropertyChanging();
					this._PrimaryDNSName = value;
					this.SendPropertyChanged("PrimaryDNSName");
					this.OnPrimaryDNSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryDNSAddress", DbType="VarChar(50)")]
		public string PrimaryDNSAddress
		{
			get
			{
				return this._PrimaryDNSAddress;
			}
			set
			{
				if ((this._PrimaryDNSAddress != value))
				{
					this.OnPrimaryDNSAddressChanging(value);
					this.SendPropertyChanging();
					this._PrimaryDNSAddress = value;
					this.SendPropertyChanged("PrimaryDNSAddress");
					this.OnPrimaryDNSAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryDNSAddress_Sort", DbType="VarChar(50)")]
		public string PrimaryDNSAddress_Sort
		{
			get
			{
				return this._PrimaryDNSAddress_Sort;
			}
			set
			{
				if ((this._PrimaryDNSAddress_Sort != value))
				{
					this.OnPrimaryDNSAddress_SortChanging(value);
					this.SendPropertyChanging();
					this._PrimaryDNSAddress_Sort = value;
					this.SendPropertyChanged("PrimaryDNSAddress_Sort");
					this.OnPrimaryDNSAddress_SortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryDNSName", DbType="VarChar(50)")]
		public string SecondaryDNSName
		{
			get
			{
				return this._SecondaryDNSName;
			}
			set
			{
				if ((this._SecondaryDNSName != value))
				{
					this.OnSecondaryDNSNameChanging(value);
					this.SendPropertyChanging();
					this._SecondaryDNSName = value;
					this.SendPropertyChanged("SecondaryDNSName");
					this.OnSecondaryDNSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryDNSAddress", DbType="VarChar(50)")]
		public string SecondaryDNSAddress
		{
			get
			{
				return this._SecondaryDNSAddress;
			}
			set
			{
				if ((this._SecondaryDNSAddress != value))
				{
					this.OnSecondaryDNSAddressChanging(value);
					this.SendPropertyChanging();
					this._SecondaryDNSAddress = value;
					this.SendPropertyChanged("SecondaryDNSAddress");
					this.OnSecondaryDNSAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryDNSAddress_Sort", DbType="VarChar(50)")]
		public string SecondaryDNSAddress_Sort
		{
			get
			{
				return this._SecondaryDNSAddress_Sort;
			}
			set
			{
				if ((this._SecondaryDNSAddress_Sort != value))
				{
					this.OnSecondaryDNSAddress_SortChanging(value);
					this.SendPropertyChanging();
					this._SecondaryDNSAddress_Sort = value;
					this.SendPropertyChanged("SecondaryDNSAddress_Sort");
					this.OnSecondaryDNSAddress_SortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAddress", DbType="VarChar(50)")]
		public string MACAddress
		{
			get
			{
				return this._MACAddress;
			}
			set
			{
				if ((this._MACAddress != value))
				{
					this.OnMACAddressChanging(value);
					this.SendPropertyChanging();
					this._MACAddress = value;
					this.SendPropertyChanged("MACAddress");
					this.OnMACAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VLAN", DbType="VarChar(50)")]
		public string VLAN
		{
			get
			{
				return this._VLAN;
			}
			set
			{
				if ((this._VLAN != value))
				{
					this.OnVLANChanging(value);
					this.SendPropertyChanging();
					this._VLAN = value;
					this.SendPropertyChanged("VLAN");
					this.OnVLANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNSName", DbType="VarChar(50)")]
		public string DNSName
		{
			get
			{
				return this._DNSName;
			}
			set
			{
				if ((this._DNSName != value))
				{
					this.OnDNSNameChanging(value);
					this.SendPropertyChanging();
					this._DNSName = value;
					this.SendPropertyChanged("DNSName");
					this.OnDNSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPFunction", DbType="Int")]
		public System.Nullable<int> IPFunction
		{
			get
			{
				return this._IPFunction;
			}
			set
			{
				if ((this._IPFunction != value))
				{
					this.OnIPFunctionChanging(value);
					this.SendPropertyChanging();
					this._IPFunction = value;
					this.SendPropertyChanged("IPFunction");
					this.OnIPFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddressNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IPAddressNo
		{
			get
			{
				return this._IPAddressNo;
			}
			set
			{
				if ((this._IPAddressNo != value))
				{
					this.OnIPAddressNoChanging(value);
					this.SendPropertyChanging();
					this._IPAddressNo = value;
					this.SendPropertyChanged("IPAddressNo");
					this.OnIPAddressNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IPFunction")]
	public partial class IPFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public IPFunction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Port")]
	public partial class Port : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortNo;
		
		private System.Nullable<int> _PortOrder;
		
		private string _PortName;
		
		private System.Nullable<int> _EquipmentNo;
		
		private System.Nullable<int> _PortType;
		
		private System.Nullable<int> _PortStatus;
		
		private System.Nullable<int> _PortSpeed;
		
		private System.Nullable<int> _PortPower;
		
		private System.Nullable<int> _RearPortStatus;
		
		private System.Nullable<int> _StatusFlag;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
		private System.Nullable<int> _UplinkFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortNoChanging(int value);
    partial void OnPortNoChanged();
    partial void OnPortOrderChanging(System.Nullable<int> value);
    partial void OnPortOrderChanged();
    partial void OnPortNameChanging(string value);
    partial void OnPortNameChanged();
    partial void OnEquipmentNoChanging(System.Nullable<int> value);
    partial void OnEquipmentNoChanged();
    partial void OnPortTypeChanging(System.Nullable<int> value);
    partial void OnPortTypeChanged();
    partial void OnPortStatusChanging(System.Nullable<int> value);
    partial void OnPortStatusChanged();
    partial void OnPortSpeedChanging(System.Nullable<int> value);
    partial void OnPortSpeedChanged();
    partial void OnPortPowerChanging(System.Nullable<int> value);
    partial void OnPortPowerChanged();
    partial void OnRearPortStatusChanging(System.Nullable<int> value);
    partial void OnRearPortStatusChanged();
    partial void OnStatusFlagChanging(System.Nullable<int> value);
    partial void OnStatusFlagChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    partial void OnUplinkFlagChanging(System.Nullable<int> value);
    partial void OnUplinkFlagChanged();
    #endregion
		
		public Port()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortNo
		{
			get
			{
				return this._PortNo;
			}
			set
			{
				if ((this._PortNo != value))
				{
					this.OnPortNoChanging(value);
					this.SendPropertyChanging();
					this._PortNo = value;
					this.SendPropertyChanged("PortNo");
					this.OnPortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortOrder", DbType="Int")]
		public System.Nullable<int> PortOrder
		{
			get
			{
				return this._PortOrder;
			}
			set
			{
				if ((this._PortOrder != value))
				{
					this.OnPortOrderChanging(value);
					this.SendPropertyChanging();
					this._PortOrder = value;
					this.SendPropertyChanged("PortOrder");
					this.OnPortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortName", DbType="VarChar(50)")]
		public string PortName
		{
			get
			{
				return this._PortName;
			}
			set
			{
				if ((this._PortName != value))
				{
					this.OnPortNameChanging(value);
					this.SendPropertyChanging();
					this._PortName = value;
					this.SendPropertyChanged("PortName");
					this.OnPortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentNo", DbType="Int")]
		public System.Nullable<int> EquipmentNo
		{
			get
			{
				return this._EquipmentNo;
			}
			set
			{
				if ((this._EquipmentNo != value))
				{
					this.OnEquipmentNoChanging(value);
					this.SendPropertyChanging();
					this._EquipmentNo = value;
					this.SendPropertyChanged("EquipmentNo");
					this.OnEquipmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortType", DbType="Int")]
		public System.Nullable<int> PortType
		{
			get
			{
				return this._PortType;
			}
			set
			{
				if ((this._PortType != value))
				{
					this.OnPortTypeChanging(value);
					this.SendPropertyChanging();
					this._PortType = value;
					this.SendPropertyChanged("PortType");
					this.OnPortTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortStatus", DbType="Int")]
		public System.Nullable<int> PortStatus
		{
			get
			{
				return this._PortStatus;
			}
			set
			{
				if ((this._PortStatus != value))
				{
					this.OnPortStatusChanging(value);
					this.SendPropertyChanging();
					this._PortStatus = value;
					this.SendPropertyChanged("PortStatus");
					this.OnPortStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortSpeed", DbType="Int")]
		public System.Nullable<int> PortSpeed
		{
			get
			{
				return this._PortSpeed;
			}
			set
			{
				if ((this._PortSpeed != value))
				{
					this.OnPortSpeedChanging(value);
					this.SendPropertyChanging();
					this._PortSpeed = value;
					this.SendPropertyChanged("PortSpeed");
					this.OnPortSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortPower", DbType="Int")]
		public System.Nullable<int> PortPower
		{
			get
			{
				return this._PortPower;
			}
			set
			{
				if ((this._PortPower != value))
				{
					this.OnPortPowerChanging(value);
					this.SendPropertyChanging();
					this._PortPower = value;
					this.SendPropertyChanged("PortPower");
					this.OnPortPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RearPortStatus", DbType="Int")]
		public System.Nullable<int> RearPortStatus
		{
			get
			{
				return this._RearPortStatus;
			}
			set
			{
				if ((this._RearPortStatus != value))
				{
					this.OnRearPortStatusChanging(value);
					this.SendPropertyChanging();
					this._RearPortStatus = value;
					this.SendPropertyChanged("RearPortStatus");
					this.OnRearPortStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="Int")]
		public System.Nullable<int> StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2048)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UplinkFlag", DbType="Int")]
		public System.Nullable<int> UplinkFlag
		{
			get
			{
				return this._UplinkFlag;
			}
			set
			{
				if ((this._UplinkFlag != value))
				{
					this.OnUplinkFlagChanging(value);
					this.SendPropertyChanging();
					this._UplinkFlag = value;
					this.SendPropertyChanged("UplinkFlag");
					this.OnUplinkFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortType")]
	public partial class PortType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<int> _DataPowerFlag;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDataPowerFlagChanging(System.Nullable<int> value);
    partial void OnDataPowerFlagChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public PortType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPowerFlag", DbType="Int")]
		public System.Nullable<int> DataPowerFlag
		{
			get
			{
				return this._DataPowerFlag;
			}
			set
			{
				if ((this._DataPowerFlag != value))
				{
					this.OnDataPowerFlagChanging(value);
					this.SendPropertyChanging();
					this._DataPowerFlag = value;
					this.SendPropertyChanged("DataPowerFlag");
					this.OnDataPowerFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Building")]
	public partial class Building : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingNo;
		
		private string _BuildingName;
		
		private string _Notes;
		
		private System.Nullable<int> _StatusFlag;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingNoChanging(int value);
    partial void OnBuildingNoChanged();
    partial void OnBuildingNameChanging(string value);
    partial void OnBuildingNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusFlagChanging(System.Nullable<int> value);
    partial void OnStatusFlagChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public Building()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuildingNo
		{
			get
			{
				return this._BuildingNo;
			}
			set
			{
				if ((this._BuildingNo != value))
				{
					this.OnBuildingNoChanging(value);
					this.SendPropertyChanging();
					this._BuildingNo = value;
					this.SendPropertyChanged("BuildingNo");
					this.OnBuildingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", DbType="VarChar(50)")]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this.OnBuildingNameChanging(value);
					this.SendPropertyChanging();
					this._BuildingName = value;
					this.SendPropertyChanged("BuildingName");
					this.OnBuildingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="Int")]
		public System.Nullable<int> StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteNo;
		
		private string _SiteName;
		
		private string _Organisation;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Town;
		
		private string _County;
		
		private string _Postcode;
		
		private string _Country;
		
		private string _Notes;
		
		private System.Nullable<byte> _StatusFlag;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteNoChanging(int value);
    partial void OnSiteNoChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnOrganisationChanging(string value);
    partial void OnOrganisationChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnStatusFlagChanging(System.Nullable<byte> value);
    partial void OnStatusFlagChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public Site()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteNo
		{
			get
			{
				return this._SiteNo;
			}
			set
			{
				if ((this._SiteNo != value))
				{
					this.OnSiteNoChanging(value);
					this.SendPropertyChanging();
					this._SiteNo = value;
					this.SendPropertyChanged("SiteNo");
					this.OnSiteNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="VarChar(50)")]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation", DbType="VarChar(50)")]
		public string Organisation
		{
			get
			{
				return this._Organisation;
			}
			set
			{
				if ((this._Organisation != value))
				{
					this.OnOrganisationChanging(value);
					this.SendPropertyChanging();
					this._Organisation = value;
					this.SendPropertyChanged("Organisation");
					this.OnOrganisationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="VarChar(50)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(50)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(10)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(2048)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="TinyInt")]
		public System.Nullable<byte> StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisioTemplateShape")]
	public partial class VisioTemplateShape : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public VisioTemplateShape()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortPower")]
	public partial class PortPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public PortPower()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortSpeed")]
	public partial class PortSpeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public PortSpeed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortStatus")]
	public partial class PortStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public PortStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortTrace")]
	public partial class PortTrace
	{
		
		private string _SessionID;
		
		private System.Nullable<int> _StartPortNo;
		
		private System.Nullable<int> _PositionNo;
		
		private System.Nullable<int> _LinkCode;
		
		private string _LinkType;
		
		private string _FromDeviceName;
		
		private System.Nullable<int> _FromDeviceNo;
		
		private string _FromPortName;
		
		private System.Nullable<int> _FromPortNo;
		
		private string _ToDeviceName;
		
		private System.Nullable<int> _ToDeviceNo;
		
		private string _ToPortName;
		
		private System.Nullable<int> _ToPortNo;
		
		private System.Nullable<int> _CableLength;
		
		private string _CableID;
		
		private System.Nullable<int> _UserNo;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		public PortTrace()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this._SessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPortNo", DbType="Int")]
		public System.Nullable<int> StartPortNo
		{
			get
			{
				return this._StartPortNo;
			}
			set
			{
				if ((this._StartPortNo != value))
				{
					this._StartPortNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionNo", DbType="Int")]
		public System.Nullable<int> PositionNo
		{
			get
			{
				return this._PositionNo;
			}
			set
			{
				if ((this._PositionNo != value))
				{
					this._PositionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkCode", DbType="Int")]
		public System.Nullable<int> LinkCode
		{
			get
			{
				return this._LinkCode;
			}
			set
			{
				if ((this._LinkCode != value))
				{
					this._LinkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkType", DbType="VarChar(50)")]
		public string LinkType
		{
			get
			{
				return this._LinkType;
			}
			set
			{
				if ((this._LinkType != value))
				{
					this._LinkType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDeviceName", DbType="VarChar(50)")]
		public string FromDeviceName
		{
			get
			{
				return this._FromDeviceName;
			}
			set
			{
				if ((this._FromDeviceName != value))
				{
					this._FromDeviceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDeviceNo", DbType="Int")]
		public System.Nullable<int> FromDeviceNo
		{
			get
			{
				return this._FromDeviceNo;
			}
			set
			{
				if ((this._FromDeviceNo != value))
				{
					this._FromDeviceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPortName", DbType="VarChar(50)")]
		public string FromPortName
		{
			get
			{
				return this._FromPortName;
			}
			set
			{
				if ((this._FromPortName != value))
				{
					this._FromPortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPortNo", DbType="Int")]
		public System.Nullable<int> FromPortNo
		{
			get
			{
				return this._FromPortNo;
			}
			set
			{
				if ((this._FromPortNo != value))
				{
					this._FromPortNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDeviceName", DbType="VarChar(50)")]
		public string ToDeviceName
		{
			get
			{
				return this._ToDeviceName;
			}
			set
			{
				if ((this._ToDeviceName != value))
				{
					this._ToDeviceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDeviceNo", DbType="Int")]
		public System.Nullable<int> ToDeviceNo
		{
			get
			{
				return this._ToDeviceNo;
			}
			set
			{
				if ((this._ToDeviceNo != value))
				{
					this._ToDeviceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPortName", DbType="VarChar(50)")]
		public string ToPortName
		{
			get
			{
				return this._ToPortName;
			}
			set
			{
				if ((this._ToPortName != value))
				{
					this._ToPortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPortNo", DbType="Int")]
		public System.Nullable<int> ToPortNo
		{
			get
			{
				return this._ToPortNo;
			}
			set
			{
				if ((this._ToPortNo != value))
				{
					this._ToPortNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableLength", DbType="Int")]
		public System.Nullable<int> CableLength
		{
			get
			{
				return this._CableLength;
			}
			set
			{
				if ((this._CableLength != value))
				{
					this._CableLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableID", DbType="VarChar(50)")]
		public string CableID
		{
			get
			{
				return this._CableID;
			}
			set
			{
				if ((this._CableID != value))
				{
					this._CableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Int")]
		public System.Nullable<int> UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeType")]
	public partial class AttributeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code;
		
		private string _Description;
		
		private System.Nullable<int> _AttributeGroup;
		
		private System.Nullable<int> _ValueType;
		
		private System.Nullable<int> _LookupType;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAttributeGroupChanging(System.Nullable<int> value);
    partial void OnAttributeGroupChanged();
    partial void OnValueTypeChanging(System.Nullable<int> value);
    partial void OnValueTypeChanged();
    partial void OnLookupTypeChanging(System.Nullable<int> value);
    partial void OnLookupTypeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public AttributeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeGroup", DbType="Int")]
		public System.Nullable<int> AttributeGroup
		{
			get
			{
				return this._AttributeGroup;
			}
			set
			{
				if ((this._AttributeGroup != value))
				{
					this.OnAttributeGroupChanging(value);
					this.SendPropertyChanging();
					this._AttributeGroup = value;
					this.SendPropertyChanged("AttributeGroup");
					this.OnAttributeGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueType", DbType="Int")]
		public System.Nullable<int> ValueType
		{
			get
			{
				return this._ValueType;
			}
			set
			{
				if ((this._ValueType != value))
				{
					this.OnValueTypeChanging(value);
					this.SendPropertyChanging();
					this._ValueType = value;
					this.SendPropertyChanged("ValueType");
					this.OnValueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupType", DbType="Int")]
		public System.Nullable<int> LookupType
		{
			get
			{
				return this._LookupType;
			}
			set
			{
				if ((this._LookupType != value))
				{
					this.OnLookupTypeChanging(value);
					this.SendPropertyChanging();
					this._LookupType = value;
					this.SendPropertyChanged("LookupType");
					this.OnLookupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentAttribute")]
	public partial class EquipmentAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EquipmentNo;
		
		private int _AttributeCode;
		
		private string _AttributeString;
		
		private System.Nullable<double> _AttributeValue;
		
		private System.Nullable<System.DateTime> _AttributeDate;
		
		private string _ReportValue;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentNoChanging(int value);
    partial void OnEquipmentNoChanged();
    partial void OnAttributeCodeChanging(int value);
    partial void OnAttributeCodeChanged();
    partial void OnAttributeStringChanging(string value);
    partial void OnAttributeStringChanged();
    partial void OnAttributeValueChanging(System.Nullable<double> value);
    partial void OnAttributeValueChanged();
    partial void OnAttributeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAttributeDateChanged();
    partial void OnReportValueChanging(string value);
    partial void OnReportValueChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    #endregion
		
		public EquipmentAttribute()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EquipmentNo
		{
			get
			{
				return this._EquipmentNo;
			}
			set
			{
				if ((this._EquipmentNo != value))
				{
					this.OnEquipmentNoChanging(value);
					this.SendPropertyChanging();
					this._EquipmentNo = value;
					this.SendPropertyChanged("EquipmentNo");
					this.OnEquipmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttributeCode
		{
			get
			{
				return this._AttributeCode;
			}
			set
			{
				if ((this._AttributeCode != value))
				{
					this.OnAttributeCodeChanging(value);
					this.SendPropertyChanging();
					this._AttributeCode = value;
					this.SendPropertyChanged("AttributeCode");
					this.OnAttributeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeString", DbType="VarChar(50)")]
		public string AttributeString
		{
			get
			{
				return this._AttributeString;
			}
			set
			{
				if ((this._AttributeString != value))
				{
					this.OnAttributeStringChanging(value);
					this.SendPropertyChanging();
					this._AttributeString = value;
					this.SendPropertyChanged("AttributeString");
					this.OnAttributeStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValue", DbType="Float")]
		public System.Nullable<double> AttributeValue
		{
			get
			{
				return this._AttributeValue;
			}
			set
			{
				if ((this._AttributeValue != value))
				{
					this.OnAttributeValueChanging(value);
					this.SendPropertyChanging();
					this._AttributeValue = value;
					this.SendPropertyChanged("AttributeValue");
					this.OnAttributeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttributeDate
		{
			get
			{
				return this._AttributeDate;
			}
			set
			{
				if ((this._AttributeDate != value))
				{
					this.OnAttributeDateChanging(value);
					this.SendPropertyChanging();
					this._AttributeDate = value;
					this.SendPropertyChanged("AttributeDate");
					this.OnAttributeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportValue", DbType="VarChar(50)")]
		public string ReportValue
		{
			get
			{
				return this._ReportValue;
			}
			set
			{
				if ((this._ReportValue != value))
				{
					this.OnReportValueChanging(value);
					this.SendPropertyChanging();
					this._ReportValue = value;
					this.SendPropertyChanged("ReportValue");
					this.OnReportValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="VarChar(50)")]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_SubSection
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:29
	/// 
	/// Remark: Use this class to write custom code.
	/// </summary>
	public class RFI_SubSection_DAL : RFI_SubSection_Base_DAL
	{
		/// <summary>
		/// Constructor
		/// </summary>
		private RFI_SubSection_DAL() { }
        /// <summary>
        /// Fill entity list
        /// </summary>
        public static DataTable Fill(int ProjectReference,string spName)
        {
            DataSet dsRFI_SubSection = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, spName, new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ProjectReference", ProjectReference) });
            return dsRFI_SubSection.Tables[0];
            //return Fill(ProjectReference, 0, spName);
        }

        /// <summary>
        /// Fill entity list
        /// </summary>
        public static DataTable Fill(int ProjectReference,int WorkSheetID, string spName)
        {
            DataSet dsRFI_SubSection = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, spName, new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ProjectReference", ProjectReference), new System.Data.SqlClient.SqlParameter("@WorkSheetID", WorkSheetID) });
            return dsRFI_SubSection.Tables[0];
        }

        /// <summary>
        /// Fill entity list WRT SUBSECTION TYPE
        /// 1 QUESTIONARRIE 2 BOM 3 SCORING
        /// </summary>
        public static DataTable Fill(int subsectionType,int projectReference)
        {
            DataSet dsRFI_SubSection = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_FILL_TYPE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@SUBSECTIONTYPE", subsectionType),new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE",projectReference) });
            return dsRFI_SubSection.Tables[0];
        }

        /// <summary>
        /// Check if entity exists wrt subsectionname
        /// </summary>
        public static bool Exists(string subsectionName, int subsectionType,int projectReference)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTIONNAME_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@SUBSECTIONNAME", subsectionName), new System.Data.SqlClient.SqlParameter("@SUBSECTIONTYPE", subsectionType),new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE",projectReference) })) > 0;
        }
        public static int Delete(int id)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString,CommandType.StoredProcedure,"dbo.Deffinity_DeleteRFIBOMTypeSubSection",new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) })) ;
        }
        public static int SubDelete(string sp,int id)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, sp, new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) }));
        }
        //
	}
}

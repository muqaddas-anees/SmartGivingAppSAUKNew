#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryMgt.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeffinityFirstData")]
	public partial class InventoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSite(InventoryMgt.Entity.Site instance);
    partial void UpdateSite(InventoryMgt.Entity.Site instance);
    partial void DeleteSite(InventoryMgt.Entity.Site instance);
    partial void InsertAssignedSitesToPortfolio(InventoryMgt.Entity.AssignedSitesToPortfolio instance);
    partial void UpdateAssignedSitesToPortfolio(InventoryMgt.Entity.AssignedSitesToPortfolio instance);
    partial void DeleteAssignedSitesToPortfolio(InventoryMgt.Entity.AssignedSitesToPortfolio instance);
    partial void InsertGoodsReceipt(InventoryMgt.Entity.GoodsReceipt instance);
    partial void UpdateGoodsReceipt(InventoryMgt.Entity.GoodsReceipt instance);
    partial void DeleteGoodsReceipt(InventoryMgt.Entity.GoodsReceipt instance);
    partial void InsertServiceCatalog_category(InventoryMgt.Entity.ServiceCatalog_category instance);
    partial void UpdateServiceCatalog_category(InventoryMgt.Entity.ServiceCatalog_category instance);
    partial void DeleteServiceCatalog_category(InventoryMgt.Entity.ServiceCatalog_category instance);
    partial void InsertGoodsItem_StorageDetail(InventoryMgt.Entity.GoodsItem_StorageDetail instance);
    partial void UpdateGoodsItem_StorageDetail(InventoryMgt.Entity.GoodsItem_StorageDetail instance);
    partial void DeleteGoodsItem_StorageDetail(InventoryMgt.Entity.GoodsItem_StorageDetail instance);
    partial void InsertJInventoryStockItem(InventoryMgt.Entity.JInventoryStockItem instance);
    partial void UpdateJInventoryStockItem(InventoryMgt.Entity.JInventoryStockItem instance);
    partial void DeleteJInventoryStockItem(InventoryMgt.Entity.JInventoryStockItem instance);
    partial void InsertManufacturer(InventoryMgt.Entity.Manufacturer instance);
    partial void UpdateManufacturer(InventoryMgt.Entity.Manufacturer instance);
    partial void DeleteManufacturer(InventoryMgt.Entity.Manufacturer instance);
    partial void InsertGoodsStorageDetail(InventoryMgt.Entity.GoodsStorageDetail instance);
    partial void UpdateGoodsStorageDetail(InventoryMgt.Entity.GoodsStorageDetail instance);
    partial void DeleteGoodsStorageDetail(InventoryMgt.Entity.GoodsStorageDetail instance);
    partial void InsertGridFieldConfigurator(InventoryMgt.Entity.GridFieldConfigurator instance);
    partial void UpdateGridFieldConfigurator(InventoryMgt.Entity.GridFieldConfigurator instance);
    partial void DeleteGridFieldConfigurator(InventoryMgt.Entity.GridFieldConfigurator instance);
    partial void InsertInventory_Area(InventoryMgt.Entity.Inventory_Area instance);
    partial void UpdateInventory_Area(InventoryMgt.Entity.Inventory_Area instance);
    partial void DeleteInventory_Area(InventoryMgt.Entity.Inventory_Area instance);
    partial void InsertInventory_AssociatedBarcode(InventoryMgt.Entity.Inventory_AssociatedBarcode instance);
    partial void UpdateInventory_AssociatedBarcode(InventoryMgt.Entity.Inventory_AssociatedBarcode instance);
    partial void DeleteInventory_AssociatedBarcode(InventoryMgt.Entity.Inventory_AssociatedBarcode instance);
    partial void InsertInventory_BatchCustomData(InventoryMgt.Entity.Inventory_BatchCustomData instance);
    partial void UpdateInventory_BatchCustomData(InventoryMgt.Entity.Inventory_BatchCustomData instance);
    partial void DeleteInventory_BatchCustomData(InventoryMgt.Entity.Inventory_BatchCustomData instance);
    partial void InsertInventory_Bin(InventoryMgt.Entity.Inventory_Bin instance);
    partial void UpdateInventory_Bin(InventoryMgt.Entity.Inventory_Bin instance);
    partial void DeleteInventory_Bin(InventoryMgt.Entity.Inventory_Bin instance);
    partial void InsertInventory_Condtion(InventoryMgt.Entity.Inventory_Condtion instance);
    partial void UpdateInventory_Condtion(InventoryMgt.Entity.Inventory_Condtion instance);
    partial void DeleteInventory_Condtion(InventoryMgt.Entity.Inventory_Condtion instance);
    partial void InsertInventory_DistributionList(InventoryMgt.Entity.Inventory_DistributionList instance);
    partial void UpdateInventory_DistributionList(InventoryMgt.Entity.Inventory_DistributionList instance);
    partial void DeleteInventory_DistributionList(InventoryMgt.Entity.Inventory_DistributionList instance);
    partial void InsertInventory_Locatin(InventoryMgt.Entity.Inventory_Locatin instance);
    partial void UpdateInventory_Locatin(InventoryMgt.Entity.Inventory_Locatin instance);
    partial void DeleteInventory_Locatin(InventoryMgt.Entity.Inventory_Locatin instance);
    partial void InsertInventory_Shelf(InventoryMgt.Entity.Inventory_Shelf instance);
    partial void UpdateInventory_Shelf(InventoryMgt.Entity.Inventory_Shelf instance);
    partial void DeleteInventory_Shelf(InventoryMgt.Entity.Inventory_Shelf instance);
    partial void InsertInventory_SiteStorageDetail(InventoryMgt.Entity.Inventory_SiteStorageDetail instance);
    partial void UpdateInventory_SiteStorageDetail(InventoryMgt.Entity.Inventory_SiteStorageDetail instance);
    partial void DeleteInventory_SiteStorageDetail(InventoryMgt.Entity.Inventory_SiteStorageDetail instance);
    partial void InsertInventory_Use(InventoryMgt.Entity.Inventory_Use instance);
    partial void UpdateInventory_Use(InventoryMgt.Entity.Inventory_Use instance);
    partial void DeleteInventory_Use(InventoryMgt.Entity.Inventory_Use instance);
    partial void InsertInventoryAdditionalInfo(InventoryMgt.Entity.InventoryAdditionalInfo instance);
    partial void UpdateInventoryAdditionalInfo(InventoryMgt.Entity.InventoryAdditionalInfo instance);
    partial void DeleteInventoryAdditionalInfo(InventoryMgt.Entity.InventoryAdditionalInfo instance);
    partial void InsertinventoryCustomField(InventoryMgt.Entity.inventoryCustomField instance);
    partial void UpdateinventoryCustomField(InventoryMgt.Entity.inventoryCustomField instance);
    partial void DeleteinventoryCustomField(InventoryMgt.Entity.inventoryCustomField instance);
    partial void InsertInventoryFieldsConfig(InventoryMgt.Entity.InventoryFieldsConfig instance);
    partial void UpdateInventoryFieldsConfig(InventoryMgt.Entity.InventoryFieldsConfig instance);
    partial void DeleteInventoryFieldsConfig(InventoryMgt.Entity.InventoryFieldsConfig instance);
    partial void InsertInventoryFieldsConfigData(InventoryMgt.Entity.InventoryFieldsConfigData instance);
    partial void UpdateInventoryFieldsConfigData(InventoryMgt.Entity.InventoryFieldsConfigData instance);
    partial void DeleteInventoryFieldsConfigData(InventoryMgt.Entity.InventoryFieldsConfigData instance);
    partial void InsertInventoryManager(InventoryMgt.Entity.InventoryManager instance);
    partial void UpdateInventoryManager(InventoryMgt.Entity.InventoryManager instance);
    partial void DeleteInventoryManager(InventoryMgt.Entity.InventoryManager instance);
    partial void InsertInventoryManager_PSDProduct(InventoryMgt.Entity.InventoryManager_PSDProduct instance);
    partial void UpdateInventoryManager_PSDProduct(InventoryMgt.Entity.InventoryManager_PSDProduct instance);
    partial void DeleteInventoryManager_PSDProduct(InventoryMgt.Entity.InventoryManager_PSDProduct instance);
    partial void InsertInventoryManager_UsageCustomData(InventoryMgt.Entity.InventoryManager_UsageCustomData instance);
    partial void UpdateInventoryManager_UsageCustomData(InventoryMgt.Entity.InventoryManager_UsageCustomData instance);
    partial void DeleteInventoryManager_UsageCustomData(InventoryMgt.Entity.InventoryManager_UsageCustomData instance);
    partial void InsertInventoryManagerJournal(InventoryMgt.Entity.InventoryManagerJournal instance);
    partial void UpdateInventoryManagerJournal(InventoryMgt.Entity.InventoryManagerJournal instance);
    partial void DeleteInventoryManagerJournal(InventoryMgt.Entity.InventoryManagerJournal instance);
    partial void InsertInventoryManagerTrack(InventoryMgt.Entity.InventoryManagerTrack instance);
    partial void UpdateInventoryManagerTrack(InventoryMgt.Entity.InventoryManagerTrack instance);
    partial void DeleteInventoryManagerTrack(InventoryMgt.Entity.InventoryManagerTrack instance);
    partial void InsertInventory_New_Stock(InventoryMgt.Entity.Inventory_New_Stock instance);
    partial void UpdateInventory_New_Stock(InventoryMgt.Entity.Inventory_New_Stock instance);
    partial void DeleteInventory_New_Stock(InventoryMgt.Entity.Inventory_New_Stock instance);
    partial void InsertInventory_Batch(InventoryMgt.Entity.Inventory_Batch instance);
    partial void UpdateInventory_Batch(InventoryMgt.Entity.Inventory_Batch instance);
    partial void DeleteInventory_Batch(InventoryMgt.Entity.Inventory_Batch instance);
    partial void InsertInventoryBatchOption(InventoryMgt.Entity.InventoryBatchOption instance);
    partial void UpdateInventoryBatchOption(InventoryMgt.Entity.InventoryBatchOption instance);
    partial void DeleteInventoryBatchOption(InventoryMgt.Entity.InventoryBatchOption instance);
    partial void InsertWarehouseDetail(InventoryMgt.Entity.WarehouseDetail instance);
    partial void UpdateWarehouseDetail(InventoryMgt.Entity.WarehouseDetail instance);
    partial void DeleteWarehouseDetail(InventoryMgt.Entity.WarehouseDetail instance);
    partial void InsertInventoryCategory(InventoryMgt.Entity.InventoryCategory instance);
    partial void UpdateInventoryCategory(InventoryMgt.Entity.InventoryCategory instance);
    partial void DeleteInventoryCategory(InventoryMgt.Entity.InventoryCategory instance);
    partial void InsertInventoryItemsAlloatment(InventoryMgt.Entity.InventoryItemsAlloatment instance);
    partial void UpdateInventoryItemsAlloatment(InventoryMgt.Entity.InventoryItemsAlloatment instance);
    partial void DeleteInventoryItemsAlloatment(InventoryMgt.Entity.InventoryItemsAlloatment instance);
    partial void InsertInventoryItemsTransfer(InventoryMgt.Entity.InventoryItemsTransfer instance);
    partial void UpdateInventoryItemsTransfer(InventoryMgt.Entity.InventoryItemsTransfer instance);
    partial void DeleteInventoryItemsTransfer(InventoryMgt.Entity.InventoryItemsTransfer instance);
    partial void InsertInventoryItem(InventoryMgt.Entity.InventoryItem instance);
    partial void UpdateInventoryItem(InventoryMgt.Entity.InventoryItem instance);
    partial void DeleteInventoryItem(InventoryMgt.Entity.InventoryItem instance);
    #endregion
		
		public InventoryDataContext() : 
				base(global::DeffinityManager.Properties.Settings.Default.DBstring, mappingSource)
		{
			OnCreated();
		}
		
		public InventoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InventoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InventoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InventoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Site> Sites
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Site>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.AssignedSitesToPortfolio> AssignedSitesToPortfolios
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.AssignedSitesToPortfolio>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.GoodsReceipt> GoodsReceipts
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.GoodsReceipt>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.ServiceCatalog_category> ServiceCatalog_categories
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.ServiceCatalog_category>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.GoodsItem_StorageDetail> GoodsItem_StorageDetails
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.GoodsItem_StorageDetail>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.JInventoryStockItem> JInventoryStockItems
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.JInventoryStockItem>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.v_Vendor> v_Vendors
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.v_Vendor>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.GoodsStorageDetail> GoodsStorageDetails
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.GoodsStorageDetail>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.GridFieldConfigurator> GridFieldConfigurators
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.GridFieldConfigurator>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Area> Inventory_Areas
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Area>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_AssociatedBarcode> Inventory_AssociatedBarcodes
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_AssociatedBarcode>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_BatchCustomData> Inventory_BatchCustomDatas
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_BatchCustomData>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Bin> Inventory_Bins
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Bin>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Condtion> Inventory_Condtions
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Condtion>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_DistributionList> Inventory_DistributionLists
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_DistributionList>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Locatin> Inventory_Locatins
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Locatin>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Shelf> Inventory_Shelfs
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Shelf>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_SiteStorageDetail> Inventory_SiteStorageDetails
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_SiteStorageDetail>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Use> Inventory_Uses
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Use>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryAdditionalInfo> InventoryAdditionalInfos
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryAdditionalInfo>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.inventoryCustomField> inventoryCustomFields
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.inventoryCustomField>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryFieldsConfig> InventoryFieldsConfigs
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryFieldsConfig>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryFieldsConfigData> InventoryFieldsConfigDatas
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryFieldsConfigData>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryManager> InventoryManagers
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryManager>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryManager_PSDProduct> InventoryManager_PSDProducts
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryManager_PSDProduct>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryManager_UsageCustomData> InventoryManager_UsageCustomDatas
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryManager_UsageCustomData>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryManagerJournal> InventoryManagerJournals
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryManagerJournal>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryManagerTrack> InventoryManagerTracks
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryManagerTrack>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryUploadList> InventoryUploadLists
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryUploadList>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_New_Stock> Inventory_New_Stocks
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_New_Stock>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.Inventory_Batch> Inventory_Batches
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.Inventory_Batch>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryBatchOption> InventoryBatchOptions
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryBatchOption>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.WarehouseDetail> WarehouseDetails
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.WarehouseDetail>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryCategory> InventoryCategories
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryCategory>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryItemsAlloatment> InventoryItemsAlloatments
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryItemsAlloatment>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryItemsTransfer> InventoryItemsTransfers
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryItemsTransfer>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.InventoryItem> InventoryItems
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.InventoryItem>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMgt.Entity.V_InventoryItem> V_InventoryItems
		{
			get
			{
				return this.GetTable<InventoryMgt.Entity.V_InventoryItem>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IM_GetProduct")]
		public int IM_GetProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerId", DbType="Int")] System.Nullable<int> customerId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryId", DbType="Int")] System.Nullable<int> categoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubcategoryId", DbType="Int")] System.Nullable<int> subcategoryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="Int")] System.Nullable<int> siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionType", DbType="NVarChar(50)")] string sectionType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerId, categoryId, subcategoryId, siteId, sectionType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InventoryManager_Insert")]
		public int InventoryManager_Insert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="Int")] System.Nullable<int> siteId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Qty", DbType="Int")] System.Nullable<int> qty, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReorderLevel", DbType="Int")] System.Nullable<int> reorderLevel, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionType", DbType="NVarChar(50)")] string sectionType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Categoery", DbType="Int")] System.Nullable<int> categoery, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubCategory", DbType="Int")] System.Nullable<int> subCategory, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PortfolioID", DbType="Int")] System.Nullable<int> portfolioID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QtyOnOrder", DbType="Int")] System.Nullable<int> qtyOnOrder, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpctArvlDate", DbType="Date")] System.Nullable<System.DateTime> expctArvlDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeadTime", DbType="Int")] System.Nullable<int> leadTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDescription", DbType="NVarChar(100)")] string itemDescription, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Supplier", DbType="Int")] System.Nullable<int> supplier, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartNumber", DbType="NVarChar(100)")] string partNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Image", DbType="UniqueIdentifier")] System.Nullable<System.Guid> image, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacturer", DbType="Int")] System.Nullable<int> manufacturer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOrdered", DbType="Date")] System.Nullable<System.DateTime> dateOrdered, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Barcode", DbType="NVarChar(100)")] string barcode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(MAX)")] string notes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Area", DbType="Int")] System.Nullable<int> area, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location", DbType="Int")] System.Nullable<int> location, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Shelf", DbType="Int")] System.Nullable<int> shelf, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bin", DbType="Int")] System.Nullable<int> bin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, productId, qty, reorderLevel, sectionType, categoery, subCategory, portfolioID, qtyOnOrder, expctArvlDate, leadTime, itemDescription, supplier, partNumber, image, manufacturer, dateOrdered, barcode, notes, area, location, shelf, bin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InventoryManager_Update")]
		public int InventoryManager_Update(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="Int")] System.Nullable<int> siteId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Qty", DbType="Int")] System.Nullable<int> qty, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReorderLevel", DbType="Int")] System.Nullable<int> reorderLevel, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SectionType", DbType="NVarChar(50)")] string sectionType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Categoery", DbType="Int")] System.Nullable<int> categoery, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubCategory", DbType="Int")] System.Nullable<int> subCategory, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PortfolioID", DbType="Int")] System.Nullable<int> portfolioID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QtyOnOrder", DbType="Int")] System.Nullable<int> qtyOnOrder, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpctArvlDate", DbType="Date")] System.Nullable<System.DateTime> expctArvlDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeadTime", DbType="Int")] System.Nullable<int> leadTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDescription", DbType="NVarChar(100)")] string itemDescription, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Image", DbType="UniqueIdentifier")] System.Nullable<System.Guid> image, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Supplier", DbType="Int")] System.Nullable<int> supplier, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacturer", DbType="Int")] System.Nullable<int> manufacturer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOrdered", DbType="Date")] System.Nullable<System.DateTime> dateOrdered, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Barcode", DbType="NVarChar(100)")] string barcode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(MAX)")] string notes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Area", DbType="Int")] System.Nullable<int> area, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location", DbType="Int")] System.Nullable<int> location, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Shelf", DbType="Int")] System.Nullable<int> shelf, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bin", DbType="Int")] System.Nullable<int> bin, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartNumber", DbType="NVarChar(200)")] string partNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, siteId, qty, reorderLevel, sectionType, categoery, subCategory, portfolioID, qtyOnOrder, expctArvlDate, leadTime, itemDescription, image, supplier, manufacturer, dateOrdered, barcode, notes, area, location, shelf, bin, partNumber);
			return ((int)(result.ReturnValue));
		}
	}
}
namespace InventoryMgt.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Site1;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<char> _Visible;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Postcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSite1Changing(string value);
    partial void OnSite1Changed();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnVisibleChanging(System.Nullable<char> value);
    partial void OnVisibleChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    #endregion
		
		public Site()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Site", Storage="_Site1", DbType="NVarChar(50)")]
		public string Site1
		{
			get
			{
				return this._Site1;
			}
			set
			{
				if ((this._Site1 != value))
				{
					this.OnSite1Changing(value);
					this.SendPropertyChanging();
					this._Site1 = value;
					this.SendPropertyChanged("Site1");
					this.OnSite1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Char(1)")]
		public System.Nullable<char> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(100)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignedSitesToPortfolio")]
	public partial class AssignedSitesToPortfolio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SiteID;
		
		private System.Nullable<int> _Portfolio;
		
		private System.Nullable<int> _CountryID;
		
		private System.Nullable<int> _CityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnPortfolioChanging(System.Nullable<int> value);
    partial void OnPortfolioChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    #endregion
		
		public AssignedSitesToPortfolio()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portfolio", DbType="Int")]
		public System.Nullable<int> Portfolio
		{
			get
			{
				return this._Portfolio;
			}
			set
			{
				if ((this._Portfolio != value))
				{
					this.OnPortfolioChanging(value);
					this.SendPropertyChanging();
					this._Portfolio = value;
					this.SendPropertyChanged("Portfolio");
					this.OnPortfolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsReceipt")]
	public partial class GoodsReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Item;
		
		private System.Nullable<int> _VendorID;
		
		private System.Nullable<System.DateTime> _ExpectedShipmentDate;
		
		private System.Nullable<System.DateTime> _NextShipmentDate;
		
		private System.Nullable<double> _QtyOrdered;
		
		private System.Nullable<double> _QtyReceived;
		
		private string _Location;
		
		private System.Nullable<double> _OutStandingQty;
		
		private System.Nullable<bool> _AuthorizedPay;
		
		private string _Notes;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _ProjectReference;
		
		private System.Nullable<int> _Types;
		
		private System.Nullable<int> _BOMID;
		
		private string _InvoiceNumber;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _SubcategoryID;
		
		private string _Barcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    partial void OnExpectedShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedShipmentDateChanged();
    partial void OnNextShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextShipmentDateChanged();
    partial void OnQtyOrderedChanging(System.Nullable<double> value);
    partial void OnQtyOrderedChanged();
    partial void OnQtyReceivedChanging(System.Nullable<double> value);
    partial void OnQtyReceivedChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnOutStandingQtyChanging(System.Nullable<double> value);
    partial void OnOutStandingQtyChanged();
    partial void OnAuthorizedPayChanging(System.Nullable<bool> value);
    partial void OnAuthorizedPayChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnProjectReferenceChanging(System.Nullable<int> value);
    partial void OnProjectReferenceChanged();
    partial void OnTypesChanging(System.Nullable<int> value);
    partial void OnTypesChanged();
    partial void OnBOMIDChanging(System.Nullable<int> value);
    partial void OnBOMIDChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnSubcategoryIDChanging(System.Nullable<int> value);
    partial void OnSubcategoryIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    #endregion
		
		public GoodsReceipt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(100)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
		public System.Nullable<int> VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedShipmentDate
		{
			get
			{
				return this._ExpectedShipmentDate;
			}
			set
			{
				if ((this._ExpectedShipmentDate != value))
				{
					this.OnExpectedShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedShipmentDate = value;
					this.SendPropertyChanged("ExpectedShipmentDate");
					this.OnExpectedShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextShipmentDate
		{
			get
			{
				return this._NextShipmentDate;
			}
			set
			{
				if ((this._NextShipmentDate != value))
				{
					this.OnNextShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._NextShipmentDate = value;
					this.SendPropertyChanged("NextShipmentDate");
					this.OnNextShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyOrdered", DbType="Float")]
		public System.Nullable<double> QtyOrdered
		{
			get
			{
				return this._QtyOrdered;
			}
			set
			{
				if ((this._QtyOrdered != value))
				{
					this.OnQtyOrderedChanging(value);
					this.SendPropertyChanging();
					this._QtyOrdered = value;
					this.SendPropertyChanged("QtyOrdered");
					this.OnQtyOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyReceived", DbType="Float")]
		public System.Nullable<double> QtyReceived
		{
			get
			{
				return this._QtyReceived;
			}
			set
			{
				if ((this._QtyReceived != value))
				{
					this.OnQtyReceivedChanging(value);
					this.SendPropertyChanging();
					this._QtyReceived = value;
					this.SendPropertyChanged("QtyReceived");
					this.OnQtyReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutStandingQty", DbType="Float")]
		public System.Nullable<double> OutStandingQty
		{
			get
			{
				return this._OutStandingQty;
			}
			set
			{
				if ((this._OutStandingQty != value))
				{
					this.OnOutStandingQtyChanging(value);
					this.SendPropertyChanging();
					this._OutStandingQty = value;
					this.SendPropertyChanged("OutStandingQty");
					this.OnOutStandingQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedPay", DbType="Bit")]
		public System.Nullable<bool> AuthorizedPay
		{
			get
			{
				return this._AuthorizedPay;
			}
			set
			{
				if ((this._AuthorizedPay != value))
				{
					this.OnAuthorizedPayChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPay = value;
					this.SendPropertyChanged("AuthorizedPay");
					this.OnAuthorizedPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectReference", DbType="Int")]
		public System.Nullable<int> ProjectReference
		{
			get
			{
				return this._ProjectReference;
			}
			set
			{
				if ((this._ProjectReference != value))
				{
					this.OnProjectReferenceChanging(value);
					this.SendPropertyChanging();
					this._ProjectReference = value;
					this.SendPropertyChanged("ProjectReference");
					this.OnProjectReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Types", DbType="Int")]
		public System.Nullable<int> Types
		{
			get
			{
				return this._Types;
			}
			set
			{
				if ((this._Types != value))
				{
					this.OnTypesChanging(value);
					this.SendPropertyChanging();
					this._Types = value;
					this.SendPropertyChanged("Types");
					this.OnTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMID", DbType="Int")]
		public System.Nullable<int> BOMID
		{
			get
			{
				return this._BOMID;
			}
			set
			{
				if ((this._BOMID != value))
				{
					this.OnBOMIDChanging(value);
					this.SendPropertyChanging();
					this._BOMID = value;
					this.SendPropertyChanged("BOMID");
					this.OnBOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubcategoryID", DbType="Int")]
		public System.Nullable<int> SubcategoryID
		{
			get
			{
				return this._SubcategoryID;
			}
			set
			{
				if ((this._SubcategoryID != value))
				{
					this.OnSubcategoryIDChanging(value);
					this.SendPropertyChanging();
					this._SubcategoryID = value;
					this.SendPropertyChanged("SubcategoryID");
					this.OnSubcategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(100)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCatalog_category")]
	public partial class ServiceCatalog_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CategoryName;
		
		private System.Nullable<int> _MasterID;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _PortfolioID;
		
		private System.Nullable<int> _PageType;
		
		private System.Nullable<int> _VendorID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnMasterIDChanging(System.Nullable<int> value);
    partial void OnMasterIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnPortfolioIDChanging(System.Nullable<int> value);
    partial void OnPortfolioIDChanged();
    partial void OnPageTypeChanging(System.Nullable<int> value);
    partial void OnPageTypeChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    #endregion
		
		public ServiceCatalog_category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterID", DbType="Int")]
		public System.Nullable<int> MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int")]
		public System.Nullable<int> PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageType", DbType="Int")]
		public System.Nullable<int> PageType
		{
			get
			{
				return this._PageType;
			}
			set
			{
				if ((this._PageType != value))
				{
					this.OnPageTypeChanging(value);
					this.SendPropertyChanging();
					this._PageType = value;
					this.SendPropertyChanged("PageType");
					this.OnPageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
		public System.Nullable<int> VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsItem_StorageDetails")]
	public partial class GoodsItem_StorageDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BOMID;
		
		private string _Barcode;
		
		private System.Nullable<int> _SiteID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBOMIDChanging(System.Nullable<int> value);
    partial void OnBOMIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public GoodsItem_StorageDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMID", DbType="Int")]
		public System.Nullable<int> BOMID
		{
			get
			{
				return this._BOMID;
			}
			set
			{
				if ((this._BOMID != value))
				{
					this.OnBOMIDChanging(value);
					this.SendPropertyChanging();
					this._BOMID = value;
					this.SendPropertyChanged("BOMID");
					this.OnBOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(200)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="JOURNAL.InventoryStockItem")]
	public partial class JInventoryStockItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _InventoryID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _EntryDate;
		
		private System.Nullable<int> _Qty;
		
		private string _ReasonCode;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryIDChanging(System.Nullable<int> value);
    partial void OnInventoryIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDateChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnReasonCodeChanging(string value);
    partial void OnReasonCodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public JInventoryStockItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int")]
		public System.Nullable<int> InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonCode", DbType="NVarChar(250)")]
		public string ReasonCode
		{
			get
			{
				return this._ReasonCode;
			}
			set
			{
				if ((this._ReasonCode != value))
				{
					this.OnReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._ReasonCode = value;
					this.SendPropertyChanged("ReasonCode");
					this.OnReasonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Vendors")]
	public partial class v_Vendor
	{
		
		private int _VendorID;
		
		private int _ContractorID;
		
		private string _RegNo;
		
		private string _HQAddress;
		
		private string _VATNo;
		
		private string _Address;
		
		private string _PostCode;
		
		private int _ID;
		
		private string _ContractorName;
		
		private string _LoginName;
		
		private string _Password;
		
		private System.Nullable<int> _SID;
		
		private string _Status;
		
		private string _Details;
		
		private string _Type;
		
		private string _EmailAddress;
		
		private System.Nullable<int> _GroupOwnerID;
		
		private System.Nullable<int> _TimeApproveID;
		
		private System.Nullable<double> _NormalBuyingRate;
		
		private System.Nullable<double> _NormalSellingRate;
		
		private System.Nullable<double> _OvertimeBuyingRate;
		
		private System.Nullable<double> _OvertimeSellingRate;
		
		private string _Company;
		
		private string _ContactNumber;
		
		private System.Nullable<System.DateTime> _EmploymentStartDate;
		
		private System.Nullable<System.DateTime> _ReleaseDate;
		
		private System.Nullable<int> _ExpClassification;
		
		public v_Vendor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int NOT NULL")]
		public int VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this._VendorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorID", DbType="Int NOT NULL")]
		public int ContractorID
		{
			get
			{
				return this._ContractorID;
			}
			set
			{
				if ((this._ContractorID != value))
				{
					this._ContractorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNo", DbType="NVarChar(50)")]
		public string RegNo
		{
			get
			{
				return this._RegNo;
			}
			set
			{
				if ((this._RegNo != value))
				{
					this._RegNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HQAddress", DbType="NVarChar(MAX)")]
		public string HQAddress
		{
			get
			{
				return this._HQAddress;
			}
			set
			{
				if ((this._HQAddress != value))
				{
					this._HQAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATNo", DbType="NVarChar(50)")]
		public string VATNo
		{
			get
			{
				return this._VATNo;
			}
			set
			{
				if ((this._VATNo != value))
				{
					this._VATNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(50)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="NVarChar(100)")]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
			set
			{
				if ((this._ContractorName != value))
				{
					this._ContractorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this._LoginName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(80)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(500)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this._Details = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Char(15)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupOwnerID", DbType="Int")]
		public System.Nullable<int> GroupOwnerID
		{
			get
			{
				return this._GroupOwnerID;
			}
			set
			{
				if ((this._GroupOwnerID != value))
				{
					this._GroupOwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeApproveID", DbType="Int")]
		public System.Nullable<int> TimeApproveID
		{
			get
			{
				return this._TimeApproveID;
			}
			set
			{
				if ((this._TimeApproveID != value))
				{
					this._TimeApproveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalBuyingRate", DbType="Float")]
		public System.Nullable<double> NormalBuyingRate
		{
			get
			{
				return this._NormalBuyingRate;
			}
			set
			{
				if ((this._NormalBuyingRate != value))
				{
					this._NormalBuyingRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalSellingRate", DbType="Float")]
		public System.Nullable<double> NormalSellingRate
		{
			get
			{
				return this._NormalSellingRate;
			}
			set
			{
				if ((this._NormalSellingRate != value))
				{
					this._NormalSellingRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeBuyingRate", DbType="Float")]
		public System.Nullable<double> OvertimeBuyingRate
		{
			get
			{
				return this._OvertimeBuyingRate;
			}
			set
			{
				if ((this._OvertimeBuyingRate != value))
				{
					this._OvertimeBuyingRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvertimeSellingRate", DbType="Float")]
		public System.Nullable<double> OvertimeSellingRate
		{
			get
			{
				return this._OvertimeSellingRate;
			}
			set
			{
				if ((this._OvertimeSellingRate != value))
				{
					this._OvertimeSellingRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(20)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this._ContactNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmploymentStartDate
		{
			get
			{
				return this._EmploymentStartDate;
			}
			set
			{
				if ((this._EmploymentStartDate != value))
				{
					this._EmploymentStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this._ReleaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpClassification", DbType="Int")]
		public System.Nullable<int> ExpClassification
		{
			get
			{
				return this._ExpClassification;
			}
			set
			{
				if ((this._ExpClassification != value))
				{
					this._ExpClassification = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturer")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Manufacturer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsStorageDetails")]
	public partial class GoodsStorageDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BOMID;
		
		private System.Nullable<int> _SiteID;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<int> _UseID;
		
		private System.Nullable<int> _InventoryID;
		
		private System.Nullable<int> _CategoryId;
		
		private System.Nullable<int> _SubCategoryId;
		
		private string _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBOMIDChanging(System.Nullable<int> value);
    partial void OnBOMIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnUseIDChanging(System.Nullable<int> value);
    partial void OnUseIDChanged();
    partial void OnInventoryIDChanging(System.Nullable<int> value);
    partial void OnInventoryIDChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnSubCategoryIdChanging(System.Nullable<int> value);
    partial void OnSubCategoryIdChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    #endregion
		
		public GoodsStorageDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMID", DbType="Int")]
		public System.Nullable<int> BOMID
		{
			get
			{
				return this._BOMID;
			}
			set
			{
				if ((this._BOMID != value))
				{
					this.OnBOMIDChanging(value);
					this.SendPropertyChanging();
					this._BOMID = value;
					this.SendPropertyChanged("BOMID");
					this.OnBOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseID", DbType="Int")]
		public System.Nullable<int> UseID
		{
			get
			{
				return this._UseID;
			}
			set
			{
				if ((this._UseID != value))
				{
					this.OnUseIDChanging(value);
					this.SendPropertyChanging();
					this._UseID = value;
					this.SendPropertyChanged("UseID");
					this.OnUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int")]
		public System.Nullable<int> InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
		public System.Nullable<int> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryId", DbType="Int")]
		public System.Nullable<int> SubCategoryId
		{
			get
			{
				return this._SubCategoryId;
			}
			set
			{
				if ((this._SubCategoryId != value))
				{
					this.OnSubCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryId = value;
					this.SendPropertyChanged("SubCategoryId");
					this.OnSubCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="NVarChar(300)")]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GridFieldConfigurator")]
	public partial class GridFieldConfigurator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DeafaultName;
		
		private string _DisplayName;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<bool> _Visibility;
		
		private EntitySet<Inventory_BatchCustomData> _Inventory_BatchCustomDatas;
		
		private EntitySet<InventoryManager_UsageCustomData> _InventoryManager_UsageCustomDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDeafaultNameChanging(string value);
    partial void OnDeafaultNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    #endregion
		
		public GridFieldConfigurator()
		{
			this._Inventory_BatchCustomDatas = new EntitySet<Inventory_BatchCustomData>(new Action<Inventory_BatchCustomData>(this.attach_Inventory_BatchCustomDatas), new Action<Inventory_BatchCustomData>(this.detach_Inventory_BatchCustomDatas));
			this._InventoryManager_UsageCustomDatas = new EntitySet<InventoryManager_UsageCustomData>(new Action<InventoryManager_UsageCustomData>(this.attach_InventoryManager_UsageCustomDatas), new Action<InventoryManager_UsageCustomData>(this.detach_InventoryManager_UsageCustomDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeafaultName", DbType="VarChar(50)")]
		public string DeafaultName
		{
			get
			{
				return this._DeafaultName;
			}
			set
			{
				if ((this._DeafaultName != value))
				{
					this.OnDeafaultNameChanging(value);
					this.SendPropertyChanging();
					this._DeafaultName = value;
					this.SendPropertyChanged("DeafaultName");
					this.OnDeafaultNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
		public System.Nullable<bool> Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GridFieldConfigurator_Inventory_BatchCustomData", Storage="_Inventory_BatchCustomDatas", ThisKey="id", OtherKey="CustomFieldID")]
		public EntitySet<Inventory_BatchCustomData> Inventory_BatchCustomDatas
		{
			get
			{
				return this._Inventory_BatchCustomDatas;
			}
			set
			{
				this._Inventory_BatchCustomDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GridFieldConfigurator_InventoryManager_UsageCustomData", Storage="_InventoryManager_UsageCustomDatas", ThisKey="id", OtherKey="CustomFieldID")]
		public EntitySet<InventoryManager_UsageCustomData> InventoryManager_UsageCustomDatas
		{
			get
			{
				return this._InventoryManager_UsageCustomDatas;
			}
			set
			{
				this._InventoryManager_UsageCustomDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory_BatchCustomDatas(Inventory_BatchCustomData entity)
		{
			this.SendPropertyChanging();
			entity.GridFieldConfigurator = this;
		}
		
		private void detach_Inventory_BatchCustomDatas(Inventory_BatchCustomData entity)
		{
			this.SendPropertyChanging();
			entity.GridFieldConfigurator = null;
		}
		
		private void attach_InventoryManager_UsageCustomDatas(InventoryManager_UsageCustomData entity)
		{
			this.SendPropertyChanging();
			entity.GridFieldConfigurator = this;
		}
		
		private void detach_InventoryManager_UsageCustomDatas(InventoryManager_UsageCustomData entity)
		{
			this.SendPropertyChanging();
			entity.GridFieldConfigurator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Area")]
	public partial class Inventory_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _Cid;
		
		private EntitySet<Inventory_Locatin> _Inventory_Locatins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCidChanging(System.Nullable<int> value);
    partial void OnCidChanged();
    #endregion
		
		public Inventory_Area()
		{
			this._Inventory_Locatins = new EntitySet<Inventory_Locatin>(new Action<Inventory_Locatin>(this.attach_Inventory_Locatins), new Action<Inventory_Locatin>(this.detach_Inventory_Locatins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", DbType="Int")]
		public System.Nullable<int> Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Area_Inventory_Locatin", Storage="_Inventory_Locatins", ThisKey="id", OtherKey="IA_id")]
		public EntitySet<Inventory_Locatin> Inventory_Locatins
		{
			get
			{
				return this._Inventory_Locatins;
			}
			set
			{
				this._Inventory_Locatins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory_Locatins(Inventory_Locatin entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Area = this;
		}
		
		private void detach_Inventory_Locatins(Inventory_Locatin entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_AssociatedBarcode")]
	public partial class Inventory_AssociatedBarcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _SubCategoryID;
		
		private string _Barcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnSubCategoryIDChanging(System.Nullable<int> value);
    partial void OnSubCategoryIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    #endregion
		
		public Inventory_AssociatedBarcode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryID", DbType="Int")]
		public System.Nullable<int> SubCategoryID
		{
			get
			{
				return this._SubCategoryID;
			}
			set
			{
				if ((this._SubCategoryID != value))
				{
					this.OnSubCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryID = value;
					this.SendPropertyChanged("SubCategoryID");
					this.OnSubCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(100)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_BatchCustomData")]
	public partial class Inventory_BatchCustomData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BatchID;
		
		private System.Nullable<int> _CustomFieldID;
		
		private string _CustomFieldValue;
		
		private EntityRef<GridFieldConfigurator> _GridFieldConfigurator;
		
		private EntityRef<Inventory_Batch> _Inventory_Batch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnCustomFieldIDChanging(System.Nullable<int> value);
    partial void OnCustomFieldIDChanged();
    partial void OnCustomFieldValueChanging(string value);
    partial void OnCustomFieldValueChanged();
    #endregion
		
		public Inventory_BatchCustomData()
		{
			this._GridFieldConfigurator = default(EntityRef<GridFieldConfigurator>);
			this._Inventory_Batch = default(EntityRef<Inventory_Batch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					if (this._Inventory_Batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFieldID", DbType="Int")]
		public System.Nullable<int> CustomFieldID
		{
			get
			{
				return this._CustomFieldID;
			}
			set
			{
				if ((this._CustomFieldID != value))
				{
					if (this._GridFieldConfigurator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CustomFieldID = value;
					this.SendPropertyChanged("CustomFieldID");
					this.OnCustomFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFieldValue", DbType="VarChar(MAX)")]
		public string CustomFieldValue
		{
			get
			{
				return this._CustomFieldValue;
			}
			set
			{
				if ((this._CustomFieldValue != value))
				{
					this.OnCustomFieldValueChanging(value);
					this.SendPropertyChanging();
					this._CustomFieldValue = value;
					this.SendPropertyChanged("CustomFieldValue");
					this.OnCustomFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GridFieldConfigurator_Inventory_BatchCustomData", Storage="_GridFieldConfigurator", ThisKey="CustomFieldID", OtherKey="id", IsForeignKey=true)]
		public GridFieldConfigurator GridFieldConfigurator
		{
			get
			{
				return this._GridFieldConfigurator.Entity;
			}
			set
			{
				GridFieldConfigurator previousValue = this._GridFieldConfigurator.Entity;
				if (((previousValue != value) 
							|| (this._GridFieldConfigurator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GridFieldConfigurator.Entity = null;
						previousValue.Inventory_BatchCustomDatas.Remove(this);
					}
					this._GridFieldConfigurator.Entity = value;
					if ((value != null))
					{
						value.Inventory_BatchCustomDatas.Add(this);
						this._CustomFieldID = value.id;
					}
					else
					{
						this._CustomFieldID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GridFieldConfigurator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Batch_Inventory_BatchCustomData", Storage="_Inventory_Batch", ThisKey="BatchID", OtherKey="ID", IsForeignKey=true)]
		public Inventory_Batch Inventory_Batch
		{
			get
			{
				return this._Inventory_Batch.Entity;
			}
			set
			{
				Inventory_Batch previousValue = this._Inventory_Batch.Entity;
				if (((previousValue != value) 
							|| (this._Inventory_Batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory_Batch.Entity = null;
						previousValue.Inventory_BatchCustomDatas.Remove(this);
					}
					this._Inventory_Batch.Entity = value;
					if ((value != null))
					{
						value.Inventory_BatchCustomDatas.Add(this);
						this._BatchID = value.ID;
					}
					else
					{
						this._BatchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inventory_Batch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Bin")]
	public partial class Inventory_Bin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _IS_id;
		
		private EntityRef<Inventory_Shelf> _Inventory_Shelf;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIS_idChanging(System.Nullable<int> value);
    partial void OnIS_idChanged();
    #endregion
		
		public Inventory_Bin()
		{
			this._Inventory_Shelf = default(EntityRef<Inventory_Shelf>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_id", DbType="Int")]
		public System.Nullable<int> IS_id
		{
			get
			{
				return this._IS_id;
			}
			set
			{
				if ((this._IS_id != value))
				{
					if (this._Inventory_Shelf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIS_idChanging(value);
					this.SendPropertyChanging();
					this._IS_id = value;
					this.SendPropertyChanged("IS_id");
					this.OnIS_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Shelf_Inventory_Bin", Storage="_Inventory_Shelf", ThisKey="IS_id", OtherKey="id", IsForeignKey=true)]
		public Inventory_Shelf Inventory_Shelf
		{
			get
			{
				return this._Inventory_Shelf.Entity;
			}
			set
			{
				Inventory_Shelf previousValue = this._Inventory_Shelf.Entity;
				if (((previousValue != value) 
							|| (this._Inventory_Shelf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory_Shelf.Entity = null;
						previousValue.Inventory_Bins.Remove(this);
					}
					this._Inventory_Shelf.Entity = value;
					if ((value != null))
					{
						value.Inventory_Bins.Add(this);
						this._IS_id = value.id;
					}
					else
					{
						this._IS_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inventory_Shelf");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Condtions")]
	public partial class Inventory_Condtion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Condition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    #endregion
		
		public Inventory_Condtion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="VarChar(250)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_DistributionList")]
	public partial class Inventory_DistributionList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _RequestTypeID;
		
		private System.Nullable<int> _CustomerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRequestTypeIDChanging(System.Nullable<int> value);
    partial void OnRequestTypeIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public Inventory_DistributionList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="Int")]
		public System.Nullable<int> RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Locatin")]
	public partial class Inventory_Locatin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _IA_id;
		
		private EntitySet<Inventory_Shelf> _Inventory_Shelfs;
		
		private EntityRef<Inventory_Area> _Inventory_Area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIA_idChanging(System.Nullable<int> value);
    partial void OnIA_idChanged();
    #endregion
		
		public Inventory_Locatin()
		{
			this._Inventory_Shelfs = new EntitySet<Inventory_Shelf>(new Action<Inventory_Shelf>(this.attach_Inventory_Shelfs), new Action<Inventory_Shelf>(this.detach_Inventory_Shelfs));
			this._Inventory_Area = default(EntityRef<Inventory_Area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IA_id", DbType="Int")]
		public System.Nullable<int> IA_id
		{
			get
			{
				return this._IA_id;
			}
			set
			{
				if ((this._IA_id != value))
				{
					if (this._Inventory_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIA_idChanging(value);
					this.SendPropertyChanging();
					this._IA_id = value;
					this.SendPropertyChanged("IA_id");
					this.OnIA_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Locatin_Inventory_Shelf", Storage="_Inventory_Shelfs", ThisKey="id", OtherKey="IL_id")]
		public EntitySet<Inventory_Shelf> Inventory_Shelfs
		{
			get
			{
				return this._Inventory_Shelfs;
			}
			set
			{
				this._Inventory_Shelfs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Area_Inventory_Locatin", Storage="_Inventory_Area", ThisKey="IA_id", OtherKey="id", IsForeignKey=true)]
		public Inventory_Area Inventory_Area
		{
			get
			{
				return this._Inventory_Area.Entity;
			}
			set
			{
				Inventory_Area previousValue = this._Inventory_Area.Entity;
				if (((previousValue != value) 
							|| (this._Inventory_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory_Area.Entity = null;
						previousValue.Inventory_Locatins.Remove(this);
					}
					this._Inventory_Area.Entity = value;
					if ((value != null))
					{
						value.Inventory_Locatins.Add(this);
						this._IA_id = value.id;
					}
					else
					{
						this._IA_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inventory_Area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory_Shelfs(Inventory_Shelf entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Locatin = this;
		}
		
		private void detach_Inventory_Shelfs(Inventory_Shelf entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Locatin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Shelf")]
	public partial class Inventory_Shelf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _IL_id;
		
		private EntitySet<Inventory_Bin> _Inventory_Bins;
		
		private EntityRef<Inventory_Locatin> _Inventory_Locatin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIL_idChanging(System.Nullable<int> value);
    partial void OnIL_idChanged();
    #endregion
		
		public Inventory_Shelf()
		{
			this._Inventory_Bins = new EntitySet<Inventory_Bin>(new Action<Inventory_Bin>(this.attach_Inventory_Bins), new Action<Inventory_Bin>(this.detach_Inventory_Bins));
			this._Inventory_Locatin = default(EntityRef<Inventory_Locatin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IL_id", DbType="Int")]
		public System.Nullable<int> IL_id
		{
			get
			{
				return this._IL_id;
			}
			set
			{
				if ((this._IL_id != value))
				{
					if (this._Inventory_Locatin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIL_idChanging(value);
					this.SendPropertyChanging();
					this._IL_id = value;
					this.SendPropertyChanged("IL_id");
					this.OnIL_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Shelf_Inventory_Bin", Storage="_Inventory_Bins", ThisKey="id", OtherKey="IS_id")]
		public EntitySet<Inventory_Bin> Inventory_Bins
		{
			get
			{
				return this._Inventory_Bins;
			}
			set
			{
				this._Inventory_Bins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Locatin_Inventory_Shelf", Storage="_Inventory_Locatin", ThisKey="IL_id", OtherKey="id", IsForeignKey=true)]
		public Inventory_Locatin Inventory_Locatin
		{
			get
			{
				return this._Inventory_Locatin.Entity;
			}
			set
			{
				Inventory_Locatin previousValue = this._Inventory_Locatin.Entity;
				if (((previousValue != value) 
							|| (this._Inventory_Locatin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory_Locatin.Entity = null;
						previousValue.Inventory_Shelfs.Remove(this);
					}
					this._Inventory_Locatin.Entity = value;
					if ((value != null))
					{
						value.Inventory_Shelfs.Add(this);
						this._IL_id = value.id;
					}
					else
					{
						this._IL_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inventory_Locatin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory_Bins(Inventory_Bin entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Shelf = this;
		}
		
		private void detach_Inventory_Bins(Inventory_Bin entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Shelf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_SiteStorageDetails")]
	public partial class Inventory_SiteStorageDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _InventoryId;
		
		private System.Nullable<int> _SiteId;
		
		private string _Barcode;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _SubCategoryID;
		
		private string _Usebarcode;
		
		private System.Nullable<int> _UseID;
		
		private System.Nullable<bool> _UseStatus;
		
		private System.Nullable<int> _DeployedBy;
		
		private System.Nullable<System.DateTime> _DeployedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryIdChanging(System.Nullable<int> value);
    partial void OnInventoryIdChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnSubCategoryIDChanging(System.Nullable<int> value);
    partial void OnSubCategoryIDChanged();
    partial void OnUsebarcodeChanging(string value);
    partial void OnUsebarcodeChanged();
    partial void OnUseIDChanging(System.Nullable<int> value);
    partial void OnUseIDChanged();
    partial void OnUseStatusChanging(System.Nullable<bool> value);
    partial void OnUseStatusChanged();
    partial void OnDeployedByChanging(System.Nullable<int> value);
    partial void OnDeployedByChanged();
    partial void OnDeployedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeployedDateChanged();
    #endregion
		
		public Inventory_SiteStorageDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="Int")]
		public System.Nullable<int> InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(200)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryID", DbType="Int")]
		public System.Nullable<int> SubCategoryID
		{
			get
			{
				return this._SubCategoryID;
			}
			set
			{
				if ((this._SubCategoryID != value))
				{
					this.OnSubCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryID = value;
					this.SendPropertyChanged("SubCategoryID");
					this.OnSubCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usebarcode", DbType="NVarChar(200)")]
		public string Usebarcode
		{
			get
			{
				return this._Usebarcode;
			}
			set
			{
				if ((this._Usebarcode != value))
				{
					this.OnUsebarcodeChanging(value);
					this.SendPropertyChanging();
					this._Usebarcode = value;
					this.SendPropertyChanged("Usebarcode");
					this.OnUsebarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseID", DbType="Int")]
		public System.Nullable<int> UseID
		{
			get
			{
				return this._UseID;
			}
			set
			{
				if ((this._UseID != value))
				{
					this.OnUseIDChanging(value);
					this.SendPropertyChanging();
					this._UseID = value;
					this.SendPropertyChanged("UseID");
					this.OnUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseStatus", DbType="Bit")]
		public System.Nullable<bool> UseStatus
		{
			get
			{
				return this._UseStatus;
			}
			set
			{
				if ((this._UseStatus != value))
				{
					this.OnUseStatusChanging(value);
					this.SendPropertyChanging();
					this._UseStatus = value;
					this.SendPropertyChanged("UseStatus");
					this.OnUseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeployedBy", DbType="Int")]
		public System.Nullable<int> DeployedBy
		{
			get
			{
				return this._DeployedBy;
			}
			set
			{
				if ((this._DeployedBy != value))
				{
					this.OnDeployedByChanging(value);
					this.SendPropertyChanging();
					this._DeployedBy = value;
					this.SendPropertyChanged("DeployedBy");
					this.OnDeployedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeployedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeployedDate
		{
			get
			{
				return this._DeployedDate;
			}
			set
			{
				if ((this._DeployedDate != value))
				{
					this.OnDeployedDateChanging(value);
					this.SendPropertyChanging();
					this._DeployedDate = value;
					this.SendPropertyChanged("DeployedDate");
					this.OnDeployedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Use")]
	public partial class Inventory_Use : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Inventory_Use()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(200)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryAdditionalInfo")]
	public partial class InventoryAdditionalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _productId;
		
		private System.Nullable<int> _CustomFieldID;
		
		private string _CustomFieldValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(System.Nullable<int> value);
    partial void OnproductIdChanged();
    partial void OnCustomFieldIDChanging(System.Nullable<int> value);
    partial void OnCustomFieldIDChanged();
    partial void OnCustomFieldValueChanging(string value);
    partial void OnCustomFieldValueChanged();
    #endregion
		
		public InventoryAdditionalInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int")]
		public System.Nullable<int> productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFieldID", DbType="Int")]
		public System.Nullable<int> CustomFieldID
		{
			get
			{
				return this._CustomFieldID;
			}
			set
			{
				if ((this._CustomFieldID != value))
				{
					this.OnCustomFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CustomFieldID = value;
					this.SendPropertyChanged("CustomFieldID");
					this.OnCustomFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFieldValue", DbType="NVarChar(MAX)")]
		public string CustomFieldValue
		{
			get
			{
				return this._CustomFieldValue;
			}
			set
			{
				if ((this._CustomFieldValue != value))
				{
					this.OnCustomFieldValueChanging(value);
					this.SendPropertyChanging();
					this._CustomFieldValue = value;
					this.SendPropertyChanged("CustomFieldValue");
					this.OnCustomFieldValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryCustomFields")]
	public partial class inventoryCustomField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerID;
		
		private string _TypeOfField;
		
		private string _DefaultText;
		
		private string _MinimumValue;
		
		private string _MaximumValue;
		
		private System.Nullable<bool> _Mandatory;
		
		private string _FieldPosition;
		
		private string _LabelName;
		
		private string _ListValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnTypeOfFieldChanging(string value);
    partial void OnTypeOfFieldChanged();
    partial void OnDefaultTextChanging(string value);
    partial void OnDefaultTextChanged();
    partial void OnMinimumValueChanging(string value);
    partial void OnMinimumValueChanged();
    partial void OnMaximumValueChanging(string value);
    partial void OnMaximumValueChanged();
    partial void OnMandatoryChanging(System.Nullable<bool> value);
    partial void OnMandatoryChanged();
    partial void OnFieldPositionChanging(string value);
    partial void OnFieldPositionChanged();
    partial void OnLabelNameChanging(string value);
    partial void OnLabelNameChanged();
    partial void OnListValueChanging(string value);
    partial void OnListValueChanged();
    #endregion
		
		public inventoryCustomField()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfField", DbType="NVarChar(200)")]
		public string TypeOfField
		{
			get
			{
				return this._TypeOfField;
			}
			set
			{
				if ((this._TypeOfField != value))
				{
					this.OnTypeOfFieldChanging(value);
					this.SendPropertyChanging();
					this._TypeOfField = value;
					this.SendPropertyChanged("TypeOfField");
					this.OnTypeOfFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultText", DbType="NVarChar(MAX)")]
		public string DefaultText
		{
			get
			{
				return this._DefaultText;
			}
			set
			{
				if ((this._DefaultText != value))
				{
					this.OnDefaultTextChanging(value);
					this.SendPropertyChanging();
					this._DefaultText = value;
					this.SendPropertyChanged("DefaultText");
					this.OnDefaultTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumValue", DbType="NVarChar(100)")]
		public string MinimumValue
		{
			get
			{
				return this._MinimumValue;
			}
			set
			{
				if ((this._MinimumValue != value))
				{
					this.OnMinimumValueChanging(value);
					this.SendPropertyChanging();
					this._MinimumValue = value;
					this.SendPropertyChanged("MinimumValue");
					this.OnMinimumValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumValue", DbType="NVarChar(100)")]
		public string MaximumValue
		{
			get
			{
				return this._MaximumValue;
			}
			set
			{
				if ((this._MaximumValue != value))
				{
					this.OnMaximumValueChanging(value);
					this.SendPropertyChanging();
					this._MaximumValue = value;
					this.SendPropertyChanged("MaximumValue");
					this.OnMaximumValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="Bit")]
		public System.Nullable<bool> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldPosition", DbType="NVarChar(1)")]
		public string FieldPosition
		{
			get
			{
				return this._FieldPosition;
			}
			set
			{
				if ((this._FieldPosition != value))
				{
					this.OnFieldPositionChanging(value);
					this.SendPropertyChanging();
					this._FieldPosition = value;
					this.SendPropertyChanged("FieldPosition");
					this.OnFieldPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelName", DbType="NVarChar(500)")]
		public string LabelName
		{
			get
			{
				return this._LabelName;
			}
			set
			{
				if ((this._LabelName != value))
				{
					this.OnLabelNameChanging(value);
					this.SendPropertyChanging();
					this._LabelName = value;
					this.SendPropertyChanged("LabelName");
					this.OnLabelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListValue", DbType="NVarChar(MAX)")]
		public string ListValue
		{
			get
			{
				return this._ListValue;
			}
			set
			{
				if ((this._ListValue != value))
				{
					this.OnListValueChanging(value);
					this.SendPropertyChanging();
					this._ListValue = value;
					this.SendPropertyChanged("ListValue");
					this.OnListValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryFieldsConfig")]
	public partial class InventoryFieldsConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _CustomerId;
		
		private string _DefaultName;
		
		private System.Nullable<bool> _IsVisible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnDefaultNameChanging(string value);
    partial void OnDefaultNameChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public InventoryFieldsConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultName", DbType="VarChar(250)")]
		public string DefaultName
		{
			get
			{
				return this._DefaultName;
			}
			set
			{
				if ((this._DefaultName != value))
				{
					this.OnDefaultNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultName = value;
					this.SendPropertyChanged("DefaultName");
					this.OnDefaultNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryFieldsConfigData")]
	public partial class InventoryFieldsConfigData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DefaultName;
		
		private System.Nullable<bool> _IsVisible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDefaultNameChanging(string value);
    partial void OnDefaultNameChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public InventoryFieldsConfigData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultName", DbType="VarChar(250)")]
		public string DefaultName
		{
			get
			{
				return this._DefaultName;
			}
			set
			{
				if ((this._DefaultName != value))
				{
					this.OnDefaultNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultName = value;
					this.SendPropertyChanged("DefaultName");
					this.OnDefaultNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryManager")]
	public partial class InventoryManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SiteId;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<int> _ReOrderLevel;
		
		private string _SectionType;
		
		private System.Nullable<int> _Categoery;
		
		private System.Nullable<int> _SubCategory;
		
		private System.Nullable<int> _PortfolioID;
		
		private System.Nullable<int> _QtyOnOrder;
		
		private System.Nullable<System.DateTime> _ExpctArvlDate;
		
		private System.Nullable<int> _LeadTime;
		
		private string _ItemDescription;
		
		private System.Nullable<int> _Supplier;
		
		private string _PartNumber;
		
		private System.Nullable<System.Guid> _Image;
		
		private System.Nullable<int> _Manufacturer;
		
		private System.Nullable<System.DateTime> _DateOrdered;
		
		private string _Barcode;
		
		private string _Notes;
		
		private System.Nullable<int> _Area;
		
		private System.Nullable<int> _Location;
		
		private System.Nullable<int> _Shelf;
		
		private System.Nullable<int> _Bin;
		
		private EntitySet<Inventory_Batch> _Inventory_Batches;
		
		private EntitySet<Inventory_Batch> _Inventory_Batches1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnReOrderLevelChanging(System.Nullable<int> value);
    partial void OnReOrderLevelChanged();
    partial void OnSectionTypeChanging(string value);
    partial void OnSectionTypeChanged();
    partial void OnCategoeryChanging(System.Nullable<int> value);
    partial void OnCategoeryChanged();
    partial void OnSubCategoryChanging(System.Nullable<int> value);
    partial void OnSubCategoryChanged();
    partial void OnPortfolioIDChanging(System.Nullable<int> value);
    partial void OnPortfolioIDChanged();
    partial void OnQtyOnOrderChanging(System.Nullable<int> value);
    partial void OnQtyOnOrderChanged();
    partial void OnExpctArvlDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpctArvlDateChanged();
    partial void OnLeadTimeChanging(System.Nullable<int> value);
    partial void OnLeadTimeChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnSupplierChanging(System.Nullable<int> value);
    partial void OnSupplierChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnImageChanging(System.Nullable<System.Guid> value);
    partial void OnImageChanged();
    partial void OnManufacturerChanging(System.Nullable<int> value);
    partial void OnManufacturerChanged();
    partial void OnDateOrderedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOrderedChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnAreaChanging(System.Nullable<int> value);
    partial void OnAreaChanged();
    partial void OnLocationChanging(System.Nullable<int> value);
    partial void OnLocationChanged();
    partial void OnShelfChanging(System.Nullable<int> value);
    partial void OnShelfChanged();
    partial void OnBinChanging(System.Nullable<int> value);
    partial void OnBinChanged();
    #endregion
		
		public InventoryManager()
		{
			this._Inventory_Batches = new EntitySet<Inventory_Batch>(new Action<Inventory_Batch>(this.attach_Inventory_Batches), new Action<Inventory_Batch>(this.detach_Inventory_Batches));
			this._Inventory_Batches1 = new EntitySet<Inventory_Batch>(new Action<Inventory_Batch>(this.attach_Inventory_Batches1), new Action<Inventory_Batch>(this.detach_Inventory_Batches1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOrderLevel", DbType="Int")]
		public System.Nullable<int> ReOrderLevel
		{
			get
			{
				return this._ReOrderLevel;
			}
			set
			{
				if ((this._ReOrderLevel != value))
				{
					this.OnReOrderLevelChanging(value);
					this.SendPropertyChanging();
					this._ReOrderLevel = value;
					this.SendPropertyChanged("ReOrderLevel");
					this.OnReOrderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionType", DbType="NVarChar(50)")]
		public string SectionType
		{
			get
			{
				return this._SectionType;
			}
			set
			{
				if ((this._SectionType != value))
				{
					this.OnSectionTypeChanging(value);
					this.SendPropertyChanging();
					this._SectionType = value;
					this.SendPropertyChanged("SectionType");
					this.OnSectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoery", DbType="Int")]
		public System.Nullable<int> Categoery
		{
			get
			{
				return this._Categoery;
			}
			set
			{
				if ((this._Categoery != value))
				{
					this.OnCategoeryChanging(value);
					this.SendPropertyChanging();
					this._Categoery = value;
					this.SendPropertyChanged("Categoery");
					this.OnCategoeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="Int")]
		public System.Nullable<int> SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int")]
		public System.Nullable<int> PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyOnOrder", DbType="Int")]
		public System.Nullable<int> QtyOnOrder
		{
			get
			{
				return this._QtyOnOrder;
			}
			set
			{
				if ((this._QtyOnOrder != value))
				{
					this.OnQtyOnOrderChanging(value);
					this.SendPropertyChanging();
					this._QtyOnOrder = value;
					this.SendPropertyChanged("QtyOnOrder");
					this.OnQtyOnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpctArvlDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpctArvlDate
		{
			get
			{
				return this._ExpctArvlDate;
			}
			set
			{
				if ((this._ExpctArvlDate != value))
				{
					this.OnExpctArvlDateChanging(value);
					this.SendPropertyChanging();
					this._ExpctArvlDate = value;
					this.SendPropertyChanged("ExpctArvlDate");
					this.OnExpctArvlDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadTime", DbType="Int")]
		public System.Nullable<int> LeadTime
		{
			get
			{
				return this._LeadTime;
			}
			set
			{
				if ((this._LeadTime != value))
				{
					this.OnLeadTimeChanging(value);
					this.SendPropertyChanging();
					this._LeadTime = value;
					this.SendPropertyChanged("LeadTime");
					this.OnLeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="Int")]
		public System.Nullable<int> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(100)")]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="Int")]
		public System.Nullable<int> Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOrdered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOrdered
		{
			get
			{
				return this._DateOrdered;
			}
			set
			{
				if ((this._DateOrdered != value))
				{
					this.OnDateOrderedChanging(value);
					this.SendPropertyChanging();
					this._DateOrdered = value;
					this.SendPropertyChanged("DateOrdered");
					this.OnDateOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(200)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Int")]
		public System.Nullable<int> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Int")]
		public System.Nullable<int> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="Int")]
		public System.Nullable<int> Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this.OnShelfChanging(value);
					this.SendPropertyChanging();
					this._Shelf = value;
					this.SendPropertyChanged("Shelf");
					this.OnShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bin", DbType="Int")]
		public System.Nullable<int> Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this.OnBinChanging(value);
					this.SendPropertyChanging();
					this._Bin = value;
					this.SendPropertyChanged("Bin");
					this.OnBinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryManager_Inventory_Batch", Storage="_Inventory_Batches", ThisKey="Id", OtherKey="InventoryID")]
		public EntitySet<Inventory_Batch> Inventory_Batches
		{
			get
			{
				return this._Inventory_Batches;
			}
			set
			{
				this._Inventory_Batches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryManager_Inventory_Batch1", Storage="_Inventory_Batches1", ThisKey="Id", OtherKey="InventoryID")]
		public EntitySet<Inventory_Batch> Inventory_Batches1
		{
			get
			{
				return this._Inventory_Batches1;
			}
			set
			{
				this._Inventory_Batches1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory_Batches(Inventory_Batch entity)
		{
			this.SendPropertyChanging();
			entity.InventoryManager = this;
		}
		
		private void detach_Inventory_Batches(Inventory_Batch entity)
		{
			this.SendPropertyChanging();
			entity.InventoryManager = null;
		}
		
		private void attach_Inventory_Batches1(Inventory_Batch entity)
		{
			this.SendPropertyChanging();
			entity.InventoryManager1 = this;
		}
		
		private void detach_Inventory_Batches1(Inventory_Batch entity)
		{
			this.SendPropertyChanging();
			entity.InventoryManager1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryManager_PSDProducts")]
	public partial class InventoryManager_PSDProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<int> _SiteId;
		
		private string _SectionType;
		
		private System.Nullable<int> _QtyUsed;
		
		private System.Nullable<int> _QtyReplenish;
		
		private string _Requester;
		
		private string _notes;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _projectid;
		
		private System.Nullable<int> _BatchID;
		
		private System.Nullable<int> _ConditionId;
		
		private string _RecordNumber;
		
		private EntitySet<InventoryManager_UsageCustomData> _InventoryManager_UsageCustomDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnSectionTypeChanging(string value);
    partial void OnSectionTypeChanged();
    partial void OnQtyUsedChanging(System.Nullable<int> value);
    partial void OnQtyUsedChanged();
    partial void OnQtyReplenishChanging(System.Nullable<int> value);
    partial void OnQtyReplenishChanged();
    partial void OnRequesterChanging(string value);
    partial void OnRequesterChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnprojectidChanging(System.Nullable<int> value);
    partial void OnprojectidChanged();
    partial void OnBatchIDChanging(System.Nullable<int> value);
    partial void OnBatchIDChanged();
    partial void OnConditionIdChanging(System.Nullable<int> value);
    partial void OnConditionIdChanged();
    partial void OnRecordNumberChanging(string value);
    partial void OnRecordNumberChanged();
    #endregion
		
		public InventoryManager_PSDProduct()
		{
			this._InventoryManager_UsageCustomDatas = new EntitySet<InventoryManager_UsageCustomData>(new Action<InventoryManager_UsageCustomData>(this.attach_InventoryManager_UsageCustomDatas), new Action<InventoryManager_UsageCustomData>(this.detach_InventoryManager_UsageCustomDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionType", DbType="NVarChar(100)")]
		public string SectionType
		{
			get
			{
				return this._SectionType;
			}
			set
			{
				if ((this._SectionType != value))
				{
					this.OnSectionTypeChanging(value);
					this.SendPropertyChanging();
					this._SectionType = value;
					this.SendPropertyChanged("SectionType");
					this.OnSectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyUsed", DbType="Int")]
		public System.Nullable<int> QtyUsed
		{
			get
			{
				return this._QtyUsed;
			}
			set
			{
				if ((this._QtyUsed != value))
				{
					this.OnQtyUsedChanging(value);
					this.SendPropertyChanging();
					this._QtyUsed = value;
					this.SendPropertyChanged("QtyUsed");
					this.OnQtyUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyReplenish", DbType="Int")]
		public System.Nullable<int> QtyReplenish
		{
			get
			{
				return this._QtyReplenish;
			}
			set
			{
				if ((this._QtyReplenish != value))
				{
					this.OnQtyReplenishChanging(value);
					this.SendPropertyChanging();
					this._QtyReplenish = value;
					this.SendPropertyChanged("QtyReplenish");
					this.OnQtyReplenishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requester", DbType="VarChar(250)")]
		public string Requester
		{
			get
			{
				return this._Requester;
			}
			set
			{
				if ((this._Requester != value))
				{
					this.OnRequesterChanging(value);
					this.SendPropertyChanging();
					this._Requester = value;
					this.SendPropertyChanged("Requester");
					this.OnRequesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectid", DbType="Int")]
		public System.Nullable<int> projectid
		{
			get
			{
				return this._projectid;
			}
			set
			{
				if ((this._projectid != value))
				{
					this.OnprojectidChanging(value);
					this.SendPropertyChanging();
					this._projectid = value;
					this.SendPropertyChanged("projectid");
					this.OnprojectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="Int")]
		public System.Nullable<int> BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionId", DbType="Int")]
		public System.Nullable<int> ConditionId
		{
			get
			{
				return this._ConditionId;
			}
			set
			{
				if ((this._ConditionId != value))
				{
					this.OnConditionIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionId = value;
					this.SendPropertyChanged("ConditionId");
					this.OnConditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordNumber", DbType="VarChar(200)")]
		public string RecordNumber
		{
			get
			{
				return this._RecordNumber;
			}
			set
			{
				if ((this._RecordNumber != value))
				{
					this.OnRecordNumberChanging(value);
					this.SendPropertyChanging();
					this._RecordNumber = value;
					this.SendPropertyChanged("RecordNumber");
					this.OnRecordNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryManager_PSDProduct_InventoryManager_UsageCustomData", Storage="_InventoryManager_UsageCustomDatas", ThisKey="Id", OtherKey="PSDID")]
		public EntitySet<InventoryManager_UsageCustomData> InventoryManager_UsageCustomDatas
		{
			get
			{
				return this._InventoryManager_UsageCustomDatas;
			}
			set
			{
				this._InventoryManager_UsageCustomDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryManager_UsageCustomDatas(InventoryManager_UsageCustomData entity)
		{
			this.SendPropertyChanging();
			entity.InventoryManager_PSDProduct = this;
		}
		
		private void detach_InventoryManager_UsageCustomDatas(InventoryManager_UsageCustomData entity)
		{
			this.SendPropertyChanging();
			entity.InventoryManager_PSDProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryManager_UsageCustomData")]
	public partial class InventoryManager_UsageCustomData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PSDID;
		
		private System.Nullable<int> _CustomFieldID;
		
		private string _CustomFieldValue;
		
		private EntityRef<GridFieldConfigurator> _GridFieldConfigurator;
		
		private EntityRef<InventoryManager_PSDProduct> _InventoryManager_PSDProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPSDIDChanging(System.Nullable<int> value);
    partial void OnPSDIDChanged();
    partial void OnCustomFieldIDChanging(System.Nullable<int> value);
    partial void OnCustomFieldIDChanged();
    partial void OnCustomFieldValueChanging(string value);
    partial void OnCustomFieldValueChanged();
    #endregion
		
		public InventoryManager_UsageCustomData()
		{
			this._GridFieldConfigurator = default(EntityRef<GridFieldConfigurator>);
			this._InventoryManager_PSDProduct = default(EntityRef<InventoryManager_PSDProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSDID", DbType="Int")]
		public System.Nullable<int> PSDID
		{
			get
			{
				return this._PSDID;
			}
			set
			{
				if ((this._PSDID != value))
				{
					if (this._InventoryManager_PSDProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPSDIDChanging(value);
					this.SendPropertyChanging();
					this._PSDID = value;
					this.SendPropertyChanged("PSDID");
					this.OnPSDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFieldID", DbType="Int")]
		public System.Nullable<int> CustomFieldID
		{
			get
			{
				return this._CustomFieldID;
			}
			set
			{
				if ((this._CustomFieldID != value))
				{
					if (this._GridFieldConfigurator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomFieldIDChanging(value);
					this.SendPropertyChanging();
					this._CustomFieldID = value;
					this.SendPropertyChanged("CustomFieldID");
					this.OnCustomFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFieldValue", DbType="VarChar(MAX)")]
		public string CustomFieldValue
		{
			get
			{
				return this._CustomFieldValue;
			}
			set
			{
				if ((this._CustomFieldValue != value))
				{
					this.OnCustomFieldValueChanging(value);
					this.SendPropertyChanging();
					this._CustomFieldValue = value;
					this.SendPropertyChanged("CustomFieldValue");
					this.OnCustomFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GridFieldConfigurator_InventoryManager_UsageCustomData", Storage="_GridFieldConfigurator", ThisKey="CustomFieldID", OtherKey="id", IsForeignKey=true)]
		public GridFieldConfigurator GridFieldConfigurator
		{
			get
			{
				return this._GridFieldConfigurator.Entity;
			}
			set
			{
				GridFieldConfigurator previousValue = this._GridFieldConfigurator.Entity;
				if (((previousValue != value) 
							|| (this._GridFieldConfigurator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GridFieldConfigurator.Entity = null;
						previousValue.InventoryManager_UsageCustomDatas.Remove(this);
					}
					this._GridFieldConfigurator.Entity = value;
					if ((value != null))
					{
						value.InventoryManager_UsageCustomDatas.Add(this);
						this._CustomFieldID = value.id;
					}
					else
					{
						this._CustomFieldID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GridFieldConfigurator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryManager_PSDProduct_InventoryManager_UsageCustomData", Storage="_InventoryManager_PSDProduct", ThisKey="PSDID", OtherKey="Id", IsForeignKey=true)]
		public InventoryManager_PSDProduct InventoryManager_PSDProduct
		{
			get
			{
				return this._InventoryManager_PSDProduct.Entity;
			}
			set
			{
				InventoryManager_PSDProduct previousValue = this._InventoryManager_PSDProduct.Entity;
				if (((previousValue != value) 
							|| (this._InventoryManager_PSDProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryManager_PSDProduct.Entity = null;
						previousValue.InventoryManager_UsageCustomDatas.Remove(this);
					}
					this._InventoryManager_PSDProduct.Entity = value;
					if ((value != null))
					{
						value.InventoryManager_UsageCustomDatas.Add(this);
						this._PSDID = value.Id;
					}
					else
					{
						this._PSDID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InventoryManager_PSDProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryManagerJournal")]
	public partial class InventoryManagerJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _InventoryId;
		
		private System.Nullable<int> _SiteId;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<int> _ReOrderLevel;
		
		private string _SectionType;
		
		private System.Nullable<int> _Categoery;
		
		private System.Nullable<int> _SubCategory;
		
		private System.Nullable<int> _PortfolioID;
		
		private System.Nullable<int> _QtyOnOrder;
		
		private System.Nullable<System.DateTime> _ExpctArvlDate;
		
		private System.Nullable<int> _LeadTime;
		
		private string _ItemDescription;
		
		private System.Nullable<int> _Supplier;
		
		private string _PartNumber;
		
		private System.Nullable<System.Guid> _Image;
		
		private System.Nullable<int> _Manufacturer;
		
		private System.Nullable<System.DateTime> _DateOrdered;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _MdofiedDate;
		
		private string _Barcode;
		
		private string _Notes;
		
		private System.Nullable<int> _NoDeployed;
		
		private string _ReasonCode;
		
		private System.Nullable<int> _TransferQty;
		
		private System.Nullable<int> _OpeningStock;
		
		private System.Nullable<int> _UseID;
		
		private System.Nullable<bool> _QtyChangedOrNot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInventoryIdChanging(System.Nullable<int> value);
    partial void OnInventoryIdChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnReOrderLevelChanging(System.Nullable<int> value);
    partial void OnReOrderLevelChanged();
    partial void OnSectionTypeChanging(string value);
    partial void OnSectionTypeChanged();
    partial void OnCategoeryChanging(System.Nullable<int> value);
    partial void OnCategoeryChanged();
    partial void OnSubCategoryChanging(System.Nullable<int> value);
    partial void OnSubCategoryChanged();
    partial void OnPortfolioIDChanging(System.Nullable<int> value);
    partial void OnPortfolioIDChanged();
    partial void OnQtyOnOrderChanging(System.Nullable<int> value);
    partial void OnQtyOnOrderChanged();
    partial void OnExpctArvlDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpctArvlDateChanged();
    partial void OnLeadTimeChanging(System.Nullable<int> value);
    partial void OnLeadTimeChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnSupplierChanging(System.Nullable<int> value);
    partial void OnSupplierChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnImageChanging(System.Nullable<System.Guid> value);
    partial void OnImageChanged();
    partial void OnManufacturerChanging(System.Nullable<int> value);
    partial void OnManufacturerChanged();
    partial void OnDateOrderedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOrderedChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnMdofiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMdofiedDateChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnNoDeployedChanging(System.Nullable<int> value);
    partial void OnNoDeployedChanged();
    partial void OnReasonCodeChanging(string value);
    partial void OnReasonCodeChanged();
    partial void OnTransferQtyChanging(System.Nullable<int> value);
    partial void OnTransferQtyChanged();
    partial void OnOpeningStockChanging(System.Nullable<int> value);
    partial void OnOpeningStockChanged();
    partial void OnUseIDChanging(System.Nullable<int> value);
    partial void OnUseIDChanged();
    partial void OnQtyChangedOrNotChanging(System.Nullable<bool> value);
    partial void OnQtyChangedOrNotChanged();
    #endregion
		
		public InventoryManagerJournal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="Int")]
		public System.Nullable<int> InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOrderLevel", DbType="Int")]
		public System.Nullable<int> ReOrderLevel
		{
			get
			{
				return this._ReOrderLevel;
			}
			set
			{
				if ((this._ReOrderLevel != value))
				{
					this.OnReOrderLevelChanging(value);
					this.SendPropertyChanging();
					this._ReOrderLevel = value;
					this.SendPropertyChanged("ReOrderLevel");
					this.OnReOrderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionType", DbType="NVarChar(50)")]
		public string SectionType
		{
			get
			{
				return this._SectionType;
			}
			set
			{
				if ((this._SectionType != value))
				{
					this.OnSectionTypeChanging(value);
					this.SendPropertyChanging();
					this._SectionType = value;
					this.SendPropertyChanged("SectionType");
					this.OnSectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoery", DbType="Int")]
		public System.Nullable<int> Categoery
		{
			get
			{
				return this._Categoery;
			}
			set
			{
				if ((this._Categoery != value))
				{
					this.OnCategoeryChanging(value);
					this.SendPropertyChanging();
					this._Categoery = value;
					this.SendPropertyChanged("Categoery");
					this.OnCategoeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="Int")]
		public System.Nullable<int> SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int")]
		public System.Nullable<int> PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyOnOrder", DbType="Int")]
		public System.Nullable<int> QtyOnOrder
		{
			get
			{
				return this._QtyOnOrder;
			}
			set
			{
				if ((this._QtyOnOrder != value))
				{
					this.OnQtyOnOrderChanging(value);
					this.SendPropertyChanging();
					this._QtyOnOrder = value;
					this.SendPropertyChanged("QtyOnOrder");
					this.OnQtyOnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpctArvlDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpctArvlDate
		{
			get
			{
				return this._ExpctArvlDate;
			}
			set
			{
				if ((this._ExpctArvlDate != value))
				{
					this.OnExpctArvlDateChanging(value);
					this.SendPropertyChanging();
					this._ExpctArvlDate = value;
					this.SendPropertyChanged("ExpctArvlDate");
					this.OnExpctArvlDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadTime", DbType="Int")]
		public System.Nullable<int> LeadTime
		{
			get
			{
				return this._LeadTime;
			}
			set
			{
				if ((this._LeadTime != value))
				{
					this.OnLeadTimeChanging(value);
					this.SendPropertyChanging();
					this._LeadTime = value;
					this.SendPropertyChanged("LeadTime");
					this.OnLeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="Int")]
		public System.Nullable<int> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(100)")]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="Int")]
		public System.Nullable<int> Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOrdered", DbType="Date")]
		public System.Nullable<System.DateTime> DateOrdered
		{
			get
			{
				return this._DateOrdered;
			}
			set
			{
				if ((this._DateOrdered != value))
				{
					this.OnDateOrderedChanging(value);
					this.SendPropertyChanging();
					this._DateOrdered = value;
					this.SendPropertyChanged("DateOrdered");
					this.OnDateOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MdofiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MdofiedDate
		{
			get
			{
				return this._MdofiedDate;
			}
			set
			{
				if ((this._MdofiedDate != value))
				{
					this.OnMdofiedDateChanging(value);
					this.SendPropertyChanging();
					this._MdofiedDate = value;
					this.SendPropertyChanged("MdofiedDate");
					this.OnMdofiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(200)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDeployed", DbType="Int")]
		public System.Nullable<int> NoDeployed
		{
			get
			{
				return this._NoDeployed;
			}
			set
			{
				if ((this._NoDeployed != value))
				{
					this.OnNoDeployedChanging(value);
					this.SendPropertyChanging();
					this._NoDeployed = value;
					this.SendPropertyChanged("NoDeployed");
					this.OnNoDeployedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonCode", DbType="NVarChar(50)")]
		public string ReasonCode
		{
			get
			{
				return this._ReasonCode;
			}
			set
			{
				if ((this._ReasonCode != value))
				{
					this.OnReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._ReasonCode = value;
					this.SendPropertyChanged("ReasonCode");
					this.OnReasonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferQty", DbType="Int")]
		public System.Nullable<int> TransferQty
		{
			get
			{
				return this._TransferQty;
			}
			set
			{
				if ((this._TransferQty != value))
				{
					this.OnTransferQtyChanging(value);
					this.SendPropertyChanging();
					this._TransferQty = value;
					this.SendPropertyChanged("TransferQty");
					this.OnTransferQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningStock", DbType="Int")]
		public System.Nullable<int> OpeningStock
		{
			get
			{
				return this._OpeningStock;
			}
			set
			{
				if ((this._OpeningStock != value))
				{
					this.OnOpeningStockChanging(value);
					this.SendPropertyChanging();
					this._OpeningStock = value;
					this.SendPropertyChanged("OpeningStock");
					this.OnOpeningStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseID", DbType="Int")]
		public System.Nullable<int> UseID
		{
			get
			{
				return this._UseID;
			}
			set
			{
				if ((this._UseID != value))
				{
					this.OnUseIDChanging(value);
					this.SendPropertyChanging();
					this._UseID = value;
					this.SendPropertyChanged("UseID");
					this.OnUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyChangedOrNot", DbType="Bit")]
		public System.Nullable<bool> QtyChangedOrNot
		{
			get
			{
				return this._QtyChangedOrNot;
			}
			set
			{
				if ((this._QtyChangedOrNot != value))
				{
					this.OnQtyChangedOrNotChanging(value);
					this.SendPropertyChanging();
					this._QtyChangedOrNot = value;
					this.SendPropertyChanged("QtyChangedOrNot");
					this.OnQtyChangedOrNotChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryManagerTrack")]
	public partial class InventoryManagerTrack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<System.DateTime> _DateOrdered;
		
		private System.Nullable<int> _SiteId;
		
		private System.Nullable<int> _QtyOrdered;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _QtyUsed;
		
		private string _SectionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnDateOrderedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOrderedChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnQtyOrderedChanging(System.Nullable<int> value);
    partial void OnQtyOrderedChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnQtyUsedChanging(System.Nullable<int> value);
    partial void OnQtyUsedChanged();
    partial void OnSectionTypeChanging(string value);
    partial void OnSectionTypeChanged();
    #endregion
		
		public InventoryManagerTrack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOrdered", DbType="Date")]
		public System.Nullable<System.DateTime> DateOrdered
		{
			get
			{
				return this._DateOrdered;
			}
			set
			{
				if ((this._DateOrdered != value))
				{
					this.OnDateOrderedChanging(value);
					this.SendPropertyChanging();
					this._DateOrdered = value;
					this.SendPropertyChanged("DateOrdered");
					this.OnDateOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyOrdered", DbType="Int")]
		public System.Nullable<int> QtyOrdered
		{
			get
			{
				return this._QtyOrdered;
			}
			set
			{
				if ((this._QtyOrdered != value))
				{
					this.OnQtyOrderedChanging(value);
					this.SendPropertyChanging();
					this._QtyOrdered = value;
					this.SendPropertyChanged("QtyOrdered");
					this.OnQtyOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyUsed", DbType="Int")]
		public System.Nullable<int> QtyUsed
		{
			get
			{
				return this._QtyUsed;
			}
			set
			{
				if ((this._QtyUsed != value))
				{
					this.OnQtyUsedChanging(value);
					this.SendPropertyChanging();
					this._QtyUsed = value;
					this.SendPropertyChanged("QtyUsed");
					this.OnQtyUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionType", DbType="NVarChar(100)")]
		public string SectionType
		{
			get
			{
				return this._SectionType;
			}
			set
			{
				if ((this._SectionType != value))
				{
					this.OnSectionTypeChanging(value);
					this.SendPropertyChanging();
					this._SectionType = value;
					this.SendPropertyChanged("SectionType");
					this.OnSectionTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class InventoryUploadList
	{
		
		private int _InventoryID;
		
		private string _Product;
		
		private System.Nullable<int> _OpeningQty;
		
		private System.Nullable<int> _NumberDeployed;
		
		private string _Use;
		
		private int _UseID;
		
		private string _Category;
		
		private string _SubCategory;
		
		public InventoryUploadList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this._InventoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="Nvarchar(500)")]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this._Product = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningQty", DbType="Int")]
		public System.Nullable<int> OpeningQty
		{
			get
			{
				return this._OpeningQty;
			}
			set
			{
				if ((this._OpeningQty != value))
				{
					this._OpeningQty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberDeployed", DbType="Int")]
		public System.Nullable<int> NumberDeployed
		{
			get
			{
				return this._NumberDeployed;
			}
			set
			{
				if ((this._NumberDeployed != value))
				{
					this._NumberDeployed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Use", DbType="Nvarchar(200)")]
		public string Use
		{
			get
			{
				return this._Use;
			}
			set
			{
				if ((this._Use != value))
				{
					this._Use = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseID", DbType="int")]
		public int UseID
		{
			get
			{
				return this._UseID;
			}
			set
			{
				if ((this._UseID != value))
				{
					this._UseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Nvarchar(200)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="nvarchar(200)", CanBeNull=false)]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this._SubCategory = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_New_Stock")]
	public partial class Inventory_New_Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _ProductId;
		
		private System.Nullable<int> _SiteId;
		
		private System.Nullable<int> _AreaId;
		
		private System.Nullable<int> _LocationId;
		
		private System.Nullable<int> _shelfId;
		
		private System.Nullable<int> _Binid;
		
		private System.Nullable<int> _Qty;
		
		private string _Notes;
		
		private System.Nullable<int> _Userid;
		
		private System.Nullable<bool> _BatchControl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnAreaIdChanging(System.Nullable<int> value);
    partial void OnAreaIdChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnshelfIdChanging(System.Nullable<int> value);
    partial void OnshelfIdChanged();
    partial void OnBinidChanging(System.Nullable<int> value);
    partial void OnBinidChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUseridChanging(System.Nullable<int> value);
    partial void OnUseridChanged();
    partial void OnBatchControlChanging(System.Nullable<bool> value);
    partial void OnBatchControlChanged();
    #endregion
		
		public Inventory_New_Stock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int")]
		public System.Nullable<int> AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shelfId", DbType="Int")]
		public System.Nullable<int> shelfId
		{
			get
			{
				return this._shelfId;
			}
			set
			{
				if ((this._shelfId != value))
				{
					this.OnshelfIdChanging(value);
					this.SendPropertyChanging();
					this._shelfId = value;
					this.SendPropertyChanged("shelfId");
					this.OnshelfIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Binid", DbType="Int")]
		public System.Nullable<int> Binid
		{
			get
			{
				return this._Binid;
			}
			set
			{
				if ((this._Binid != value))
				{
					this.OnBinidChanging(value);
					this.SendPropertyChanging();
					this._Binid = value;
					this.SendPropertyChanged("Binid");
					this.OnBinidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid", DbType="Int")]
		public System.Nullable<int> Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					this.OnUseridChanging(value);
					this.SendPropertyChanging();
					this._Userid = value;
					this.SendPropertyChanged("Userid");
					this.OnUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchControl", DbType="Bit")]
		public System.Nullable<bool> BatchControl
		{
			get
			{
				return this._BatchControl;
			}
			set
			{
				if ((this._BatchControl != value))
				{
					this.OnBatchControlChanging(value);
					this.SendPropertyChanging();
					this._BatchControl = value;
					this.SendPropertyChanged("BatchControl");
					this.OnBatchControlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory_Batch")]
	public partial class Inventory_Batch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _InventoryID;
		
		private System.Nullable<int> _BatchRef;
		
		private string _BatchDisplayName;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private System.Nullable<int> _QTY;
		
		private System.Nullable<int> _AddedBy;
		
		private System.Nullable<int> _SiteId;
		
		private System.Nullable<int> _Area;
		
		private System.Nullable<int> _Location;
		
		private System.Nullable<int> _Shelf;
		
		private System.Nullable<int> _Bin;
		
		private System.Nullable<bool> _BatchControl;
		
		private EntitySet<Inventory_BatchCustomData> _Inventory_BatchCustomDatas;
		
		private EntityRef<InventoryManager> _InventoryManager;
		
		private EntityRef<InventoryManager> _InventoryManager1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryIDChanging(System.Nullable<int> value);
    partial void OnInventoryIDChanged();
    partial void OnBatchRefChanging(System.Nullable<int> value);
    partial void OnBatchRefChanged();
    partial void OnBatchDisplayNameChanging(string value);
    partial void OnBatchDisplayNameChanged();
    partial void OnDateReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReceivedChanged();
    partial void OnQTYChanging(System.Nullable<int> value);
    partial void OnQTYChanged();
    partial void OnAddedByChanging(System.Nullable<int> value);
    partial void OnAddedByChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnAreaChanging(System.Nullable<int> value);
    partial void OnAreaChanged();
    partial void OnLocationChanging(System.Nullable<int> value);
    partial void OnLocationChanged();
    partial void OnShelfChanging(System.Nullable<int> value);
    partial void OnShelfChanged();
    partial void OnBinChanging(System.Nullable<int> value);
    partial void OnBinChanged();
    partial void OnBatchControlChanging(System.Nullable<bool> value);
    partial void OnBatchControlChanged();
    #endregion
		
		public Inventory_Batch()
		{
			this._Inventory_BatchCustomDatas = new EntitySet<Inventory_BatchCustomData>(new Action<Inventory_BatchCustomData>(this.attach_Inventory_BatchCustomDatas), new Action<Inventory_BatchCustomData>(this.detach_Inventory_BatchCustomDatas));
			this._InventoryManager = default(EntityRef<InventoryManager>);
			this._InventoryManager1 = default(EntityRef<InventoryManager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int")]
		public System.Nullable<int> InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					if ((this._InventoryManager.HasLoadedOrAssignedValue || this._InventoryManager1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchRef", DbType="Int")]
		public System.Nullable<int> BatchRef
		{
			get
			{
				return this._BatchRef;
			}
			set
			{
				if ((this._BatchRef != value))
				{
					this.OnBatchRefChanging(value);
					this.SendPropertyChanging();
					this._BatchRef = value;
					this.SendPropertyChanged("BatchRef");
					this.OnBatchRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchDisplayName", DbType="VarChar(250)")]
		public string BatchDisplayName
		{
			get
			{
				return this._BatchDisplayName;
			}
			set
			{
				if ((this._BatchDisplayName != value))
				{
					this.OnBatchDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._BatchDisplayName = value;
					this.SendPropertyChanged("BatchDisplayName");
					this.OnBatchDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTY", DbType="Int")]
		public System.Nullable<int> QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="Int")]
		public System.Nullable<int> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Int")]
		public System.Nullable<int> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Int")]
		public System.Nullable<int> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="Int")]
		public System.Nullable<int> Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this.OnShelfChanging(value);
					this.SendPropertyChanging();
					this._Shelf = value;
					this.SendPropertyChanged("Shelf");
					this.OnShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bin", DbType="Int")]
		public System.Nullable<int> Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this.OnBinChanging(value);
					this.SendPropertyChanging();
					this._Bin = value;
					this.SendPropertyChanged("Bin");
					this.OnBinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchControl", DbType="Bit")]
		public System.Nullable<bool> BatchControl
		{
			get
			{
				return this._BatchControl;
			}
			set
			{
				if ((this._BatchControl != value))
				{
					this.OnBatchControlChanging(value);
					this.SendPropertyChanging();
					this._BatchControl = value;
					this.SendPropertyChanged("BatchControl");
					this.OnBatchControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_Batch_Inventory_BatchCustomData", Storage="_Inventory_BatchCustomDatas", ThisKey="ID", OtherKey="BatchID")]
		public EntitySet<Inventory_BatchCustomData> Inventory_BatchCustomDatas
		{
			get
			{
				return this._Inventory_BatchCustomDatas;
			}
			set
			{
				this._Inventory_BatchCustomDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryManager_Inventory_Batch", Storage="_InventoryManager", ThisKey="InventoryID", OtherKey="Id", IsForeignKey=true)]
		public InventoryManager InventoryManager
		{
			get
			{
				return this._InventoryManager.Entity;
			}
			set
			{
				InventoryManager previousValue = this._InventoryManager.Entity;
				if (((previousValue != value) 
							|| (this._InventoryManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryManager.Entity = null;
						previousValue.Inventory_Batches.Remove(this);
					}
					this._InventoryManager.Entity = value;
					if ((value != null))
					{
						value.Inventory_Batches.Add(this);
						this._InventoryID = value.Id;
					}
					else
					{
						this._InventoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InventoryManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryManager_Inventory_Batch1", Storage="_InventoryManager1", ThisKey="InventoryID", OtherKey="Id", IsForeignKey=true)]
		public InventoryManager InventoryManager1
		{
			get
			{
				return this._InventoryManager1.Entity;
			}
			set
			{
				InventoryManager previousValue = this._InventoryManager1.Entity;
				if (((previousValue != value) 
							|| (this._InventoryManager1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryManager1.Entity = null;
						previousValue.Inventory_Batches1.Remove(this);
					}
					this._InventoryManager1.Entity = value;
					if ((value != null))
					{
						value.Inventory_Batches1.Add(this);
						this._InventoryID = value.Id;
					}
					else
					{
						this._InventoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InventoryManager1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory_BatchCustomDatas(Inventory_BatchCustomData entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Batch = this;
		}
		
		private void detach_Inventory_BatchCustomDatas(Inventory_BatchCustomData entity)
		{
			this.SendPropertyChanging();
			entity.Inventory_Batch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryBatchOptions")]
	public partial class InventoryBatchOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<bool> _BatchControl;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _DateTimeCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnBatchControlChanging(System.Nullable<bool> value);
    partial void OnBatchControlChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnDateTimeCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeCreatedChanged();
    #endregion
		
		public InventoryBatchOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchControl", DbType="Bit")]
		public System.Nullable<bool> BatchControl
		{
			get
			{
				return this._BatchControl;
			}
			set
			{
				if ((this._BatchControl != value))
				{
					this.OnBatchControlChanging(value);
					this.SendPropertyChanging();
					this._BatchControl = value;
					this.SendPropertyChanged("BatchControl");
					this.OnBatchControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeCreated
		{
			get
			{
				return this._DateTimeCreated;
			}
			set
			{
				if ((this._DateTimeCreated != value))
				{
					this.OnDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeCreated = value;
					this.SendPropertyChanged("DateTimeCreated");
					this.OnDateTimeCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarehouseDetails")]
	public partial class WarehouseDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WarehouseName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _Town;
		
		private string _Postcode;
		
		private string _Email;
		
		private string _Mobile;
		
		private int _WarehouseManagerID;
		
		private int _LoggedBy;
		
		private System.DateTime _LoggedDate;
		
		private int _PortfolioID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWarehouseNameChanging(string value);
    partial void OnWarehouseNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnWarehouseManagerIDChanging(int value);
    partial void OnWarehouseManagerIDChanged();
    partial void OnLoggedByChanging(int value);
    partial void OnLoggedByChanged();
    partial void OnLoggedDateChanging(System.DateTime value);
    partial void OnLoggedDateChanged();
    partial void OnPortfolioIDChanging(int value);
    partial void OnPortfolioIDChanged();
    #endregion
		
		public WarehouseDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this.OnWarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._WarehouseName = value;
					this.SendPropertyChanged("WarehouseName");
					this.OnWarehouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(100)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NVarChar(50)")]
		public string Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseManagerID", DbType="Int NOT NULL")]
		public int WarehouseManagerID
		{
			get
			{
				return this._WarehouseManagerID;
			}
			set
			{
				if ((this._WarehouseManagerID != value))
				{
					this.OnWarehouseManagerIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseManagerID = value;
					this.SendPropertyChanged("WarehouseManagerID");
					this.OnWarehouseManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedBy", DbType="Int NOT NULL")]
		public int LoggedBy
		{
			get
			{
				return this._LoggedBy;
			}
			set
			{
				if ((this._LoggedBy != value))
				{
					this.OnLoggedByChanging(value);
					this.SendPropertyChanging();
					this._LoggedBy = value;
					this.SendPropertyChanged("LoggedBy");
					this.OnLoggedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoggedDate
		{
			get
			{
				return this._LoggedDate;
			}
			set
			{
				if ((this._LoggedDate != value))
				{
					this.OnLoggedDateChanging(value);
					this.SendPropertyChanging();
					this._LoggedDate = value;
					this.SendPropertyChanged("LoggedDate");
					this.OnLoggedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int NOT NULL")]
		public int PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryCategory")]
	public partial class InventoryCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _MasterID;
		
		private int _PortfolioID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMasterIDChanging(int value);
    partial void OnMasterIDChanged();
    partial void OnPortfolioIDChanging(int value);
    partial void OnPortfolioIDChanged();
    #endregion
		
		public InventoryCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterID", DbType="Int NOT NULL")]
		public int MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int NOT NULL")]
		public int PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryItemsAlloatment")]
	public partial class InventoryItemsAlloatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CallID;
		
		private int _InventoryID;
		
		private int _Quantity;
		
		private System.DateTime _AllotmentDate;
		
		private int _AllotedBy;
		
		private int _PortfolioID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCallIDChanging(int value);
    partial void OnCallIDChanged();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnAllotmentDateChanging(System.DateTime value);
    partial void OnAllotmentDateChanged();
    partial void OnAllotedByChanging(int value);
    partial void OnAllotedByChanged();
    partial void OnPortfolioIDChanging(int value);
    partial void OnPortfolioIDChanged();
    #endregion
		
		public InventoryItemsAlloatment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallID", DbType="Int NOT NULL")]
		public int CallID
		{
			get
			{
				return this._CallID;
			}
			set
			{
				if ((this._CallID != value))
				{
					this.OnCallIDChanging(value);
					this.SendPropertyChanging();
					this._CallID = value;
					this.SendPropertyChanged("CallID");
					this.OnCallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int NOT NULL")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllotmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AllotmentDate
		{
			get
			{
				return this._AllotmentDate;
			}
			set
			{
				if ((this._AllotmentDate != value))
				{
					this.OnAllotmentDateChanging(value);
					this.SendPropertyChanging();
					this._AllotmentDate = value;
					this.SendPropertyChanged("AllotmentDate");
					this.OnAllotmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllotedBy", DbType="Int NOT NULL")]
		public int AllotedBy
		{
			get
			{
				return this._AllotedBy;
			}
			set
			{
				if ((this._AllotedBy != value))
				{
					this.OnAllotedByChanging(value);
					this.SendPropertyChanging();
					this._AllotedBy = value;
					this.SendPropertyChanged("AllotedBy");
					this.OnAllotedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int NOT NULL")]
		public int PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryItemsTransfer")]
	public partial class InventoryItemsTransfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PortfolioID;
		
		private int _TransferFromInventoryID;
		
		private int _TransferToInventoryID;
		
		private int _TransferFromLocationID;
		
		private int _TransferToLocationID;
		
		private int _Quantity;
		
		private int _TransferQuantity;
		
		private System.DateTime _TransferDate;
		
		private int _TransferBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPortfolioIDChanging(int value);
    partial void OnPortfolioIDChanged();
    partial void OnTransferFromInventoryIDChanging(int value);
    partial void OnTransferFromInventoryIDChanged();
    partial void OnTransferToInventoryIDChanging(int value);
    partial void OnTransferToInventoryIDChanged();
    partial void OnTransferFromLocationIDChanging(int value);
    partial void OnTransferFromLocationIDChanged();
    partial void OnTransferToLocationIDChanging(int value);
    partial void OnTransferToLocationIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTransferQuantityChanging(int value);
    partial void OnTransferQuantityChanged();
    partial void OnTransferDateChanging(System.DateTime value);
    partial void OnTransferDateChanged();
    partial void OnTransferByChanging(int value);
    partial void OnTransferByChanged();
    #endregion
		
		public InventoryItemsTransfer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int NOT NULL")]
		public int PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferFromInventoryID", DbType="Int NOT NULL")]
		public int TransferFromInventoryID
		{
			get
			{
				return this._TransferFromInventoryID;
			}
			set
			{
				if ((this._TransferFromInventoryID != value))
				{
					this.OnTransferFromInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._TransferFromInventoryID = value;
					this.SendPropertyChanged("TransferFromInventoryID");
					this.OnTransferFromInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferToInventoryID", DbType="Int NOT NULL")]
		public int TransferToInventoryID
		{
			get
			{
				return this._TransferToInventoryID;
			}
			set
			{
				if ((this._TransferToInventoryID != value))
				{
					this.OnTransferToInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._TransferToInventoryID = value;
					this.SendPropertyChanged("TransferToInventoryID");
					this.OnTransferToInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferFromLocationID", DbType="Int NOT NULL")]
		public int TransferFromLocationID
		{
			get
			{
				return this._TransferFromLocationID;
			}
			set
			{
				if ((this._TransferFromLocationID != value))
				{
					this.OnTransferFromLocationIDChanging(value);
					this.SendPropertyChanging();
					this._TransferFromLocationID = value;
					this.SendPropertyChanged("TransferFromLocationID");
					this.OnTransferFromLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferToLocationID", DbType="Int NOT NULL")]
		public int TransferToLocationID
		{
			get
			{
				return this._TransferToLocationID;
			}
			set
			{
				if ((this._TransferToLocationID != value))
				{
					this.OnTransferToLocationIDChanging(value);
					this.SendPropertyChanging();
					this._TransferToLocationID = value;
					this.SendPropertyChanged("TransferToLocationID");
					this.OnTransferToLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferQuantity", DbType="Int NOT NULL")]
		public int TransferQuantity
		{
			get
			{
				return this._TransferQuantity;
			}
			set
			{
				if ((this._TransferQuantity != value))
				{
					this.OnTransferQuantityChanging(value);
					this.SendPropertyChanging();
					this._TransferQuantity = value;
					this.SendPropertyChanged("TransferQuantity");
					this.OnTransferQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferBy", DbType="Int NOT NULL")]
		public int TransferBy
		{
			get
			{
				return this._TransferBy;
			}
			set
			{
				if ((this._TransferBy != value))
				{
					this.OnTransferByChanging(value);
					this.SendPropertyChanging();
					this._TransferBy = value;
					this.SendPropertyChanged("TransferBy");
					this.OnTransferByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryItems")]
	public partial class InventoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private int _SubCategoryID;
		
		private string _Equipment;
		
		private System.Nullable<double> _Quantity;
		
		private int _StorageLocationID;
		
		private int _SupplierID;
		
		private System.DateTime _LoggedDate;
		
		private int _LoggedBy;
		
		private int _PortfolioID;
		
		private string _Floor;
		
		private string _Aisle;
		
		private string _Shelf;
		
		private string _Bin;
		
		private System.Nullable<double> _ReorderLevel;
		
		private System.Nullable<int> _EquipmentID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnSubCategoryIDChanging(int value);
    partial void OnSubCategoryIDChanged();
    partial void OnEquipmentChanging(string value);
    partial void OnEquipmentChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    partial void OnStorageLocationIDChanging(int value);
    partial void OnStorageLocationIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnLoggedDateChanging(System.DateTime value);
    partial void OnLoggedDateChanged();
    partial void OnLoggedByChanging(int value);
    partial void OnLoggedByChanged();
    partial void OnPortfolioIDChanging(int value);
    partial void OnPortfolioIDChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnAisleChanging(string value);
    partial void OnAisleChanged();
    partial void OnShelfChanging(string value);
    partial void OnShelfChanged();
    partial void OnBinChanging(string value);
    partial void OnBinChanged();
    partial void OnReorderLevelChanging(System.Nullable<double> value);
    partial void OnReorderLevelChanged();
    partial void OnEquipmentIDChanging(System.Nullable<int> value);
    partial void OnEquipmentIDChanged();
    #endregion
		
		public InventoryItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryID", DbType="Int NOT NULL")]
		public int SubCategoryID
		{
			get
			{
				return this._SubCategoryID;
			}
			set
			{
				if ((this._SubCategoryID != value))
				{
					this.OnSubCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryID = value;
					this.SendPropertyChanged("SubCategoryID");
					this.OnSubCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment", DbType="NVarChar(MAX)")]
		public string Equipment
		{
			get
			{
				return this._Equipment;
			}
			set
			{
				if ((this._Equipment != value))
				{
					this.OnEquipmentChanging(value);
					this.SendPropertyChanging();
					this._Equipment = value;
					this.SendPropertyChanged("Equipment");
					this.OnEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageLocationID", DbType="Int NOT NULL")]
		public int StorageLocationID
		{
			get
			{
				return this._StorageLocationID;
			}
			set
			{
				if ((this._StorageLocationID != value))
				{
					this.OnStorageLocationIDChanging(value);
					this.SendPropertyChanging();
					this._StorageLocationID = value;
					this.SendPropertyChanged("StorageLocationID");
					this.OnStorageLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoggedDate
		{
			get
			{
				return this._LoggedDate;
			}
			set
			{
				if ((this._LoggedDate != value))
				{
					this.OnLoggedDateChanging(value);
					this.SendPropertyChanging();
					this._LoggedDate = value;
					this.SendPropertyChanged("LoggedDate");
					this.OnLoggedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedBy", DbType="Int NOT NULL")]
		public int LoggedBy
		{
			get
			{
				return this._LoggedBy;
			}
			set
			{
				if ((this._LoggedBy != value))
				{
					this.OnLoggedByChanging(value);
					this.SendPropertyChanging();
					this._LoggedBy = value;
					this.SendPropertyChanged("LoggedBy");
					this.OnLoggedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int NOT NULL")]
		public int PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(250)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aisle", DbType="NVarChar(250)")]
		public string Aisle
		{
			get
			{
				return this._Aisle;
			}
			set
			{
				if ((this._Aisle != value))
				{
					this.OnAisleChanging(value);
					this.SendPropertyChanging();
					this._Aisle = value;
					this.SendPropertyChanged("Aisle");
					this.OnAisleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="NVarChar(250)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this.OnShelfChanging(value);
					this.SendPropertyChanging();
					this._Shelf = value;
					this.SendPropertyChanged("Shelf");
					this.OnShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bin", DbType="NVarChar(250)")]
		public string Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this.OnBinChanging(value);
					this.SendPropertyChanging();
					this._Bin = value;
					this.SendPropertyChanged("Bin");
					this.OnBinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderLevel", DbType="Float")]
		public System.Nullable<double> ReorderLevel
		{
			get
			{
				return this._ReorderLevel;
			}
			set
			{
				if ((this._ReorderLevel != value))
				{
					this.OnReorderLevelChanging(value);
					this.SendPropertyChanging();
					this._ReorderLevel = value;
					this.SendPropertyChanged("ReorderLevel");
					this.OnReorderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID", DbType="Int")]
		public System.Nullable<int> EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					this.OnEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._EquipmentID = value;
					this.SendPropertyChanged("EquipmentID");
					this.OnEquipmentIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_InventoryItems")]
	public partial class V_InventoryItem
	{
		
		private int _ID;
		
		private int _CategoryID;
		
		private int _SubCategoryID;
		
		private int _EquipmentID;
		
		private string _Equipment;
		
		private double _TotalQty;
		
		private System.Nullable<double> _Quantity;
		
		private int _QtyUsed;
		
		private int _StorageLocationID;
		
		private int _SupplierID;
		
		private System.DateTime _LoggedDate;
		
		private int _LoggedBy;
		
		private int _PortfolioID;
		
		private string _Floor;
		
		private string _Aisle;
		
		private string _Shelf;
		
		private string _Bin;
		
		private double _ReorderLevel;
		
		private string _ReorderLevelColor;
		
		private string _CategoryName;
		
		private string _SubCategoryName;
		
		private string _StorageLocationName;
		
		private string _SupplierName;
		
		public V_InventoryItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryID", DbType="Int NOT NULL")]
		public int SubCategoryID
		{
			get
			{
				return this._SubCategoryID;
			}
			set
			{
				if ((this._SubCategoryID != value))
				{
					this._SubCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID", DbType="Int NOT NULL")]
		public int EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					this._EquipmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment", DbType="NVarChar(MAX)")]
		public string Equipment
		{
			get
			{
				return this._Equipment;
			}
			set
			{
				if ((this._Equipment != value))
				{
					this._Equipment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Float NOT NULL")]
		public double TotalQty
		{
			get
			{
				return this._TotalQty;
			}
			set
			{
				if ((this._TotalQty != value))
				{
					this._TotalQty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyUsed", DbType="Int NOT NULL")]
		public int QtyUsed
		{
			get
			{
				return this._QtyUsed;
			}
			set
			{
				if ((this._QtyUsed != value))
				{
					this._QtyUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageLocationID", DbType="Int NOT NULL")]
		public int StorageLocationID
		{
			get
			{
				return this._StorageLocationID;
			}
			set
			{
				if ((this._StorageLocationID != value))
				{
					this._StorageLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoggedDate
		{
			get
			{
				return this._LoggedDate;
			}
			set
			{
				if ((this._LoggedDate != value))
				{
					this._LoggedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedBy", DbType="Int NOT NULL")]
		public int LoggedBy
		{
			get
			{
				return this._LoggedBy;
			}
			set
			{
				if ((this._LoggedBy != value))
				{
					this._LoggedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int NOT NULL")]
		public int PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this._PortfolioID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(250)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this._Floor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aisle", DbType="NVarChar(250)")]
		public string Aisle
		{
			get
			{
				return this._Aisle;
			}
			set
			{
				if ((this._Aisle != value))
				{
					this._Aisle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="NVarChar(250)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this._Shelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bin", DbType="NVarChar(250)")]
		public string Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this._Bin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderLevel", DbType="Float NOT NULL")]
		public double ReorderLevel
		{
			get
			{
				return this._ReorderLevel;
			}
			set
			{
				if ((this._ReorderLevel != value))
				{
					this._ReorderLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderLevelColor", DbType="NVarChar(200)")]
		public string ReorderLevelColor
		{
			get
			{
				return this._ReorderLevelColor;
			}
			set
			{
				if ((this._ReorderLevelColor != value))
				{
					this._ReorderLevelColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(500)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryName", DbType="VarChar(1000)")]
		public string SubCategoryName
		{
			get
			{
				return this._SubCategoryName;
			}
			set
			{
				if ((this._SubCategoryName != value))
				{
					this._SubCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageLocationName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string StorageLocationName
		{
			get
			{
				return this._StorageLocationName;
			}
			set
			{
				if ((this._StorageLocationName != value))
				{
					this._StorageLocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(100)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

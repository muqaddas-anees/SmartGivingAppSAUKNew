using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_Panelists
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:05
	/// </summary>
	public class RFI_Panelists_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_Panelists Load(DataRow oRow)
		{
			BE.RFI_Panelists oReturn = new BE.RFI_Panelists();
			oReturn.PANELLISTID = (int)oRow["PANELLISTID"];
            oReturn.CONTRACTORID = (int)oRow["CONTRACTORID"];
			oReturn.PROJECTREFERENCE = (int)oRow["PROJECTREFERENCE"];
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.RFI_Panelists oRFI_Panelists)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_INSERT", oRFI_Panelists.ItemParameter());
		}

		/// <summary>
		/// Search entity
		/// </summary>
        public static BE.RFI_Panelists Select(int projectreference)
		{
            DataSet dsRFI_Panelists = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_SELECT", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE", projectreference) });
			BE.RFI_Panelists oRFI_Panelists = null;
			if (dsRFI_Panelists.Tables[0].Rows.Count > 0)
				oRFI_Panelists = RFI_Panelists_Base_DAL.Load(dsRFI_Panelists.Tables[0].Rows[0]);
			return oRFI_Panelists;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int contractorid,int projectreference)
		{
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@CONTRACTORID", contractorid) ,new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE", projectreference) })) > 0;
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
        public static DataTable Fill(int projectreference)
		{
            DataSet dsRFI_Panelists = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_FILL", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@PROJECTREFERENCE", projectreference) });
			return dsRFI_Panelists.Tables[0];
		}

		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_Panelists oRFI_Panelists)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_UPDATE", oRFI_Panelists.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(int panelistid)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@PANELISTID", panelistid) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTS_DELETEALL");
		}
	}
}

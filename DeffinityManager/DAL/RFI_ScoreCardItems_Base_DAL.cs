using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_ScoreCardItems
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:21
	/// </summary>
	public class RFI_ScoreCardItems_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_ScoreCardItems Load(DataRow oRow)
		{
			BE.RFI_ScoreCardItems oReturn = new BE.RFI_ScoreCardItems();
			oReturn.ID = (int)oRow["ID"];
			oReturn.SUBSECTIONID = (int)oRow["SUBSECTIONID"];
			oReturn.ITEMDESCRIPTION = (string)oRow["ITEMDESCRIPTION"];
			oReturn.WEIGHT = (double)oRow["WEIGHT"];
			oReturn.PROJECTREFERENCE = (int)oRow["PROJECTREFERENCE"];
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.RFI_ScoreCardItems oRFI_ScoreCardItems)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_INSERT", oRFI_ScoreCardItems.ItemParameter());
		}

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.RFI_ScoreCardItems Select(int id)
		{
			DataSet dsRFI_ScoreCardItems = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_SELECT", new System.Data.SqlClient.SqlParameter[]{ new System.Data.SqlClient.SqlParameter("@ID", id) });
			BE.RFI_ScoreCardItems oRFI_ScoreCardItems = null;
			if (dsRFI_ScoreCardItems.Tables[0].Rows.Count > 0)
				oRFI_ScoreCardItems = RFI_ScoreCardItems_Base_DAL.Load(dsRFI_ScoreCardItems.Tables[0].Rows[0]);
			return oRFI_ScoreCardItems;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int id)
		{
			return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) })) > 0;
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
		public static DataTable Fill()
		{
			DataSet dsRFI_ScoreCardItems = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_FILL");
			return dsRFI_ScoreCardItems.Tables[0];
		}

		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_ScoreCardItems oRFI_ScoreCardItems)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_UPDATE", oRFI_ScoreCardItems.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(int id)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SCORECARDITEMS_DELETEALL");
		}
	}
}

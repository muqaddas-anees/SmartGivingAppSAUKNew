using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_PanelistScore
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:08
	/// </summary>
	public class RFI_PanelistScore_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_PanelistScore Load(DataRow oRow)
		{
			BE.RFI_PanelistScore oReturn = new BE.RFI_PanelistScore();
			oReturn.ID = (int)oRow["ID"];
			oReturn.SCOREID = (int)oRow["SCOREID"];
			oReturn.SCORE = (int)oRow["SCORE"];
			oReturn.PANELISTID = (int)oRow["PANELISTID"];
			oReturn.COMMENTS = (oRow["COMMENTS"] == DBNull.Value ? (null) : ((string)oRow["COMMENTS"]));
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.RFI_PanelistScore oRFI_PanelistScore)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_INSERT", oRFI_PanelistScore.ItemParameter());
		}

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.RFI_PanelistScore Select(int id)
		{
			DataSet dsRFI_PanelistScore = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_SELECT", new System.Data.SqlClient.SqlParameter[]{ new System.Data.SqlClient.SqlParameter("@ID", id) });
			BE.RFI_PanelistScore oRFI_PanelistScore = null;
			if (dsRFI_PanelistScore.Tables[0].Rows.Count > 0)
				oRFI_PanelistScore = RFI_PanelistScore_Base_DAL.Load(dsRFI_PanelistScore.Tables[0].Rows[0]);
			return oRFI_PanelistScore;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int id)
		{
			return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) })) > 0;
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
		public static DataTable Fill()
		{
			DataSet dsRFI_PanelistScore = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_FILL");
			return dsRFI_PanelistScore.Tables[0];
		}


		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_PanelistScore oRFI_PanelistScore)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_UPDATE", oRFI_PanelistScore.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(int id)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PANELISTSCORE_DELETEALL");
		}
	}
}

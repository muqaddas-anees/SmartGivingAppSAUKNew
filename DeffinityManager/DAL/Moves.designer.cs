#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Move.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeffinityEflair")]
	public partial class MovesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMoveAssets_Document(Move.Entity.MoveAssets_Document instance);
    partial void UpdateMoveAssets_Document(Move.Entity.MoveAssets_Document instance);
    partial void DeleteMoveAssets_Document(Move.Entity.MoveAssets_Document instance);
    partial void InsertIncidentID_Move(Move.Entity.IncidentID_Move instance);
    partial void UpdateIncidentID_Move(Move.Entity.IncidentID_Move instance);
    partial void DeleteIncidentID_Move(Move.Entity.IncidentID_Move instance);
    partial void InsertAssetMove(Move.Entity.AssetMove instance);
    partial void UpdateAssetMove(Move.Entity.AssetMove instance);
    partial void DeleteAssetMove(Move.Entity.AssetMove instance);
    partial void InsertAssetsDeskUpload(Move.Entity.AssetsDeskUpload instance);
    partial void UpdateAssetsDeskUpload(Move.Entity.AssetsDeskUpload instance);
    partial void DeleteAssetsDeskUpload(Move.Entity.AssetsDeskUpload instance);
    partial void InsertMoveAsset(Move.Entity.MoveAsset instance);
    partial void UpdateMoveAsset(Move.Entity.MoveAsset instance);
    partial void DeleteMoveAsset(Move.Entity.MoveAsset instance);
    partial void InsertCommitDatabase(Move.Entity.CommitDatabase instance);
    partial void UpdateCommitDatabase(Move.Entity.CommitDatabase instance);
    partial void DeleteCommitDatabase(Move.Entity.CommitDatabase instance);
    partial void InsertMovesDealerVoice(Move.Entity.MovesDealerVoice instance);
    partial void UpdateMovesDealerVoice(Move.Entity.MovesDealerVoice instance);
    partial void DeleteMovesDealerVoice(Move.Entity.MovesDealerVoice instance);
    partial void InsertJMoveInformation(Move.Entity.JMoveInformation instance);
    partial void UpdateJMoveInformation(Move.Entity.JMoveInformation instance);
    partial void DeleteJMoveInformation(Move.Entity.JMoveInformation instance);
    #endregion
		
		public MovesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBstring"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MovesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Move.Entity.v_AssetMove> v_AssetMoves
		{
			get
			{
				return this.GetTable<Move.Entity.v_AssetMove>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.MoveAssets_Document> MoveAssets_Documents
		{
			get
			{
				return this.GetTable<Move.Entity.MoveAssets_Document>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.IncidentID_Move> IncidentID_Moves
		{
			get
			{
				return this.GetTable<Move.Entity.IncidentID_Move>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.AssetMove> AssetMoves
		{
			get
			{
				return this.GetTable<Move.Entity.AssetMove>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.AssetsDeskUpload> AssetsDeskUploads
		{
			get
			{
				return this.GetTable<Move.Entity.AssetsDeskUpload>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.MoveAsset> MoveAssets
		{
			get
			{
				return this.GetTable<Move.Entity.MoveAsset>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.CommitDatabase> CommitDatabases
		{
			get
			{
				return this.GetTable<Move.Entity.CommitDatabase>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.MovesDealerVoice> MovesDealerVoices
		{
			get
			{
				return this.GetTable<Move.Entity.MovesDealerVoice>();
			}
		}
		
		public System.Data.Linq.Table<Move.Entity.JMoveInformation> JMoveInformations
		{
			get
			{
				return this.GetTable<Move.Entity.JMoveInformation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AssetsMove_Delete")]
		public int AssetsMove_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoveID", DbType="Int")] System.Nullable<int> moveID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moveID);
			return ((int)(result.ReturnValue));
		}
	}
}
namespace Move.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_AssetMove")]
	public partial class v_AssetMove
	{
		
		private int _ID;
		
		private int _MoveRef;
		
		private string _Surname;
		
		private string _FirstName;
		
		private string _FromMove;
		
		private string _ToMove;
		
		private string _ExistingGOP;
		
		private string _ProposedGOP;
		
		private string _Extension;
		
		private string _Comments;
		
		private System.Nullable<int> _NumberofItems;
		
		private System.Nullable<int> _IncidentID;
		
		private string _chkstatus;
		
		public v_AssetMove()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int NOT NULL")]
		public int MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this._MoveRef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMove", DbType="VarChar(50)")]
		public string FromMove
		{
			get
			{
				return this._FromMove;
			}
			set
			{
				if ((this._FromMove != value))
				{
					this._FromMove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMove", DbType="VarChar(50)")]
		public string ToMove
		{
			get
			{
				return this._ToMove;
			}
			set
			{
				if ((this._ToMove != value))
				{
					this._ToMove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingGOP", DbType="VarChar(50)")]
		public string ExistingGOP
		{
			get
			{
				return this._ExistingGOP;
			}
			set
			{
				if ((this._ExistingGOP != value))
				{
					this._ExistingGOP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedGOP", DbType="VarChar(50)")]
		public string ProposedGOP
		{
			get
			{
				return this._ProposedGOP;
			}
			set
			{
				if ((this._ProposedGOP != value))
				{
					this._ProposedGOP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(50)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofItems", DbType="Int")]
		public System.Nullable<int> NumberofItems
		{
			get
			{
				return this._NumberofItems;
			}
			set
			{
				if ((this._NumberofItems != value))
				{
					this._NumberofItems = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentID", DbType="Int")]
		public System.Nullable<int> IncidentID
		{
			get
			{
				return this._IncidentID;
			}
			set
			{
				if ((this._IncidentID != value))
				{
					this._IncidentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chkstatus", DbType="VarChar(100)")]
		public string chkstatus
		{
			get
			{
				return this._chkstatus;
			}
			set
			{
				if ((this._chkstatus != value))
				{
					this._chkstatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoveAssets_Document")]
	public partial class MoveAssets_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MoveID;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMoveIDChanging(System.Nullable<int> value);
    partial void OnMoveIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public MoveAssets_Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveID", DbType="Int")]
		public System.Nullable<int> MoveID
		{
			get
			{
				return this._MoveID;
			}
			set
			{
				if ((this._MoveID != value))
				{
					this.OnMoveIDChanging(value);
					this.SendPropertyChanging();
					this._MoveID = value;
					this.SendPropertyChanged("MoveID");
					this.OnMoveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IncidentID_Moves")]
	public partial class IncidentID_Move : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SDID;
		
		private System.Nullable<int> _NoOfUsers;
		
		private System.Nullable<int> _TotalQty;
		
		private System.Nullable<System.DateTime> _MoveDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSDIDChanging(System.Nullable<int> value);
    partial void OnSDIDChanged();
    partial void OnNoOfUsersChanging(System.Nullable<int> value);
    partial void OnNoOfUsersChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnMoveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMoveDateChanged();
    #endregion
		
		public IncidentID_Move()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDID", DbType="Int")]
		public System.Nullable<int> SDID
		{
			get
			{
				return this._SDID;
			}
			set
			{
				if ((this._SDID != value))
				{
					this.OnSDIDChanging(value);
					this.SendPropertyChanging();
					this._SDID = value;
					this.SendPropertyChanged("SDID");
					this.OnSDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfUsers", DbType="Int")]
		public System.Nullable<int> NoOfUsers
		{
			get
			{
				return this._NoOfUsers;
			}
			set
			{
				if ((this._NoOfUsers != value))
				{
					this.OnNoOfUsersChanging(value);
					this.SendPropertyChanging();
					this._NoOfUsers = value;
					this.SendPropertyChanged("NoOfUsers");
					this.OnNoOfUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
		public System.Nullable<int> TotalQty
		{
			get
			{
				return this._TotalQty;
			}
			set
			{
				if ((this._TotalQty != value))
				{
					this.OnTotalQtyChanging(value);
					this.SendPropertyChanging();
					this._TotalQty = value;
					this.SendPropertyChanged("TotalQty");
					this.OnTotalQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MoveDate
		{
			get
			{
				return this._MoveDate;
			}
			set
			{
				if ((this._MoveDate != value))
				{
					this.OnMoveDateChanging(value);
					this.SendPropertyChanging();
					this._MoveDate = value;
					this.SendPropertyChanged("MoveDate");
					this.OnMoveDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetMove")]
	public partial class AssetMove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MoveRef;
		
		private string _Surname;
		
		private string _FirstName;
		
		private string _FromMove;
		
		private string _ToMove;
		
		private string _ExistingGOP;
		
		private string _ProposedGOP;
		
		private string _Extension;
		
		private System.Nullable<int> _NumberofItems;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _Movedate;
		
		private System.Nullable<int> _IncidentID;
		
		private string _chkstatus;
		
		private string _EmailAddress;
		
		private System.Nullable<bool> _CheckStatus;
		
		private string _IcomAgent;
		
		private string _ConsoleID;
		
		private string _PortID;
		
		private string _FromSpkr;
		
		private string _SpeakerBusNum;
		
		private string _SpeakerBusType;
		
		private string _SpeakerBusPort;
		
		private string _SpeakerBusPin;
		
		private string _ToSpeaker;
		
		private string _FreeSEAT;
		
		private string _DestSpeakerBusType;
		
		private string _Handset1;
		
		private string _Handset2;
		
		private string _Headset1;
		
		private string _Headset2;
		
		private string _Notes;
		
		private System.Nullable<int> _DeskView;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMoveRefChanging(System.Nullable<int> value);
    partial void OnMoveRefChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnFromMoveChanging(string value);
    partial void OnFromMoveChanged();
    partial void OnToMoveChanging(string value);
    partial void OnToMoveChanged();
    partial void OnExistingGOPChanging(string value);
    partial void OnExistingGOPChanged();
    partial void OnProposedGOPChanging(string value);
    partial void OnProposedGOPChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnNumberofItemsChanging(System.Nullable<int> value);
    partial void OnNumberofItemsChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnMovedateChanging(System.Nullable<System.DateTime> value);
    partial void OnMovedateChanged();
    partial void OnIncidentIDChanging(System.Nullable<int> value);
    partial void OnIncidentIDChanged();
    partial void OnchkstatusChanging(string value);
    partial void OnchkstatusChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnCheckStatusChanging(System.Nullable<bool> value);
    partial void OnCheckStatusChanged();
    partial void OnIcomAgentChanging(string value);
    partial void OnIcomAgentChanged();
    partial void OnConsoleIDChanging(string value);
    partial void OnConsoleIDChanged();
    partial void OnPortIDChanging(string value);
    partial void OnPortIDChanged();
    partial void OnFromSpkrChanging(string value);
    partial void OnFromSpkrChanged();
    partial void OnSpeakerBusNumChanging(string value);
    partial void OnSpeakerBusNumChanged();
    partial void OnSpeakerBusTypeChanging(string value);
    partial void OnSpeakerBusTypeChanged();
    partial void OnSpeakerBusPortChanging(string value);
    partial void OnSpeakerBusPortChanged();
    partial void OnSpeakerBusPinChanging(string value);
    partial void OnSpeakerBusPinChanged();
    partial void OnToSpeakerChanging(string value);
    partial void OnToSpeakerChanged();
    partial void OnFreeSEATChanging(string value);
    partial void OnFreeSEATChanged();
    partial void OnDestSpeakerBusTypeChanging(string value);
    partial void OnDestSpeakerBusTypeChanged();
    partial void OnHandset1Changing(string value);
    partial void OnHandset1Changed();
    partial void OnHandset2Changing(string value);
    partial void OnHandset2Changed();
    partial void OnHeadset1Changing(string value);
    partial void OnHeadset1Changed();
    partial void OnHeadset2Changing(string value);
    partial void OnHeadset2Changed();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeskViewChanging(System.Nullable<int> value);
    partial void OnDeskViewChanged();
    #endregion
		
		public AssetMove()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this.OnMoveRefChanging(value);
					this.SendPropertyChanging();
					this._MoveRef = value;
					this.SendPropertyChanged("MoveRef");
					this.OnMoveRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMove", DbType="VarChar(50)")]
		public string FromMove
		{
			get
			{
				return this._FromMove;
			}
			set
			{
				if ((this._FromMove != value))
				{
					this.OnFromMoveChanging(value);
					this.SendPropertyChanging();
					this._FromMove = value;
					this.SendPropertyChanged("FromMove");
					this.OnFromMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMove", DbType="VarChar(50)")]
		public string ToMove
		{
			get
			{
				return this._ToMove;
			}
			set
			{
				if ((this._ToMove != value))
				{
					this.OnToMoveChanging(value);
					this.SendPropertyChanging();
					this._ToMove = value;
					this.SendPropertyChanged("ToMove");
					this.OnToMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingGOP", DbType="VarChar(50)")]
		public string ExistingGOP
		{
			get
			{
				return this._ExistingGOP;
			}
			set
			{
				if ((this._ExistingGOP != value))
				{
					this.OnExistingGOPChanging(value);
					this.SendPropertyChanging();
					this._ExistingGOP = value;
					this.SendPropertyChanged("ExistingGOP");
					this.OnExistingGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedGOP", DbType="VarChar(50)")]
		public string ProposedGOP
		{
			get
			{
				return this._ProposedGOP;
			}
			set
			{
				if ((this._ProposedGOP != value))
				{
					this.OnProposedGOPChanging(value);
					this.SendPropertyChanging();
					this._ProposedGOP = value;
					this.SendPropertyChanged("ProposedGOP");
					this.OnProposedGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(50)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofItems", DbType="Int")]
		public System.Nullable<int> NumberofItems
		{
			get
			{
				return this._NumberofItems;
			}
			set
			{
				if ((this._NumberofItems != value))
				{
					this.OnNumberofItemsChanging(value);
					this.SendPropertyChanging();
					this._NumberofItems = value;
					this.SendPropertyChanged("NumberofItems");
					this.OnNumberofItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Movedate
		{
			get
			{
				return this._Movedate;
			}
			set
			{
				if ((this._Movedate != value))
				{
					this.OnMovedateChanging(value);
					this.SendPropertyChanging();
					this._Movedate = value;
					this.SendPropertyChanged("Movedate");
					this.OnMovedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentID", DbType="Int")]
		public System.Nullable<int> IncidentID
		{
			get
			{
				return this._IncidentID;
			}
			set
			{
				if ((this._IncidentID != value))
				{
					this.OnIncidentIDChanging(value);
					this.SendPropertyChanging();
					this._IncidentID = value;
					this.SendPropertyChanged("IncidentID");
					this.OnIncidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chkstatus", DbType="VarChar(100)")]
		public string chkstatus
		{
			get
			{
				return this._chkstatus;
			}
			set
			{
				if ((this._chkstatus != value))
				{
					this.OnchkstatusChanging(value);
					this.SendPropertyChanging();
					this._chkstatus = value;
					this.SendPropertyChanged("chkstatus");
					this.OnchkstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(250)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckStatus", DbType="Bit")]
		public System.Nullable<bool> CheckStatus
		{
			get
			{
				return this._CheckStatus;
			}
			set
			{
				if ((this._CheckStatus != value))
				{
					this.OnCheckStatusChanging(value);
					this.SendPropertyChanging();
					this._CheckStatus = value;
					this.SendPropertyChanged("CheckStatus");
					this.OnCheckStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IcomAgent", DbType="VarChar(250)")]
		public string IcomAgent
		{
			get
			{
				return this._IcomAgent;
			}
			set
			{
				if ((this._IcomAgent != value))
				{
					this.OnIcomAgentChanging(value);
					this.SendPropertyChanging();
					this._IcomAgent = value;
					this.SendPropertyChanged("IcomAgent");
					this.OnIcomAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsoleID", DbType="VarChar(250)")]
		public string ConsoleID
		{
			get
			{
				return this._ConsoleID;
			}
			set
			{
				if ((this._ConsoleID != value))
				{
					this.OnConsoleIDChanging(value);
					this.SendPropertyChanging();
					this._ConsoleID = value;
					this.SendPropertyChanged("ConsoleID");
					this.OnConsoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortID", DbType="VarChar(250)")]
		public string PortID
		{
			get
			{
				return this._PortID;
			}
			set
			{
				if ((this._PortID != value))
				{
					this.OnPortIDChanging(value);
					this.SendPropertyChanging();
					this._PortID = value;
					this.SendPropertyChanged("PortID");
					this.OnPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSpkr", DbType="VarChar(250)")]
		public string FromSpkr
		{
			get
			{
				return this._FromSpkr;
			}
			set
			{
				if ((this._FromSpkr != value))
				{
					this.OnFromSpkrChanging(value);
					this.SendPropertyChanging();
					this._FromSpkr = value;
					this.SendPropertyChanged("FromSpkr");
					this.OnFromSpkrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusNum", DbType="VarChar(250)")]
		public string SpeakerBusNum
		{
			get
			{
				return this._SpeakerBusNum;
			}
			set
			{
				if ((this._SpeakerBusNum != value))
				{
					this.OnSpeakerBusNumChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusNum = value;
					this.SendPropertyChanged("SpeakerBusNum");
					this.OnSpeakerBusNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusType", DbType="VarChar(250)")]
		public string SpeakerBusType
		{
			get
			{
				return this._SpeakerBusType;
			}
			set
			{
				if ((this._SpeakerBusType != value))
				{
					this.OnSpeakerBusTypeChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusType = value;
					this.SendPropertyChanged("SpeakerBusType");
					this.OnSpeakerBusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusPort", DbType="VarChar(250)")]
		public string SpeakerBusPort
		{
			get
			{
				return this._SpeakerBusPort;
			}
			set
			{
				if ((this._SpeakerBusPort != value))
				{
					this.OnSpeakerBusPortChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusPort = value;
					this.SendPropertyChanged("SpeakerBusPort");
					this.OnSpeakerBusPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusPin", DbType="VarChar(250)")]
		public string SpeakerBusPin
		{
			get
			{
				return this._SpeakerBusPin;
			}
			set
			{
				if ((this._SpeakerBusPin != value))
				{
					this.OnSpeakerBusPinChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusPin = value;
					this.SendPropertyChanged("SpeakerBusPin");
					this.OnSpeakerBusPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSpeaker", DbType="VarChar(250)")]
		public string ToSpeaker
		{
			get
			{
				return this._ToSpeaker;
			}
			set
			{
				if ((this._ToSpeaker != value))
				{
					this.OnToSpeakerChanging(value);
					this.SendPropertyChanging();
					this._ToSpeaker = value;
					this.SendPropertyChanged("ToSpeaker");
					this.OnToSpeakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeSEAT", DbType="VarChar(250)")]
		public string FreeSEAT
		{
			get
			{
				return this._FreeSEAT;
			}
			set
			{
				if ((this._FreeSEAT != value))
				{
					this.OnFreeSEATChanging(value);
					this.SendPropertyChanging();
					this._FreeSEAT = value;
					this.SendPropertyChanged("FreeSEAT");
					this.OnFreeSEATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestSpeakerBusType", DbType="VarChar(250)")]
		public string DestSpeakerBusType
		{
			get
			{
				return this._DestSpeakerBusType;
			}
			set
			{
				if ((this._DestSpeakerBusType != value))
				{
					this.OnDestSpeakerBusTypeChanging(value);
					this.SendPropertyChanging();
					this._DestSpeakerBusType = value;
					this.SendPropertyChanged("DestSpeakerBusType");
					this.OnDestSpeakerBusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handset1", DbType="VarChar(250)")]
		public string Handset1
		{
			get
			{
				return this._Handset1;
			}
			set
			{
				if ((this._Handset1 != value))
				{
					this.OnHandset1Changing(value);
					this.SendPropertyChanging();
					this._Handset1 = value;
					this.SendPropertyChanged("Handset1");
					this.OnHandset1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handset2", DbType="VarChar(250)")]
		public string Handset2
		{
			get
			{
				return this._Handset2;
			}
			set
			{
				if ((this._Handset2 != value))
				{
					this.OnHandset2Changing(value);
					this.SendPropertyChanging();
					this._Handset2 = value;
					this.SendPropertyChanged("Handset2");
					this.OnHandset2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Headset1", DbType="VarChar(250)")]
		public string Headset1
		{
			get
			{
				return this._Headset1;
			}
			set
			{
				if ((this._Headset1 != value))
				{
					this.OnHeadset1Changing(value);
					this.SendPropertyChanging();
					this._Headset1 = value;
					this.SendPropertyChanged("Headset1");
					this.OnHeadset1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Headset2", DbType="VarChar(250)")]
		public string Headset2
		{
			get
			{
				return this._Headset2;
			}
			set
			{
				if ((this._Headset2 != value))
				{
					this.OnHeadset2Changing(value);
					this.SendPropertyChanging();
					this._Headset2 = value;
					this.SendPropertyChanged("Headset2");
					this.OnHeadset2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeskView", DbType="Int")]
		public System.Nullable<int> DeskView
		{
			get
			{
				return this._DeskView;
			}
			set
			{
				if ((this._DeskView != value))
				{
					this.OnDeskViewChanging(value);
					this.SendPropertyChanging();
					this._DeskView = value;
					this.SendPropertyChanged("DeskView");
					this.OnDeskViewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetsDeskUpload")]
	public partial class AssetsDeskUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Desk;
		
		private string _GOP;
		
		private string _ConsoleID;
		
		private string _PortID;
		
		private string _SpkrBusNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    partial void OnGOPChanging(string value);
    partial void OnGOPChanged();
    partial void OnConsoleIDChanging(string value);
    partial void OnConsoleIDChanged();
    partial void OnPortIDChanging(string value);
    partial void OnPortIDChanged();
    partial void OnSpkrBusNoChanging(string value);
    partial void OnSpkrBusNoChanged();
    #endregion
		
		public AssetsDeskUpload()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="VarChar(50)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GOP", DbType="VarChar(50)")]
		public string GOP
		{
			get
			{
				return this._GOP;
			}
			set
			{
				if ((this._GOP != value))
				{
					this.OnGOPChanging(value);
					this.SendPropertyChanging();
					this._GOP = value;
					this.SendPropertyChanged("GOP");
					this.OnGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsoleID", DbType="VarChar(50)")]
		public string ConsoleID
		{
			get
			{
				return this._ConsoleID;
			}
			set
			{
				if ((this._ConsoleID != value))
				{
					this.OnConsoleIDChanging(value);
					this.SendPropertyChanging();
					this._ConsoleID = value;
					this.SendPropertyChanged("ConsoleID");
					this.OnConsoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortID", DbType="VarChar(50)")]
		public string PortID
		{
			get
			{
				return this._PortID;
			}
			set
			{
				if ((this._PortID != value))
				{
					this.OnPortIDChanging(value);
					this.SendPropertyChanging();
					this._PortID = value;
					this.SendPropertyChanged("PortID");
					this.OnPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpkrBusNo", DbType="VarChar(50)")]
		public string SpkrBusNo
		{
			get
			{
				return this._SpkrBusNo;
			}
			set
			{
				if ((this._SpkrBusNo != value))
				{
					this.OnSpkrBusNoChanging(value);
					this.SendPropertyChanging();
					this._SpkrBusNo = value;
					this.SendPropertyChanged("SpkrBusNo");
					this.OnSpkrBusNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoveAssets")]
	public partial class MoveAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _EquipmentType;
		
		private string _Assetnumber;
		
		private System.Nullable<int> _Make;
		
		private System.Nullable<int> _Model;
		
		private string _FromGop;
		
		private string _FromPort;
		
		private string _ToGOP;
		
		private string _ToPort;
		
		private string _Notes;
		
		private System.Nullable<int> _MoveRef;
		
		private System.Nullable<int> _UserID;
		
		private string _Status;
		
		private System.Nullable<int> _Incident;
		
		private string _OldLink;
		
		private string _NewLink;
		
		private string _HostName;
		
		private string _Desk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEquipmentTypeChanging(System.Nullable<int> value);
    partial void OnEquipmentTypeChanged();
    partial void OnAssetnumberChanging(string value);
    partial void OnAssetnumberChanged();
    partial void OnMakeChanging(System.Nullable<int> value);
    partial void OnMakeChanged();
    partial void OnModelChanging(System.Nullable<int> value);
    partial void OnModelChanged();
    partial void OnFromGopChanging(string value);
    partial void OnFromGopChanged();
    partial void OnFromPortChanging(string value);
    partial void OnFromPortChanged();
    partial void OnToGOPChanging(string value);
    partial void OnToGOPChanged();
    partial void OnToPortChanging(string value);
    partial void OnToPortChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMoveRefChanging(System.Nullable<int> value);
    partial void OnMoveRefChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIncidentChanging(System.Nullable<int> value);
    partial void OnIncidentChanged();
    partial void OnOldLinkChanging(string value);
    partial void OnOldLinkChanged();
    partial void OnNewLinkChanging(string value);
    partial void OnNewLinkChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    #endregion
		
		public MoveAsset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="Int")]
		public System.Nullable<int> EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assetnumber", DbType="VarChar(50)")]
		public string Assetnumber
		{
			get
			{
				return this._Assetnumber;
			}
			set
			{
				if ((this._Assetnumber != value))
				{
					this.OnAssetnumberChanging(value);
					this.SendPropertyChanging();
					this._Assetnumber = value;
					this.SendPropertyChanged("Assetnumber");
					this.OnAssetnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="Int")]
		public System.Nullable<int> Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
		public System.Nullable<int> Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromGop", DbType="VarChar(50)")]
		public string FromGop
		{
			get
			{
				return this._FromGop;
			}
			set
			{
				if ((this._FromGop != value))
				{
					this.OnFromGopChanging(value);
					this.SendPropertyChanging();
					this._FromGop = value;
					this.SendPropertyChanged("FromGop");
					this.OnFromGopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPort", DbType="VarChar(50)")]
		public string FromPort
		{
			get
			{
				return this._FromPort;
			}
			set
			{
				if ((this._FromPort != value))
				{
					this.OnFromPortChanging(value);
					this.SendPropertyChanging();
					this._FromPort = value;
					this.SendPropertyChanged("FromPort");
					this.OnFromPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToGOP", DbType="VarChar(50)")]
		public string ToGOP
		{
			get
			{
				return this._ToGOP;
			}
			set
			{
				if ((this._ToGOP != value))
				{
					this.OnToGOPChanging(value);
					this.SendPropertyChanging();
					this._ToGOP = value;
					this.SendPropertyChanged("ToGOP");
					this.OnToGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPort", DbType="VarChar(50)")]
		public string ToPort
		{
			get
			{
				return this._ToPort;
			}
			set
			{
				if ((this._ToPort != value))
				{
					this.OnToPortChanging(value);
					this.SendPropertyChanging();
					this._ToPort = value;
					this.SendPropertyChanged("ToPort");
					this.OnToPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this.OnMoveRefChanging(value);
					this.SendPropertyChanging();
					this._MoveRef = value;
					this.SendPropertyChanged("MoveRef");
					this.OnMoveRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incident", DbType="Int")]
		public System.Nullable<int> Incident
		{
			get
			{
				return this._Incident;
			}
			set
			{
				if ((this._Incident != value))
				{
					this.OnIncidentChanging(value);
					this.SendPropertyChanging();
					this._Incident = value;
					this.SendPropertyChanged("Incident");
					this.OnIncidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldLink", DbType="VarChar(50)")]
		public string OldLink
		{
			get
			{
				return this._OldLink;
			}
			set
			{
				if ((this._OldLink != value))
				{
					this.OnOldLinkChanging(value);
					this.SendPropertyChanging();
					this._OldLink = value;
					this.SendPropertyChanged("OldLink");
					this.OnOldLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewLink", DbType="VarChar(50)")]
		public string NewLink
		{
			get
			{
				return this._NewLink;
			}
			set
			{
				if ((this._NewLink != value))
				{
					this.OnNewLinkChanging(value);
					this.SendPropertyChanging();
					this._NewLink = value;
					this.SendPropertyChanged("NewLink");
					this.OnNewLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(50)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(50)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommitDatabase")]
	public partial class CommitDatabase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MoveRef;
		
		private string _Surname;
		
		private string _FirstName;
		
		private string _EmailAddress;
		
		private string _FromMove;
		
		private string _ToMove;
		
		private System.Nullable<System.DateTime> _MoveDate;
		
		private System.Nullable<int> _IncidentID;
		
		private string _ExistingGOP;
		
		private string _ProposedGOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMoveRefChanging(System.Nullable<int> value);
    partial void OnMoveRefChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnFromMoveChanging(string value);
    partial void OnFromMoveChanged();
    partial void OnToMoveChanging(string value);
    partial void OnToMoveChanged();
    partial void OnMoveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMoveDateChanged();
    partial void OnIncidentIDChanging(System.Nullable<int> value);
    partial void OnIncidentIDChanged();
    partial void OnExistingGOPChanging(string value);
    partial void OnExistingGOPChanged();
    partial void OnProposedGOPChanging(string value);
    partial void OnProposedGOPChanged();
    #endregion
		
		public CommitDatabase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this.OnMoveRefChanging(value);
					this.SendPropertyChanging();
					this._MoveRef = value;
					this.SendPropertyChanged("MoveRef");
					this.OnMoveRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(250)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(250)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(250)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMove", DbType="NVarChar(250)")]
		public string FromMove
		{
			get
			{
				return this._FromMove;
			}
			set
			{
				if ((this._FromMove != value))
				{
					this.OnFromMoveChanging(value);
					this.SendPropertyChanging();
					this._FromMove = value;
					this.SendPropertyChanged("FromMove");
					this.OnFromMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMove", DbType="NVarChar(250)")]
		public string ToMove
		{
			get
			{
				return this._ToMove;
			}
			set
			{
				if ((this._ToMove != value))
				{
					this.OnToMoveChanging(value);
					this.SendPropertyChanging();
					this._ToMove = value;
					this.SendPropertyChanged("ToMove");
					this.OnToMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MoveDate
		{
			get
			{
				return this._MoveDate;
			}
			set
			{
				if ((this._MoveDate != value))
				{
					this.OnMoveDateChanging(value);
					this.SendPropertyChanging();
					this._MoveDate = value;
					this.SendPropertyChanged("MoveDate");
					this.OnMoveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentID", DbType="Int")]
		public System.Nullable<int> IncidentID
		{
			get
			{
				return this._IncidentID;
			}
			set
			{
				if ((this._IncidentID != value))
				{
					this.OnIncidentIDChanging(value);
					this.SendPropertyChanging();
					this._IncidentID = value;
					this.SendPropertyChanged("IncidentID");
					this.OnIncidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingGOP", DbType="NVarChar(100)")]
		public string ExistingGOP
		{
			get
			{
				return this._ExistingGOP;
			}
			set
			{
				if ((this._ExistingGOP != value))
				{
					this.OnExistingGOPChanging(value);
					this.SendPropertyChanging();
					this._ExistingGOP = value;
					this.SendPropertyChanged("ExistingGOP");
					this.OnExistingGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedGOP", DbType="NVarChar(100)")]
		public string ProposedGOP
		{
			get
			{
				return this._ProposedGOP;
			}
			set
			{
				if ((this._ProposedGOP != value))
				{
					this.OnProposedGOPChanging(value);
					this.SendPropertyChanging();
					this._ProposedGOP = value;
					this.SendPropertyChanged("ProposedGOP");
					this.OnProposedGOPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovesDealerVoice")]
	public partial class MovesDealerVoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Desk;
		
		private string _ConsoleID;
		
		private string _PortID;
		
		private string _FromSpkr;
		
		private string _SpeakerBusNum;
		
		private string _SpeakerBusType;
		
		private string _SpeakerBusPort;
		
		private string _SpeakerBusPin;
		
		private string _ToSpeaker;
		
		private string _FreeSEAT;
		
		private string _DestSpeakerBusType;
		
		private string _Handset1;
		
		private string _Handset2;
		
		private string _Headset1;
		
		private string _Headset2;
		
		private string _IcomAgent;
		
		private System.Nullable<int> _MoveRef;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    partial void OnConsoleIDChanging(string value);
    partial void OnConsoleIDChanged();
    partial void OnPortIDChanging(string value);
    partial void OnPortIDChanged();
    partial void OnFromSpkrChanging(string value);
    partial void OnFromSpkrChanged();
    partial void OnSpeakerBusNumChanging(string value);
    partial void OnSpeakerBusNumChanged();
    partial void OnSpeakerBusTypeChanging(string value);
    partial void OnSpeakerBusTypeChanged();
    partial void OnSpeakerBusPortChanging(string value);
    partial void OnSpeakerBusPortChanged();
    partial void OnSpeakerBusPinChanging(string value);
    partial void OnSpeakerBusPinChanged();
    partial void OnToSpeakerChanging(string value);
    partial void OnToSpeakerChanged();
    partial void OnFreeSEATChanging(string value);
    partial void OnFreeSEATChanged();
    partial void OnDestSpeakerBusTypeChanging(string value);
    partial void OnDestSpeakerBusTypeChanged();
    partial void OnHandset1Changing(string value);
    partial void OnHandset1Changed();
    partial void OnHandset2Changing(string value);
    partial void OnHandset2Changed();
    partial void OnHeadset1Changing(string value);
    partial void OnHeadset1Changed();
    partial void OnHeadset2Changing(string value);
    partial void OnHeadset2Changed();
    partial void OnIcomAgentChanging(string value);
    partial void OnIcomAgentChanged();
    partial void OnMoveRefChanging(System.Nullable<int> value);
    partial void OnMoveRefChanged();
    #endregion
		
		public MovesDealerVoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(100)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsoleID", DbType="VarChar(250)")]
		public string ConsoleID
		{
			get
			{
				return this._ConsoleID;
			}
			set
			{
				if ((this._ConsoleID != value))
				{
					this.OnConsoleIDChanging(value);
					this.SendPropertyChanging();
					this._ConsoleID = value;
					this.SendPropertyChanged("ConsoleID");
					this.OnConsoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortID", DbType="VarChar(250)")]
		public string PortID
		{
			get
			{
				return this._PortID;
			}
			set
			{
				if ((this._PortID != value))
				{
					this.OnPortIDChanging(value);
					this.SendPropertyChanging();
					this._PortID = value;
					this.SendPropertyChanged("PortID");
					this.OnPortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSpkr", DbType="VarChar(250)")]
		public string FromSpkr
		{
			get
			{
				return this._FromSpkr;
			}
			set
			{
				if ((this._FromSpkr != value))
				{
					this.OnFromSpkrChanging(value);
					this.SendPropertyChanging();
					this._FromSpkr = value;
					this.SendPropertyChanged("FromSpkr");
					this.OnFromSpkrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusNum", DbType="VarChar(250)")]
		public string SpeakerBusNum
		{
			get
			{
				return this._SpeakerBusNum;
			}
			set
			{
				if ((this._SpeakerBusNum != value))
				{
					this.OnSpeakerBusNumChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusNum = value;
					this.SendPropertyChanged("SpeakerBusNum");
					this.OnSpeakerBusNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusType", DbType="VarChar(250)")]
		public string SpeakerBusType
		{
			get
			{
				return this._SpeakerBusType;
			}
			set
			{
				if ((this._SpeakerBusType != value))
				{
					this.OnSpeakerBusTypeChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusType = value;
					this.SendPropertyChanged("SpeakerBusType");
					this.OnSpeakerBusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusPort", DbType="VarChar(250)")]
		public string SpeakerBusPort
		{
			get
			{
				return this._SpeakerBusPort;
			}
			set
			{
				if ((this._SpeakerBusPort != value))
				{
					this.OnSpeakerBusPortChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusPort = value;
					this.SendPropertyChanged("SpeakerBusPort");
					this.OnSpeakerBusPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeakerBusPin", DbType="VarChar(250)")]
		public string SpeakerBusPin
		{
			get
			{
				return this._SpeakerBusPin;
			}
			set
			{
				if ((this._SpeakerBusPin != value))
				{
					this.OnSpeakerBusPinChanging(value);
					this.SendPropertyChanging();
					this._SpeakerBusPin = value;
					this.SendPropertyChanged("SpeakerBusPin");
					this.OnSpeakerBusPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSpeaker", DbType="VarChar(250)")]
		public string ToSpeaker
		{
			get
			{
				return this._ToSpeaker;
			}
			set
			{
				if ((this._ToSpeaker != value))
				{
					this.OnToSpeakerChanging(value);
					this.SendPropertyChanging();
					this._ToSpeaker = value;
					this.SendPropertyChanged("ToSpeaker");
					this.OnToSpeakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeSEAT", DbType="VarChar(250)")]
		public string FreeSEAT
		{
			get
			{
				return this._FreeSEAT;
			}
			set
			{
				if ((this._FreeSEAT != value))
				{
					this.OnFreeSEATChanging(value);
					this.SendPropertyChanging();
					this._FreeSEAT = value;
					this.SendPropertyChanged("FreeSEAT");
					this.OnFreeSEATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestSpeakerBusType", DbType="VarChar(250)")]
		public string DestSpeakerBusType
		{
			get
			{
				return this._DestSpeakerBusType;
			}
			set
			{
				if ((this._DestSpeakerBusType != value))
				{
					this.OnDestSpeakerBusTypeChanging(value);
					this.SendPropertyChanging();
					this._DestSpeakerBusType = value;
					this.SendPropertyChanged("DestSpeakerBusType");
					this.OnDestSpeakerBusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handset1", DbType="VarChar(250)")]
		public string Handset1
		{
			get
			{
				return this._Handset1;
			}
			set
			{
				if ((this._Handset1 != value))
				{
					this.OnHandset1Changing(value);
					this.SendPropertyChanging();
					this._Handset1 = value;
					this.SendPropertyChanged("Handset1");
					this.OnHandset1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handset2", DbType="VarChar(250)")]
		public string Handset2
		{
			get
			{
				return this._Handset2;
			}
			set
			{
				if ((this._Handset2 != value))
				{
					this.OnHandset2Changing(value);
					this.SendPropertyChanging();
					this._Handset2 = value;
					this.SendPropertyChanged("Handset2");
					this.OnHandset2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Headset1", DbType="VarChar(250)")]
		public string Headset1
		{
			get
			{
				return this._Headset1;
			}
			set
			{
				if ((this._Headset1 != value))
				{
					this.OnHeadset1Changing(value);
					this.SendPropertyChanging();
					this._Headset1 = value;
					this.SendPropertyChanged("Headset1");
					this.OnHeadset1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Headset2", DbType="VarChar(250)")]
		public string Headset2
		{
			get
			{
				return this._Headset2;
			}
			set
			{
				if ((this._Headset2 != value))
				{
					this.OnHeadset2Changing(value);
					this.SendPropertyChanging();
					this._Headset2 = value;
					this.SendPropertyChanged("Headset2");
					this.OnHeadset2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IcomAgent", DbType="VarChar(250)")]
		public string IcomAgent
		{
			get
			{
				return this._IcomAgent;
			}
			set
			{
				if ((this._IcomAgent != value))
				{
					this.OnIcomAgentChanging(value);
					this.SendPropertyChanging();
					this._IcomAgent = value;
					this.SendPropertyChanged("IcomAgent");
					this.OnIcomAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this.OnMoveRefChanging(value);
					this.SendPropertyChanging();
					this._MoveRef = value;
					this.SendPropertyChanged("MoveRef");
					this.OnMoveRefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="JOURNAL.MoveInformation")]
	public partial class JMoveInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Surname;
		
		private string _FirstName;
		
		private string _Desk;
		
		private System.Nullable<System.DateTime> _MoveDate;
		
		private System.Nullable<int> _TicketRef;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    partial void OnMoveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMoveDateChanged();
    partial void OnTicketRefChanging(System.Nullable<int> value);
    partial void OnTicketRefChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public JMoveInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(200)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(200)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(200)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MoveDate
		{
			get
			{
				return this._MoveDate;
			}
			set
			{
				if ((this._MoveDate != value))
				{
					this.OnMoveDateChanging(value);
					this.SendPropertyChanging();
					this._MoveDate = value;
					this.SendPropertyChanged("MoveDate");
					this.OnMoveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketRef", DbType="Int")]
		public System.Nullable<int> TicketRef
		{
			get
			{
				return this._TicketRef;
			}
			set
			{
				if ((this._TicketRef != value))
				{
					this.OnTicketRefChanging(value);
					this.SendPropertyChanging();
					this._TicketRef = value;
					this.SendPropertyChanged("TicketRef");
					this.OnTicketRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

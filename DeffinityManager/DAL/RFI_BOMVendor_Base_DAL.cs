using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_BOMVendor
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 17/07/2009 16:02:46
	/// </summary>
	public class RFI_BOMVendor_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_BOMVendor Load(DataRow oRow)
		{
			BE.RFI_BOMVendor oReturn = new BE.RFI_BOMVendor();
			oReturn.ID = (long)oRow["ID"];
			oReturn.ITEMID = (int)oRow["ITEMID"];
			oReturn.VENDORID = (int)oRow["VENDORID"];
			oReturn.PRICE = (oRow["PRICE"] == DBNull.Value ? (null) : ((float?)oRow["PRICE"]));
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.RFI_BOMVendor oRFI_BOMVendor)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_INSERT", oRFI_BOMVendor.ItemParameter());
		}

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.RFI_BOMVendor Select(long id, int itemid)
		{
			DataSet dsRFI_BOMVendor = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_SELECT", new System.Data.SqlClient.SqlParameter[]{ new System.Data.SqlClient.SqlParameter("@ID", id), new System.Data.SqlClient.SqlParameter("@ITEMID", itemid) });
			BE.RFI_BOMVendor oRFI_BOMVendor = null;
			if (dsRFI_BOMVendor.Tables[0].Rows.Count > 0)
				oRFI_BOMVendor = RFI_BOMVendor_Base_DAL.Load(dsRFI_BOMVendor.Tables[0].Rows[0]);
			return oRFI_BOMVendor;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(long id, int itemid)
		{
			return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id), new System.Data.SqlClient.SqlParameter("@ITEMID", itemid) })) > 0;
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
		public static DataTable Fill()
		{
			DataSet dsRFI_BOMVendor = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_FILL");
			return dsRFI_BOMVendor.Tables[0];
		}



		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_BOMVendor oRFI_BOMVendor)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_UPDATE", oRFI_BOMVendor.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(long id, int itemid)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id), new System.Data.SqlClient.SqlParameter("@ITEMID", itemid) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.PRC_RFI_BOMVENDOR_DELETEALL");
		}
	}
}

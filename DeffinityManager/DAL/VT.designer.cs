#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Deffinity.VT.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeffinityEflair")]
	public partial class VTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLeaveRequest(Deffinity.VT.Entity.LeaveRequest instance);
    partial void UpdateLeaveRequest(Deffinity.VT.Entity.LeaveRequest instance);
    partial void DeleteLeaveRequest(Deffinity.VT.Entity.LeaveRequest instance);
    partial void InsertAbsenseType(Deffinity.VT.Entity.AbsenseType instance);
    partial void UpdateAbsenseType(Deffinity.VT.Entity.AbsenseType instance);
    partial void DeleteAbsenseType(Deffinity.VT.Entity.AbsenseType instance);
    partial void InsertApprovalStatus(Deffinity.VT.Entity.ApprovalStatus instance);
    partial void UpdateApprovalStatus(Deffinity.VT.Entity.ApprovalStatus instance);
    partial void DeleteApprovalStatus(Deffinity.VT.Entity.ApprovalStatus instance);
    partial void InsertLeaveRequestJournal(Deffinity.VT.Entity.LeaveRequestJournal instance);
    partial void UpdateLeaveRequestJournal(Deffinity.VT.Entity.LeaveRequestJournal instance);
    partial void DeleteLeaveRequestJournal(Deffinity.VT.Entity.LeaveRequestJournal instance);
    #endregion
		
		public VTDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBstring"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Deffinity.VT.Entity.LeaveRequest> LeaveRequests
		{
			get
			{
				return this.GetTable<Deffinity.VT.Entity.LeaveRequest>();
			}
		}
		
		public System.Data.Linq.Table<Deffinity.VT.Entity.AbsenseType> AbsenseTypes
		{
			get
			{
				return this.GetTable<Deffinity.VT.Entity.AbsenseType>();
			}
		}
		
		public System.Data.Linq.Table<Deffinity.VT.Entity.ApprovalStatus> ApprovalStatus
		{
			get
			{
				return this.GetTable<Deffinity.VT.Entity.ApprovalStatus>();
			}
		}
		
		public System.Data.Linq.Table<Deffinity.VT.Entity.LeaveRequestJournal> LeaveRequestJournals
		{
			get
			{
				return this.GetTable<Deffinity.VT.Entity.LeaveRequestJournal>();
			}
		}
		
		public System.Data.Linq.Table<Deffinity.VT.Entity.History> Histories
		{
			get
			{
				return this.GetTable<Deffinity.VT.Entity.History>();
			}
		}
	}
}
namespace Deffinity.VT.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VT.LeaveRequest")]
	public partial class LeaveRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _AbsenseType;
		
		private System.DateTime _FromDate;
		
		private System.Nullable<double> _FromDatePeriod;
		
		private System.DateTime _ToDate;
		
		private System.Nullable<double> _ToDatePeriod;
		
		private System.Nullable<int> _ApprovalStatus;
		
		private System.Nullable<double> _Days;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _DateRequested;
		
		private string _RequestNotes;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<int> _TeamType;
		
		private System.Nullable<int> _Site;
		
		private System.Nullable<int> _MemberUserID;
		
		private string _ApproverNotes;
		
		private System.Nullable<int> _FromMeridian;
		
		private System.Nullable<int> _ToMeridian;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAbsenseTypeChanging(System.Nullable<int> value);
    partial void OnAbsenseTypeChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnFromDatePeriodChanging(System.Nullable<double> value);
    partial void OnFromDatePeriodChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    partial void OnToDatePeriodChanging(System.Nullable<double> value);
    partial void OnToDatePeriodChanged();
    partial void OnApprovalStatusChanging(System.Nullable<int> value);
    partial void OnApprovalStatusChanged();
    partial void OnDaysChanging(System.Nullable<double> value);
    partial void OnDaysChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnDateRequestedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRequestedChanged();
    partial void OnRequestNotesChanging(string value);
    partial void OnRequestNotesChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnTeamTypeChanging(System.Nullable<int> value);
    partial void OnTeamTypeChanged();
    partial void OnSiteChanging(System.Nullable<int> value);
    partial void OnSiteChanged();
    partial void OnMemberUserIDChanging(System.Nullable<int> value);
    partial void OnMemberUserIDChanged();
    partial void OnApproverNotesChanging(string value);
    partial void OnApproverNotesChanged();
    partial void OnFromMeridianChanging(System.Nullable<int> value);
    partial void OnFromMeridianChanged();
    partial void OnToMeridianChanging(System.Nullable<int> value);
    partial void OnToMeridianChanged();
    #endregion
		
		public LeaveRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsenseType", DbType="Int")]
		public System.Nullable<int> AbsenseType
		{
			get
			{
				return this._AbsenseType;
			}
			set
			{
				if ((this._AbsenseType != value))
				{
					this.OnAbsenseTypeChanging(value);
					this.SendPropertyChanging();
					this._AbsenseType = value;
					this.SendPropertyChanged("AbsenseType");
					this.OnAbsenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDatePeriod", DbType="Float")]
		public System.Nullable<double> FromDatePeriod
		{
			get
			{
				return this._FromDatePeriod;
			}
			set
			{
				if ((this._FromDatePeriod != value))
				{
					this.OnFromDatePeriodChanging(value);
					this.SendPropertyChanging();
					this._FromDatePeriod = value;
					this.SendPropertyChanged("FromDatePeriod");
					this.OnFromDatePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDatePeriod", DbType="Float")]
		public System.Nullable<double> ToDatePeriod
		{
			get
			{
				return this._ToDatePeriod;
			}
			set
			{
				if ((this._ToDatePeriod != value))
				{
					this.OnToDatePeriodChanging(value);
					this.SendPropertyChanging();
					this._ToDatePeriod = value;
					this.SendPropertyChanged("ToDatePeriod");
					this.OnToDatePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalStatus", DbType="Int")]
		public System.Nullable<int> ApprovalStatus
		{
			get
			{
				return this._ApprovalStatus;
			}
			set
			{
				if ((this._ApprovalStatus != value))
				{
					this.OnApprovalStatusChanging(value);
					this.SendPropertyChanging();
					this._ApprovalStatus = value;
					this.SendPropertyChanged("ApprovalStatus");
					this.OnApprovalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Float")]
		public System.Nullable<double> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRequested", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateRequested
		{
			get
			{
				return this._DateRequested;
			}
			set
			{
				if ((this._DateRequested != value))
				{
					this.OnDateRequestedChanging(value);
					this.SendPropertyChanging();
					this._DateRequested = value;
					this.SendPropertyChanged("DateRequested");
					this.OnDateRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNotes", DbType="VarChar(MAX)")]
		public string RequestNotes
		{
			get
			{
				return this._RequestNotes;
			}
			set
			{
				if ((this._RequestNotes != value))
				{
					this.OnRequestNotesChanging(value);
					this.SendPropertyChanging();
					this._RequestNotes = value;
					this.SendPropertyChanged("RequestNotes");
					this.OnRequestNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamType", DbType="Int")]
		public System.Nullable<int> TeamType
		{
			get
			{
				return this._TeamType;
			}
			set
			{
				if ((this._TeamType != value))
				{
					this.OnTeamTypeChanging(value);
					this.SendPropertyChanging();
					this._TeamType = value;
					this.SendPropertyChanged("TeamType");
					this.OnTeamTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="Int")]
		public System.Nullable<int> Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberUserID", DbType="Int")]
		public System.Nullable<int> MemberUserID
		{
			get
			{
				return this._MemberUserID;
			}
			set
			{
				if ((this._MemberUserID != value))
				{
					this.OnMemberUserIDChanging(value);
					this.SendPropertyChanging();
					this._MemberUserID = value;
					this.SendPropertyChanged("MemberUserID");
					this.OnMemberUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverNotes", DbType="NVarChar(200)")]
		public string ApproverNotes
		{
			get
			{
				return this._ApproverNotes;
			}
			set
			{
				if ((this._ApproverNotes != value))
				{
					this.OnApproverNotesChanging(value);
					this.SendPropertyChanging();
					this._ApproverNotes = value;
					this.SendPropertyChanged("ApproverNotes");
					this.OnApproverNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMeridian", DbType="Int")]
		public System.Nullable<int> FromMeridian
		{
			get
			{
				return this._FromMeridian;
			}
			set
			{
				if ((this._FromMeridian != value))
				{
					this.OnFromMeridianChanging(value);
					this.SendPropertyChanging();
					this._FromMeridian = value;
					this.SendPropertyChanged("FromMeridian");
					this.OnFromMeridianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMeridian", DbType="Int")]
		public System.Nullable<int> ToMeridian
		{
			get
			{
				return this._ToMeridian;
			}
			set
			{
				if ((this._ToMeridian != value))
				{
					this.OnToMeridianChanging(value);
					this.SendPropertyChanging();
					this._ToMeridian = value;
					this.SendPropertyChanged("ToMeridian");
					this.OnToMeridianChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VT.AbsenseType")]
	public partial class AbsenseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private string _Color;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public AbsenseType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(30)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(100)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VT.ApprovalStatus")]
	public partial class ApprovalStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ApprovalStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="VT.LeaveRequestJournal")]
	public partial class LeaveRequestJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _AbsenseType;
		
		private System.DateTime _FromDate;
		
		private System.Nullable<double> _FromDatePeriod;
		
		private System.DateTime _ToDate;
		
		private System.Nullable<double> _ToDatePeriod;
		
		private System.Nullable<int> _ApprovalStatus;
		
		private System.Nullable<double> _Days;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _DateRequested;
		
		private string _RequestNotes;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<int> _TeamType;
		
		private System.Nullable<int> _Site;
		
		private System.Nullable<int> _MemberUserID;
		
		private string _ApproverNotes;
		
		private System.Nullable<int> _FromMeridian;
		
		private System.Nullable<int> _ToMeridian;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _RequestID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAbsenseTypeChanging(System.Nullable<int> value);
    partial void OnAbsenseTypeChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnFromDatePeriodChanging(System.Nullable<double> value);
    partial void OnFromDatePeriodChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    partial void OnToDatePeriodChanging(System.Nullable<double> value);
    partial void OnToDatePeriodChanged();
    partial void OnApprovalStatusChanging(System.Nullable<int> value);
    partial void OnApprovalStatusChanged();
    partial void OnDaysChanging(System.Nullable<double> value);
    partial void OnDaysChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnDateRequestedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRequestedChanged();
    partial void OnRequestNotesChanging(string value);
    partial void OnRequestNotesChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnTeamTypeChanging(System.Nullable<int> value);
    partial void OnTeamTypeChanged();
    partial void OnSiteChanging(System.Nullable<int> value);
    partial void OnSiteChanged();
    partial void OnMemberUserIDChanging(System.Nullable<int> value);
    partial void OnMemberUserIDChanged();
    partial void OnApproverNotesChanging(string value);
    partial void OnApproverNotesChanged();
    partial void OnFromMeridianChanging(System.Nullable<int> value);
    partial void OnFromMeridianChanged();
    partial void OnToMeridianChanging(System.Nullable<int> value);
    partial void OnToMeridianChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnRequestIDChanging(System.Nullable<int> value);
    partial void OnRequestIDChanged();
    #endregion
		
		public LeaveRequestJournal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsenseType", DbType="Int")]
		public System.Nullable<int> AbsenseType
		{
			get
			{
				return this._AbsenseType;
			}
			set
			{
				if ((this._AbsenseType != value))
				{
					this.OnAbsenseTypeChanging(value);
					this.SendPropertyChanging();
					this._AbsenseType = value;
					this.SendPropertyChanged("AbsenseType");
					this.OnAbsenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDatePeriod", DbType="Float")]
		public System.Nullable<double> FromDatePeriod
		{
			get
			{
				return this._FromDatePeriod;
			}
			set
			{
				if ((this._FromDatePeriod != value))
				{
					this.OnFromDatePeriodChanging(value);
					this.SendPropertyChanging();
					this._FromDatePeriod = value;
					this.SendPropertyChanged("FromDatePeriod");
					this.OnFromDatePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDatePeriod", DbType="Float")]
		public System.Nullable<double> ToDatePeriod
		{
			get
			{
				return this._ToDatePeriod;
			}
			set
			{
				if ((this._ToDatePeriod != value))
				{
					this.OnToDatePeriodChanging(value);
					this.SendPropertyChanging();
					this._ToDatePeriod = value;
					this.SendPropertyChanged("ToDatePeriod");
					this.OnToDatePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalStatus", DbType="Int")]
		public System.Nullable<int> ApprovalStatus
		{
			get
			{
				return this._ApprovalStatus;
			}
			set
			{
				if ((this._ApprovalStatus != value))
				{
					this.OnApprovalStatusChanging(value);
					this.SendPropertyChanging();
					this._ApprovalStatus = value;
					this.SendPropertyChanged("ApprovalStatus");
					this.OnApprovalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Float")]
		public System.Nullable<double> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRequested", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateRequested
		{
			get
			{
				return this._DateRequested;
			}
			set
			{
				if ((this._DateRequested != value))
				{
					this.OnDateRequestedChanging(value);
					this.SendPropertyChanging();
					this._DateRequested = value;
					this.SendPropertyChanged("DateRequested");
					this.OnDateRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNotes", DbType="VarChar(MAX)")]
		public string RequestNotes
		{
			get
			{
				return this._RequestNotes;
			}
			set
			{
				if ((this._RequestNotes != value))
				{
					this.OnRequestNotesChanging(value);
					this.SendPropertyChanging();
					this._RequestNotes = value;
					this.SendPropertyChanged("RequestNotes");
					this.OnRequestNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamType", DbType="Int")]
		public System.Nullable<int> TeamType
		{
			get
			{
				return this._TeamType;
			}
			set
			{
				if ((this._TeamType != value))
				{
					this.OnTeamTypeChanging(value);
					this.SendPropertyChanging();
					this._TeamType = value;
					this.SendPropertyChanged("TeamType");
					this.OnTeamTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="Int")]
		public System.Nullable<int> Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberUserID", DbType="Int")]
		public System.Nullable<int> MemberUserID
		{
			get
			{
				return this._MemberUserID;
			}
			set
			{
				if ((this._MemberUserID != value))
				{
					this.OnMemberUserIDChanging(value);
					this.SendPropertyChanging();
					this._MemberUserID = value;
					this.SendPropertyChanged("MemberUserID");
					this.OnMemberUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverNotes", DbType="NVarChar(200)")]
		public string ApproverNotes
		{
			get
			{
				return this._ApproverNotes;
			}
			set
			{
				if ((this._ApproverNotes != value))
				{
					this.OnApproverNotesChanging(value);
					this.SendPropertyChanging();
					this._ApproverNotes = value;
					this.SendPropertyChanged("ApproverNotes");
					this.OnApproverNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMeridian", DbType="Int")]
		public System.Nullable<int> FromMeridian
		{
			get
			{
				return this._FromMeridian;
			}
			set
			{
				if ((this._FromMeridian != value))
				{
					this.OnFromMeridianChanging(value);
					this.SendPropertyChanging();
					this._FromMeridian = value;
					this.SendPropertyChanged("FromMeridian");
					this.OnFromMeridianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMeridian", DbType="Int")]
		public System.Nullable<int> ToMeridian
		{
			get
			{
				return this._ToMeridian;
			}
			set
			{
				if ((this._ToMeridian != value))
				{
					this.OnToMeridianChanging(value);
					this.SendPropertyChanging();
					this._ToMeridian = value;
					this.SendPropertyChanged("ToMeridian");
					this.OnToMeridianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int")]
		public System.Nullable<int> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class History
	{
		
		private string _FieldName;
		
		private string _FieldValue;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		public History()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarchar(50)")]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="Nvarchar(100)")]
		public string FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this._FieldValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Nvarchar(100)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

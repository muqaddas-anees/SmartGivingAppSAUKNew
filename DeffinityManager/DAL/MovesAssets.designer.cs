#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovesAssets.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeffinityEflair")]
	public partial class MovesAssetsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssetMove(MovesAssets.Entity.AssetMove instance);
    partial void UpdateAssetMove(MovesAssets.Entity.AssetMove instance);
    partial void DeleteAssetMove(MovesAssets.Entity.AssetMove instance);
    partial void InsertCustomerEquipment(MovesAssets.Entity.CustomerEquipment instance);
    partial void UpdateCustomerEquipment(MovesAssets.Entity.CustomerEquipment instance);
    partial void DeleteCustomerEquipment(MovesAssets.Entity.CustomerEquipment instance);
    partial void InsertDeffinityRequestDCEquipment(MovesAssets.Entity.DeffinityRequestDCEquipment instance);
    partial void UpdateDeffinityRequestDCEquipment(MovesAssets.Entity.DeffinityRequestDCEquipment instance);
    partial void DeleteDeffinityRequestDCEquipment(MovesAssets.Entity.DeffinityRequestDCEquipment instance);
    partial void InsertAssetEquipmentType(MovesAssets.Entity.AssetEquipmentType instance);
    partial void UpdateAssetEquipmentType(MovesAssets.Entity.AssetEquipmentType instance);
    partial void DeleteAssetEquipmentType(MovesAssets.Entity.AssetEquipmentType instance);
    partial void InsertMoveAsset(MovesAssets.Entity.MoveAsset instance);
    partial void UpdateMoveAsset(MovesAssets.Entity.MoveAsset instance);
    partial void DeleteMoveAsset(MovesAssets.Entity.MoveAsset instance);
    partial void InsertMoveAssets_Document(MovesAssets.Entity.MoveAssets_Document instance);
    partial void UpdateMoveAssets_Document(MovesAssets.Entity.MoveAssets_Document instance);
    partial void DeleteMoveAssets_Document(MovesAssets.Entity.MoveAssets_Document instance);
    partial void InsertMovesDeskImage(MovesAssets.Entity.MovesDeskImage instance);
    partial void UpdateMovesDeskImage(MovesAssets.Entity.MovesDeskImage instance);
    partial void DeleteMovesDeskImage(MovesAssets.Entity.MovesDeskImage instance);
    partial void InsertMoves_DeskNote(MovesAssets.Entity.Moves_DeskNote instance);
    partial void UpdateMoves_DeskNote(MovesAssets.Entity.Moves_DeskNote instance);
    partial void DeleteMoves_DeskNote(MovesAssets.Entity.Moves_DeskNote instance);
    partial void InsertMoves_DeskStatus(MovesAssets.Entity.Moves_DeskStatus instance);
    partial void UpdateMoves_DeskStatus(MovesAssets.Entity.Moves_DeskStatus instance);
    partial void DeleteMoves_DeskStatus(MovesAssets.Entity.Moves_DeskStatus instance);
    #endregion
		
		public MovesAssetsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBstring"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MovesAssetsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovesAssetsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovesAssetsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovesAssetsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.AssetMove> AssetMoves
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.AssetMove>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.v_AssetMove> v_AssetMoves
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.v_AssetMove>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.CustomerEquipment> CustomerEquipments
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.CustomerEquipment>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.DeffinityRequestDCEquipment> DeffinityRequestDCEquipments
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.DeffinityRequestDCEquipment>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.AssetEquipmentType> AssetEquipmentTypes
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.AssetEquipmentType>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.v_MoveAsset> v_MoveAssets
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.v_MoveAsset>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.MoveAsset> MoveAssets
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.MoveAsset>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.MoveAssets_Document> MoveAssets_Documents
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.MoveAssets_Document>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.MovesDeskImage> MovesDeskImages
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.MovesDeskImage>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.Moves_DeskNote> Moves_DeskNotes
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.Moves_DeskNote>();
			}
		}
		
		public System.Data.Linq.Table<MovesAssets.Entity.Moves_DeskStatus> Moves_DeskStatus
		{
			get
			{
				return this.GetTable<MovesAssets.Entity.Moves_DeskStatus>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Assets_Make")]
		public ISingleResult<MovesAssets.Entity.Assets_MakeResult> Assets_Make()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MovesAssets.Entity.Assets_MakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Assets_Model")]
		public ISingleResult<MovesAssets.Entity.Assets_ModelResult> Assets_Model()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MovesAssets.Entity.Assets_ModelResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MoveAssets_Contractors")]
		public ISingleResult<MovesAssets.Entity.MoveAssets_ContractorsResult> MoveAssets_Contractors()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MovesAssets.Entity.MoveAssets_ContractorsResult>)(result.ReturnValue));
		}
	}
}
namespace MovesAssets.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetMove")]
	public partial class AssetMove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MoveRef;
		
		private string _Surname;
		
		private string _FirstName;
		
		private string _FromMove;
		
		private string _ToMove;
		
		private string _ExistingGOP;
		
		private string _ProposedGOP;
		
		private string _Extension;
		
		private System.Nullable<int> _NumberofItems;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _Movedate;
		
		private System.Nullable<int> _IncidentID;
		
		private string _chkstatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMoveRefChanging(System.Nullable<int> value);
    partial void OnMoveRefChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnFromMoveChanging(string value);
    partial void OnFromMoveChanged();
    partial void OnToMoveChanging(string value);
    partial void OnToMoveChanged();
    partial void OnExistingGOPChanging(string value);
    partial void OnExistingGOPChanged();
    partial void OnProposedGOPChanging(string value);
    partial void OnProposedGOPChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnNumberofItemsChanging(System.Nullable<int> value);
    partial void OnNumberofItemsChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnMovedateChanging(System.Nullable<System.DateTime> value);
    partial void OnMovedateChanged();
    partial void OnIncidentIDChanging(System.Nullable<int> value);
    partial void OnIncidentIDChanged();
    partial void OnchkstatusChanging(string value);
    partial void OnchkstatusChanged();
    #endregion
		
		public AssetMove()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this.OnMoveRefChanging(value);
					this.SendPropertyChanging();
					this._MoveRef = value;
					this.SendPropertyChanged("MoveRef");
					this.OnMoveRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMove", DbType="VarChar(50)")]
		public string FromMove
		{
			get
			{
				return this._FromMove;
			}
			set
			{
				if ((this._FromMove != value))
				{
					this.OnFromMoveChanging(value);
					this.SendPropertyChanging();
					this._FromMove = value;
					this.SendPropertyChanged("FromMove");
					this.OnFromMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMove", DbType="VarChar(50)")]
		public string ToMove
		{
			get
			{
				return this._ToMove;
			}
			set
			{
				if ((this._ToMove != value))
				{
					this.OnToMoveChanging(value);
					this.SendPropertyChanging();
					this._ToMove = value;
					this.SendPropertyChanged("ToMove");
					this.OnToMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingGOP", DbType="VarChar(50)")]
		public string ExistingGOP
		{
			get
			{
				return this._ExistingGOP;
			}
			set
			{
				if ((this._ExistingGOP != value))
				{
					this.OnExistingGOPChanging(value);
					this.SendPropertyChanging();
					this._ExistingGOP = value;
					this.SendPropertyChanged("ExistingGOP");
					this.OnExistingGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedGOP", DbType="VarChar(50)")]
		public string ProposedGOP
		{
			get
			{
				return this._ProposedGOP;
			}
			set
			{
				if ((this._ProposedGOP != value))
				{
					this.OnProposedGOPChanging(value);
					this.SendPropertyChanging();
					this._ProposedGOP = value;
					this.SendPropertyChanged("ProposedGOP");
					this.OnProposedGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(50)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofItems", DbType="Int")]
		public System.Nullable<int> NumberofItems
		{
			get
			{
				return this._NumberofItems;
			}
			set
			{
				if ((this._NumberofItems != value))
				{
					this.OnNumberofItemsChanging(value);
					this.SendPropertyChanging();
					this._NumberofItems = value;
					this.SendPropertyChanged("NumberofItems");
					this.OnNumberofItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Movedate
		{
			get
			{
				return this._Movedate;
			}
			set
			{
				if ((this._Movedate != value))
				{
					this.OnMovedateChanging(value);
					this.SendPropertyChanging();
					this._Movedate = value;
					this.SendPropertyChanged("Movedate");
					this.OnMovedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentID", DbType="Int")]
		public System.Nullable<int> IncidentID
		{
			get
			{
				return this._IncidentID;
			}
			set
			{
				if ((this._IncidentID != value))
				{
					this.OnIncidentIDChanging(value);
					this.SendPropertyChanging();
					this._IncidentID = value;
					this.SendPropertyChanged("IncidentID");
					this.OnIncidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chkstatus", DbType="VarChar(100)")]
		public string chkstatus
		{
			get
			{
				return this._chkstatus;
			}
			set
			{
				if ((this._chkstatus != value))
				{
					this.OnchkstatusChanging(value);
					this.SendPropertyChanging();
					this._chkstatus = value;
					this.SendPropertyChanged("chkstatus");
					this.OnchkstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_AssetMove")]
	public partial class v_AssetMove
	{
		
		private int _ID;
		
		private int _MoveRef;
		
		private string _Surname;
		
		private string _FirstName;
		
		private string _FromMove;
		
		private string _ToMove;
		
		private string _ExistingGOP;
		
		private string _ProposedGOP;
		
		private string _Extension;
		
		private string _Comments;
		
		private System.Nullable<int> _NumberofItems;
		
		private System.Nullable<int> _IncidentID;
		
		private string _chkstatus;
		
		public v_AssetMove()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int NOT NULL")]
		public int MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this._MoveRef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMove", DbType="VarChar(50)")]
		public string FromMove
		{
			get
			{
				return this._FromMove;
			}
			set
			{
				if ((this._FromMove != value))
				{
					this._FromMove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToMove", DbType="VarChar(50)")]
		public string ToMove
		{
			get
			{
				return this._ToMove;
			}
			set
			{
				if ((this._ToMove != value))
				{
					this._ToMove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingGOP", DbType="VarChar(50)")]
		public string ExistingGOP
		{
			get
			{
				return this._ExistingGOP;
			}
			set
			{
				if ((this._ExistingGOP != value))
				{
					this._ExistingGOP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedGOP", DbType="VarChar(50)")]
		public string ProposedGOP
		{
			get
			{
				return this._ProposedGOP;
			}
			set
			{
				if ((this._ProposedGOP != value))
				{
					this._ProposedGOP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(50)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofItems", DbType="Int")]
		public System.Nullable<int> NumberofItems
		{
			get
			{
				return this._NumberofItems;
			}
			set
			{
				if ((this._NumberofItems != value))
				{
					this._NumberofItems = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentID", DbType="Int")]
		public System.Nullable<int> IncidentID
		{
			get
			{
				return this._IncidentID;
			}
			set
			{
				if ((this._IncidentID != value))
				{
					this._IncidentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chkstatus", DbType="VarChar(100)")]
		public string chkstatus
		{
			get
			{
				return this._chkstatus;
			}
			set
			{
				if ((this._chkstatus != value))
				{
					this._chkstatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerEquipment")]
	public partial class CustomerEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _EquipmentID;
		
		private System.Nullable<System.DateTime> _DateAllocated;
		
		private string _LoggedbyUser;
		
		private string _EquipmentName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnEquipmentIDChanging(System.Nullable<int> value);
    partial void OnEquipmentIDChanged();
    partial void OnDateAllocatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAllocatedChanged();
    partial void OnLoggedbyUserChanging(string value);
    partial void OnLoggedbyUserChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    #endregion
		
		public CustomerEquipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID", DbType="Int")]
		public System.Nullable<int> EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					this.OnEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._EquipmentID = value;
					this.SendPropertyChanged("EquipmentID");
					this.OnEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAllocated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAllocated
		{
			get
			{
				return this._DateAllocated;
			}
			set
			{
				if ((this._DateAllocated != value))
				{
					this.OnDateAllocatedChanging(value);
					this.SendPropertyChanging();
					this._DateAllocated = value;
					this.SendPropertyChanged("DateAllocated");
					this.OnDateAllocatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedbyUser", DbType="VarChar(50)")]
		public string LoggedbyUser
		{
			get
			{
				return this._LoggedbyUser;
			}
			set
			{
				if ((this._LoggedbyUser != value))
				{
					this.OnLoggedbyUserChanging(value);
					this.SendPropertyChanging();
					this._LoggedbyUser = value;
					this.SendPropertyChanged("LoggedbyUser");
					this.OnLoggedbyUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="VarChar(300)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeffinityRequestDCEquipment")]
	public partial class DeffinityRequestDCEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RequestID;
		
		private System.Nullable<int> _RequestNumber;
		
		private string _Type;
		
		private System.Nullable<int> _EquipmentID;
		
		private System.Nullable<System.DateTime> _DateLogged;
		
		private string _LoggedBy;
		
		private string _EquipmentName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Nullable<int> value);
    partial void OnRequestIDChanged();
    partial void OnRequestNumberChanging(System.Nullable<int> value);
    partial void OnRequestNumberChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnEquipmentIDChanging(System.Nullable<int> value);
    partial void OnEquipmentIDChanged();
    partial void OnDateLoggedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoggedChanged();
    partial void OnLoggedByChanging(string value);
    partial void OnLoggedByChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    #endregion
		
		public DeffinityRequestDCEquipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int")]
		public System.Nullable<int> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumber", DbType="Int")]
		public System.Nullable<int> RequestNumber
		{
			get
			{
				return this._RequestNumber;
			}
			set
			{
				if ((this._RequestNumber != value))
				{
					this.OnRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._RequestNumber = value;
					this.SendPropertyChanged("RequestNumber");
					this.OnRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID", DbType="Int")]
		public System.Nullable<int> EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					this.OnEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._EquipmentID = value;
					this.SendPropertyChanged("EquipmentID");
					this.OnEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLogged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLogged
		{
			get
			{
				return this._DateLogged;
			}
			set
			{
				if ((this._DateLogged != value))
				{
					this.OnDateLoggedChanging(value);
					this.SendPropertyChanging();
					this._DateLogged = value;
					this.SendPropertyChanged("DateLogged");
					this.OnDateLoggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedBy", DbType="VarChar(50)")]
		public string LoggedBy
		{
			get
			{
				return this._LoggedBy;
			}
			set
			{
				if ((this._LoggedBy != value))
				{
					this.OnLoggedByChanging(value);
					this.SendPropertyChanging();
					this._LoggedBy = value;
					this.SendPropertyChanged("LoggedBy");
					this.OnLoggedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="VarChar(250)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetEquipmentType")]
	public partial class AssetEquipmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EquipmentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEquipmentTypeChanging(string value);
    partial void OnEquipmentTypeChanged();
    #endregion
		
		public AssetEquipmentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_MoveAssets")]
	public partial class v_MoveAsset
	{
		
		private int _ID;
		
		private int _MoveRef;
		
		private System.Nullable<int> _EquipmentType;
		
		private string _EquipmentName;
		
		private string _Assetnumber;
		
		private System.Nullable<int> _Make;
		
		private string _MakeName;
		
		private System.Nullable<int> _Model;
		
		private string _ModelName;
		
		private string _FromGop;
		
		private string _FromPort;
		
		private string _ToGOP;
		
		private string _ToPort;
		
		private string _Notes;
		
		private System.Nullable<int> _UserID;
		
		private string _Status;
		
		private System.Nullable<int> _Incident;
		
		private string _OldLink;
		
		private string _NewLink;
		
		private string _HostName;
		
		private string _Desk;
		
		public v_MoveAsset()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int NOT NULL")]
		public int MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this._MoveRef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="Int")]
		public System.Nullable<int> EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this._EquipmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="NVarChar(30)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this._EquipmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assetnumber", DbType="VarChar(50)")]
		public string Assetnumber
		{
			get
			{
				return this._Assetnumber;
			}
			set
			{
				if ((this._Assetnumber != value))
				{
					this._Assetnumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="Int")]
		public System.Nullable<int> Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeName", DbType="NVarChar(50)")]
		public string MakeName
		{
			get
			{
				return this._MakeName;
			}
			set
			{
				if ((this._MakeName != value))
				{
					this._MakeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
		public System.Nullable<int> Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(50)")]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromGop", DbType="VarChar(50)")]
		public string FromGop
		{
			get
			{
				return this._FromGop;
			}
			set
			{
				if ((this._FromGop != value))
				{
					this._FromGop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPort", DbType="VarChar(50)")]
		public string FromPort
		{
			get
			{
				return this._FromPort;
			}
			set
			{
				if ((this._FromPort != value))
				{
					this._FromPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToGOP", DbType="VarChar(50)")]
		public string ToGOP
		{
			get
			{
				return this._ToGOP;
			}
			set
			{
				if ((this._ToGOP != value))
				{
					this._ToGOP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPort", DbType="VarChar(50)")]
		public string ToPort
		{
			get
			{
				return this._ToPort;
			}
			set
			{
				if ((this._ToPort != value))
				{
					this._ToPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incident", DbType="Int")]
		public System.Nullable<int> Incident
		{
			get
			{
				return this._Incident;
			}
			set
			{
				if ((this._Incident != value))
				{
					this._Incident = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldLink", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OldLink
		{
			get
			{
				return this._OldLink;
			}
			set
			{
				if ((this._OldLink != value))
				{
					this._OldLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewLink", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NewLink
		{
			get
			{
				return this._NewLink;
			}
			set
			{
				if ((this._NewLink != value))
				{
					this._NewLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this._HostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this._Desk = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoveAssets")]
	public partial class MoveAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _EquipmentType;
		
		private string _Assetnumber;
		
		private System.Nullable<int> _Make;
		
		private System.Nullable<int> _Model;
		
		private string _FromGop;
		
		private string _FromPort;
		
		private string _ToGOP;
		
		private string _ToPort;
		
		private string _Notes;
		
		private System.Nullable<int> _MoveRef;
		
		private System.Nullable<int> _UserID;
		
		private string _Status;
		
		private System.Nullable<int> _Incident;
		
		private string _OldLink;
		
		private string _NewLink;
		
		private string _HostName;
		
		private string _Desk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEquipmentTypeChanging(System.Nullable<int> value);
    partial void OnEquipmentTypeChanged();
    partial void OnAssetnumberChanging(string value);
    partial void OnAssetnumberChanged();
    partial void OnMakeChanging(System.Nullable<int> value);
    partial void OnMakeChanged();
    partial void OnModelChanging(System.Nullable<int> value);
    partial void OnModelChanged();
    partial void OnFromGopChanging(string value);
    partial void OnFromGopChanged();
    partial void OnFromPortChanging(string value);
    partial void OnFromPortChanged();
    partial void OnToGOPChanging(string value);
    partial void OnToGOPChanged();
    partial void OnToPortChanging(string value);
    partial void OnToPortChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnMoveRefChanging(System.Nullable<int> value);
    partial void OnMoveRefChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIncidentChanging(System.Nullable<int> value);
    partial void OnIncidentChanged();
    partial void OnOldLinkChanging(string value);
    partial void OnOldLinkChanged();
    partial void OnNewLinkChanging(string value);
    partial void OnNewLinkChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    #endregion
		
		public MoveAsset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="Int")]
		public System.Nullable<int> EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assetnumber", DbType="VarChar(50)")]
		public string Assetnumber
		{
			get
			{
				return this._Assetnumber;
			}
			set
			{
				if ((this._Assetnumber != value))
				{
					this.OnAssetnumberChanging(value);
					this.SendPropertyChanging();
					this._Assetnumber = value;
					this.SendPropertyChanged("Assetnumber");
					this.OnAssetnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="Int")]
		public System.Nullable<int> Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
		public System.Nullable<int> Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromGop", DbType="VarChar(50)")]
		public string FromGop
		{
			get
			{
				return this._FromGop;
			}
			set
			{
				if ((this._FromGop != value))
				{
					this.OnFromGopChanging(value);
					this.SendPropertyChanging();
					this._FromGop = value;
					this.SendPropertyChanged("FromGop");
					this.OnFromGopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPort", DbType="VarChar(50)")]
		public string FromPort
		{
			get
			{
				return this._FromPort;
			}
			set
			{
				if ((this._FromPort != value))
				{
					this.OnFromPortChanging(value);
					this.SendPropertyChanging();
					this._FromPort = value;
					this.SendPropertyChanged("FromPort");
					this.OnFromPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToGOP", DbType="VarChar(50)")]
		public string ToGOP
		{
			get
			{
				return this._ToGOP;
			}
			set
			{
				if ((this._ToGOP != value))
				{
					this.OnToGOPChanging(value);
					this.SendPropertyChanging();
					this._ToGOP = value;
					this.SendPropertyChanged("ToGOP");
					this.OnToGOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPort", DbType="VarChar(50)")]
		public string ToPort
		{
			get
			{
				return this._ToPort;
			}
			set
			{
				if ((this._ToPort != value))
				{
					this.OnToPortChanging(value);
					this.SendPropertyChanging();
					this._ToPort = value;
					this.SendPropertyChanged("ToPort");
					this.OnToPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this.OnMoveRefChanging(value);
					this.SendPropertyChanging();
					this._MoveRef = value;
					this.SendPropertyChanged("MoveRef");
					this.OnMoveRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incident", DbType="Int")]
		public System.Nullable<int> Incident
		{
			get
			{
				return this._Incident;
			}
			set
			{
				if ((this._Incident != value))
				{
					this.OnIncidentChanging(value);
					this.SendPropertyChanging();
					this._Incident = value;
					this.SendPropertyChanged("Incident");
					this.OnIncidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldLink", DbType="VarChar(50)")]
		public string OldLink
		{
			get
			{
				return this._OldLink;
			}
			set
			{
				if ((this._OldLink != value))
				{
					this.OnOldLinkChanging(value);
					this.SendPropertyChanging();
					this._OldLink = value;
					this.SendPropertyChanged("OldLink");
					this.OnOldLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewLink", DbType="VarChar(50)")]
		public string NewLink
		{
			get
			{
				return this._NewLink;
			}
			set
			{
				if ((this._NewLink != value))
				{
					this.OnNewLinkChanging(value);
					this.SendPropertyChanging();
					this._NewLink = value;
					this.SendPropertyChanged("NewLink");
					this.OnNewLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(50)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(50)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoveAssets_Document")]
	public partial class MoveAssets_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MoveID;
		
		private string _FileName;
		
		private string _Desk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMoveIDChanging(System.Nullable<int> value);
    partial void OnMoveIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    #endregion
		
		public MoveAssets_Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveID", DbType="Int")]
		public System.Nullable<int> MoveID
		{
			get
			{
				return this._MoveID;
			}
			set
			{
				if ((this._MoveID != value))
				{
					this.OnMoveIDChanging(value);
					this.SendPropertyChanging();
					this._MoveID = value;
					this.SendPropertyChanged("MoveID");
					this.OnMoveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(100)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovesDeskImage")]
	public partial class MovesDeskImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MoveID;
		
		private string _FileName;
		
		private string _Desk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMoveIDChanging(System.Nullable<int> value);
    partial void OnMoveIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    #endregion
		
		public MovesDeskImage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveID", DbType="Int")]
		public System.Nullable<int> MoveID
		{
			get
			{
				return this._MoveID;
			}
			set
			{
				if ((this._MoveID != value))
				{
					this.OnMoveIDChanging(value);
					this.SendPropertyChanging();
					this._MoveID = value;
					this.SendPropertyChanged("MoveID");
					this.OnMoveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(100)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Moves_DeskNotes")]
	public partial class Moves_DeskNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Desk;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Moves_DeskNote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(100)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Moves_DeskStatus")]
	public partial class Moves_DeskStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Desk;
		
		private string _CheckStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeskChanging(string value);
    partial void OnDeskChanged();
    partial void OnCheckStatusChanging(string value);
    partial void OnCheckStatusChanged();
    #endregion
		
		public Moves_DeskStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desk", DbType="NVarChar(100)")]
		public string Desk
		{
			get
			{
				return this._Desk;
			}
			set
			{
				if ((this._Desk != value))
				{
					this.OnDeskChanging(value);
					this.SendPropertyChanging();
					this._Desk = value;
					this.SendPropertyChanged("Desk");
					this.OnDeskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckStatus", DbType="NVarChar(100)")]
		public string CheckStatus
		{
			get
			{
				return this._CheckStatus;
			}
			set
			{
				if ((this._CheckStatus != value))
				{
					this.OnCheckStatusChanging(value);
					this.SendPropertyChanging();
					this._CheckStatus = value;
					this.SendPropertyChanged("CheckStatus");
					this.OnCheckStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Assets_MakeResult
	{
		
		private int _MakeID;
		
		private string _Make;
		
		public Assets_MakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeID", DbType="Int NOT NULL")]
		public int MakeID
		{
			get
			{
				return this._MakeID;
			}
			set
			{
				if ((this._MakeID != value))
				{
					this._MakeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
	}
	
	public partial class Assets_ModelResult
	{
		
		private int _ModelID;
		
		private string _Model;
		
		public Assets_ModelResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelID", DbType="Int NOT NULL")]
		public int ModelID
		{
			get
			{
				return this._ModelID;
			}
			set
			{
				if ((this._ModelID != value))
				{
					this._ModelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
	}
	
	public partial class MoveAssets_ContractorsResult
	{
		
		private System.Nullable<int> _IncidentID;
		
		private string _ContractorName;
		
		private System.Nullable<int> _MoveRef;
		
		private int _ID;
		
		public MoveAssets_ContractorsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncidentID", DbType="Int")]
		public System.Nullable<int> IncidentID
		{
			get
			{
				return this._IncidentID;
			}
			set
			{
				if ((this._IncidentID != value))
				{
					this._IncidentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorName", DbType="VarChar(201)")]
		public string ContractorName
		{
			get
			{
				return this._ContractorName;
			}
			set
			{
				if ((this._ContractorName != value))
				{
					this._ContractorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveRef", DbType="Int")]
		public System.Nullable<int> MoveRef
		{
			get
			{
				return this._MoveRef;
			}
			set
			{
				if ((this._MoveRef != value))
				{
					this._MoveRef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

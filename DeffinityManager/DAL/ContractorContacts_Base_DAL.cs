using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table ContractorContacts
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 15/07/2009 13:11:51
	/// </summary>
	public class ContractorContacts_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.ContractorContacts Load(DataRow oRow)
		{
			BE.ContractorContacts oReturn = new BE.ContractorContacts();
			oReturn.ID = (int)oRow["ID"];
			oReturn.CONTRACTORID = (oRow["CONTRACTORID"] == DBNull.Value ? (null) : ((int?)oRow["CONTRACTORID"]));
			oReturn.NAME = (oRow["NAME"] == DBNull.Value ? (null) : ((string)oRow["NAME"]));
			oReturn.JOBTITLE = (oRow["JOBTITLE"] == DBNull.Value ? (null) : ((string)oRow["JOBTITLE"]));
			oReturn.TELEPHONE = (oRow["TELEPHONE"] == DBNull.Value ? (null) : ((string)oRow["TELEPHONE"]));
			oReturn.MOBILE = (oRow["MOBILE"] == DBNull.Value ? (null) : ((string)oRow["MOBILE"]));
			oReturn.EMAIL = (oRow["EMAIL"] == DBNull.Value ? (null) : ((string)oRow["EMAIL"]));
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.ContractorContacts oContractorContacts)
		{
            return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_INSERT", oContractorContacts.ItemParameter());
		}

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.ContractorContacts Select(int id)
		{
            DataSet dsContractorContacts = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_SELECT", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) });
			BE.ContractorContacts oContractorContacts = null;
			if (dsContractorContacts.Tables[0].Rows.Count > 0)
				oContractorContacts = ContractorContacts_Base_DAL.Load(dsContractorContacts.Tables[0].Rows[0]);
			return oContractorContacts;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int id)
		{
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) })) > 0;
		}
        /// <summary>
        /// Gets the Contractorid fro vendorid
        /// </summary>
        public static int GetContractorId(int vendorid)
        {
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_GETCONTRACTORID", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@VENDORID", vendorid) }));
        }

		/// <summary>
		/// Fill entity list
		/// </summary>
        public static DataTable Fill(int vendorid)
		{
            DataSet dsContractorContacts = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_FILL", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@VENDORID", vendorid) });
			return dsContractorContacts.Tables[0];
		}

		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.ContractorContacts oContractorContacts)
		{
            return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_UPDATE", oContractorContacts.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(int id)
		{
            return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@ID", id) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
            return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_PRC_CONTRACTORCONTACTS_DELETEALL");
		}
	}
}

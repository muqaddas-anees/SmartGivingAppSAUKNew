using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using SqlSrv = Microsoft.ApplicationBlocks.Data;

namespace Deffinity.DAL
{
	/// <summary>
	/// Table RFI_SubSection
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:29
	/// </summary>
	public class RFI_SubSection_Base_DAL
	{

		/// <summary>
		/// Load entity
		/// </summary>
		private static BE.RFI_SubSection Load(DataRow oRow)
		{
			BE.RFI_SubSection oReturn = new BE.RFI_SubSection();
			oReturn.SUBSECTIONID = (int)oRow["SUBSECTIONID"];
			oReturn.SUBSECTIONNAME = (string)oRow["SUBSECTIONNAME"];
            oReturn.SUBSECTIONTYPE=(int)oRow["SUBSECTIONTYPE"];
            oReturn.PROJECTREFERENCE = (int)oRow["PROJECTREFERENCE"];
            oReturn.WORKSHEETID = (int)oRow["WORKSHEETID"];
			return oReturn;
		}

		/// <summary>
		/// Insert entity
		/// </summary>
		public static int Insert(BE.RFI_SubSection oRFI_SubSection)
		{
            
            return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_INSERT", oRFI_SubSection.ItemParameter()));

		}

		/// <summary>
		/// Search entity
		/// </summary>
		public static BE.RFI_SubSection Select(int subsectionid)
		{
			DataSet dsRFI_SubSection = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_SELECT", new System.Data.SqlClient.SqlParameter[]{ new System.Data.SqlClient.SqlParameter("@SUBSECTIONID", subsectionid) });
			BE.RFI_SubSection oRFI_SubSection = null;
			if (dsRFI_SubSection.Tables[0].Rows.Count > 0)
				oRFI_SubSection = RFI_SubSection_Base_DAL.Load(dsRFI_SubSection.Tables[0].Rows[0]);
			return oRFI_SubSection;
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int subsectionid)
		{
			return Convert.ToInt32(SqlSrv.SqlHelper.ExecuteScalar(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_EXISTS", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@SUBSECTIONID", subsectionid) })) > 0;
		}
        
		/// <summary>
		/// Fill entity list
		/// </summary>
		public static DataTable Fill()
		{
			DataSet dsRFI_SubSection = SqlSrv.SqlHelper.ExecuteDataset(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_FILL");
			return dsRFI_SubSection.Tables[0];
		}
        
		/// <summary>
		/// Update entity
		/// </summary>
		public static int Update(BE.RFI_SubSection oRFI_SubSection)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_UPDATE", oRFI_SubSection.ItemParameter());
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		public static int Delete(int subsectionid)
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_DELETE", new System.Data.SqlClient.SqlParameter[] { new System.Data.SqlClient.SqlParameter("@SUBSECTIONID", subsectionid) });
		}
		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		public static int DeleteAll()
		{
			return SqlSrv.SqlHelper.ExecuteNonQuery(Connection.ConnectionString, CommandType.StoredProcedure, "dbo.DEFFINITY_RFI_SUBSECTION_DELETEALL");
		}
	}
}

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.ComponentModel;
using System.Data;

namespace Deffinity.BLL
{
	/// <summary>
	/// Table RFI_VendorCertification
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 23/06/2009 17:12:40
	/// </summary>
	public class RFI_VendorCertification_Base_SVC
	{

		/// <summary>
		/// Insert entity
		/// </summary>
		[DataObjectMethod(DataObjectMethodType.Insert, true)]
		public static int Insert(BE.RFI_VendorCertification oRFI_VendorCertification)
		{
			return DAL.RFI_VendorCertification_DAL.Insert(oRFI_VendorCertification);
		}

		/// <summary>
		/// Search entity
		/// </summary>
		[DataObjectMethod(DataObjectMethodType.Select, true)]
		public static BE.RFI_VendorCertification Select(int certificationid)
		{
			return DAL.RFI_VendorCertification_DAL.Select(certificationid);
		}

		/// <summary>
		/// Check if entity exists
		/// </summary>
		public static bool Exists(int certificationid)
		{
			return DAL.RFI_VendorCertification_DAL.Exists(certificationid);
		}

		/// <summary>
		/// Fill entity list
		/// </summary>
		[DataObjectMethod(DataObjectMethodType.Fill, true)]
		public static DataTable Fill()
		{
			return DAL.RFI_VendorCertification_DAL.Fill();
		}

		/// <summary>
		/// Update entity
		/// </summary>
		[DataObjectMethod(DataObjectMethodType.Update, true)]
		public static int Update(BE.RFI_VendorCertification oRFI_VendorCertification)
		{
			return DAL.RFI_VendorCertification_DAL.Update(oRFI_VendorCertification);
		}

		/// <summary>
		/// Delete entity record
		/// </summary>
		[DataObjectMethod(DataObjectMethodType.Delete, true)]
		public static int Delete(int certificationid)
		{
			return DAL.RFI_VendorCertification_DAL.Delete(certificationid);
		}

		/// <summary>
		/// Delete entity ALL records
		/// </summary>
		[DataObjectMethod(DataObjectMethodType.Delete, false)]
		public static int DeleteAll()
		{
			return DAL.RFI_VendorCertification_DAL.DeleteAll();
		}

	}
}

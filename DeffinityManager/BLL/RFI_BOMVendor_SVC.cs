using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.ComponentModel;
using System.Data;

namespace Deffinity.BLL
{
	/// <summary>
	/// Table RFI_BOMVendor
	/// 
	/// Generated by matricrix's C# Layer Builder
	/// 17/07/2009 16:02:46
	/// 
	/// Remark: Use this class to write custom code.
	/// </summary>
	[DataObjectAttribute]
	public class RFI_BOMVendor_SVC : RFI_BOMVendor_Base_SVC
	{
		/// <summary>
		/// Constructor
		/// </summary>
		private RFI_BOMVendor_SVC() { }

        /// <summary>
        /// Insert entity
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int InsertAll(int ProjectReference,int VendorID)
        {
            return DAL.RFI_BOMVendor_DAL.InsertAll(ProjectReference, VendorID);
        }

        /// <summary>
        /// Delete records when relation is removed between vendor and project
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(int av2pID)
        {
            return DAL.RFI_BOMVendor_DAL.Delete(av2pID);
        }
        [DataObjectMethod(DataObjectMethodType.Fill, true)]
        public static DataTable Fill(int ProjectReference, int ContractorID, int SubsectionID,int WorkSheetID)
        {
            return DAL.RFI_BOMVendor_DAL.Fill(ProjectReference, ContractorID, SubsectionID, WorkSheetID);
        }
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Update(double Price, int id,int currency)
        {
            return DAL.RFI_BOMVendor_DAL.Update(Price, id,currency);
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static int GetVendorID(int ContractorID)
        {
            return DAL.RFI_BOMVendor_DAL.GetVendorID(ContractorID);
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static DataTable FillSubSection(int ProjectReference, int VendorID, int WorkSheetID)
        {
            return DAL.RFI_BOMVendor_DAL.FillSubSection(ProjectReference, VendorID, WorkSheetID);
        }
        [DataObjectMethod(DataObjectMethodType.Fill, true)]
        public static DataTable FillCompare(int ProjectReference, int SubsectionID)
        {
            return DAL.RFI_BOMVendor_DAL.FillCompare(ProjectReference,  SubsectionID);
        }
	}
}

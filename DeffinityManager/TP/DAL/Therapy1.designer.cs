#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Therapy.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeffinityEflair")]
	public partial class TherapyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSubjectiveQuestion(Therapy.Entity.SubjectiveQuestion instance);
    partial void UpdateSubjectiveQuestion(Therapy.Entity.SubjectiveQuestion instance);
    partial void DeleteSubjectiveQuestion(Therapy.Entity.SubjectiveQuestion instance);
    partial void InsertTreatment(Therapy.Entity.Treatment instance);
    partial void UpdateTreatment(Therapy.Entity.Treatment instance);
    partial void DeleteTreatment(Therapy.Entity.Treatment instance);
    partial void InsertKeyMarker(Therapy.Entity.KeyMarker instance);
    partial void UpdateKeyMarker(Therapy.Entity.KeyMarker instance);
    partial void DeleteKeyMarker(Therapy.Entity.KeyMarker instance);
    partial void InsertAssociatedTherapyDetail(Therapy.Entity.AssociatedTherapyDetail instance);
    partial void UpdateAssociatedTherapyDetail(Therapy.Entity.AssociatedTherapyDetail instance);
    partial void DeleteAssociatedTherapyDetail(Therapy.Entity.AssociatedTherapyDetail instance);
    partial void InsertCommonQuestion(Therapy.Entity.CommonQuestion instance);
    partial void UpdateCommonQuestion(Therapy.Entity.CommonQuestion instance);
    partial void DeleteCommonQuestion(Therapy.Entity.CommonQuestion instance);
    partial void InsertSecondaryTreatment(Therapy.Entity.SecondaryTreatment instance);
    partial void UpdateSecondaryTreatment(Therapy.Entity.SecondaryTreatment instance);
    partial void DeleteSecondaryTreatment(Therapy.Entity.SecondaryTreatment instance);
    partial void InsertPatientTrialsAndTreatment(Therapy.Entity.PatientTrialsAndTreatment instance);
    partial void UpdatePatientTrialsAndTreatment(Therapy.Entity.PatientTrialsAndTreatment instance);
    partial void DeletePatientTrialsAndTreatment(Therapy.Entity.PatientTrialsAndTreatment instance);
    partial void InsertTrialConfiguration(Therapy.Entity.TrialConfiguration instance);
    partial void UpdateTrialConfiguration(Therapy.Entity.TrialConfiguration instance);
    partial void DeleteTrialConfiguration(Therapy.Entity.TrialConfiguration instance);
    partial void InsertPatientTrailbyDate(Therapy.Entity.PatientTrailbyDate instance);
    partial void UpdatePatientTrailbyDate(Therapy.Entity.PatientTrailbyDate instance);
    partial void DeletePatientTrailbyDate(Therapy.Entity.PatientTrailbyDate instance);
    partial void InsertTherapyPatientDetail(Therapy.Entity.TherapyPatientDetail instance);
    partial void UpdateTherapyPatientDetail(Therapy.Entity.TherapyPatientDetail instance);
    partial void DeleteTherapyPatientDetail(Therapy.Entity.TherapyPatientDetail instance);
    #endregion
		
		public TherapyDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBstring"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TherapyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TherapyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TherapyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TherapyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Therapy.Entity.SubjectiveQuestion> SubjectiveQuestions
		{
			get
			{
				return this.GetTable<Therapy.Entity.SubjectiveQuestion>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.Treatment> Treatments
		{
			get
			{
				return this.GetTable<Therapy.Entity.Treatment>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.KeyMarker> KeyMarkers
		{
			get
			{
				return this.GetTable<Therapy.Entity.KeyMarker>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.AssociatedTherapyDetail> AssociatedTherapyDetails
		{
			get
			{
				return this.GetTable<Therapy.Entity.AssociatedTherapyDetail>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.CommonQuestion> CommonQuestions
		{
			get
			{
				return this.GetTable<Therapy.Entity.CommonQuestion>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.KeyMarkerList> KeyMarkerLists
		{
			get
			{
				return this.GetTable<Therapy.Entity.KeyMarkerList>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.TreatmentList> TreatmentLists
		{
			get
			{
				return this.GetTable<Therapy.Entity.TreatmentList>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.SubjectiveQuestionList> SubjectiveQuestionLists
		{
			get
			{
				return this.GetTable<Therapy.Entity.SubjectiveQuestionList>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.PatientTrailsandTreatmentList> PatientTrailsandTreatmentLists
		{
			get
			{
				return this.GetTable<Therapy.Entity.PatientTrailsandTreatmentList>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.SecondaryTreatment> SecondaryTreatments
		{
			get
			{
				return this.GetTable<Therapy.Entity.SecondaryTreatment>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.SecondaryTreatmentList> SecondaryTreatmentLists
		{
			get
			{
				return this.GetTable<Therapy.Entity.SecondaryTreatmentList>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.PatientTrialsAndTreatment> PatientTrialsAndTreatments
		{
			get
			{
				return this.GetTable<Therapy.Entity.PatientTrialsAndTreatment>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.TrialConfiguration> TrialConfigurations
		{
			get
			{
				return this.GetTable<Therapy.Entity.TrialConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.PatientTrailbyDate> PatientTrailbyDates
		{
			get
			{
				return this.GetTable<Therapy.Entity.PatientTrailbyDate>();
			}
		}
		
		public System.Data.Linq.Table<Therapy.Entity.TherapyPatientDetail> TherapyPatientDetails
		{
			get
			{
				return this.GetTable<Therapy.Entity.TherapyPatientDetail>();
			}
		}
	}
}
namespace Therapy.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.SubjectiveQuestions")]
	public partial class SubjectiveQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _TrialID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    #endregion
		
		public SubjectiveQuestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrialID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.Treatments")]
	public partial class Treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _TrialID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    #endregion
		
		public Treatment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrialID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.KeyMarkers")]
	public partial class KeyMarker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _TrialID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    #endregion
		
		public KeyMarker()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrialID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.AssociatedTherapyDetails")]
	public partial class AssociatedTherapyDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TherapyID;
		
		private string _SectionType;
		
		private System.Nullable<int> _QuestionID;
		
		private string _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTherapyIDChanging(System.Nullable<int> value);
    partial void OnTherapyIDChanged();
    partial void OnSectionTypeChanging(string value);
    partial void OnSectionTypeChanged();
    partial void OnQuestionIDChanging(System.Nullable<int> value);
    partial void OnQuestionIDChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public AssociatedTherapyDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapyID", DbType="Int")]
		public System.Nullable<int> TherapyID
		{
			get
			{
				return this._TherapyID;
			}
			set
			{
				if ((this._TherapyID != value))
				{
					this.OnTherapyIDChanging(value);
					this.SendPropertyChanging();
					this._TherapyID = value;
					this.SendPropertyChanged("TherapyID");
					this.OnTherapyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionType", DbType="NVarChar(200)")]
		public string SectionType
		{
			get
			{
				return this._SectionType;
			}
			set
			{
				if ((this._SectionType != value))
				{
					this.OnSectionTypeChanging(value);
					this.SendPropertyChanging();
					this._SectionType = value;
					this.SendPropertyChanged("SectionType");
					this.OnSectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int")]
		public System.Nullable<int> QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(MAX)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.CommonQuestion")]
	public partial class CommonQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CommonQuestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class KeyMarkerList
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _Trial;
		
		private System.Nullable<bool> _Status;
		
		public KeyMarkerList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarchar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trial", DbType="NVarchar(500)")]
		public string Trial
		{
			get
			{
				return this._Trial;
			}
			set
			{
				if ((this._Trial != value))
				{
					this._Trial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TreatmentList
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _Trial;
		
		private System.Nullable<int> _TrialID;
		
		private System.Nullable<bool> _Status;
		
		public TreatmentList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarchar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trial", DbType="NVarchar(500)")]
		public string Trial
		{
			get
			{
				return this._Trial;
			}
			set
			{
				if ((this._Trial != value))
				{
					this._Trial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this._TrialID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class SubjectiveQuestionList
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _Trial;
		
		private System.Nullable<bool> _Status;
		
		public SubjectiveQuestionList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarchar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trial", DbType="NVarchar(500)")]
		public string Trial
		{
			get
			{
				return this._Trial;
			}
			set
			{
				if ((this._Trial != value))
				{
					this._Trial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientTrailsandTreatmentList
	{
		
		private System.Nullable<int> _ID;
		
		private string _Treatment;
		
		private string _Trial;
		
		private System.Nullable<int> _User;
		
		private string _TypeofTreatment;
		
		public PatientTrailsandTreatmentList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Treatment", DbType="NVarchar(500)")]
		public string Treatment
		{
			get
			{
				return this._Treatment;
			}
			set
			{
				if ((this._Treatment != value))
				{
					this._Treatment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trial", DbType="NVarchar(500)")]
		public string Trial
		{
			get
			{
				return this._Trial;
			}
			set
			{
				if ((this._Trial != value))
				{
					this._Trial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User", DbType="Int")]
		public System.Nullable<int> User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this._User = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SecondaryTreatment", Storage="_TypeofTreatment", DbType="NVarchar(500)")]
		public string TypeofTreatment
		{
			get
			{
				return this._TypeofTreatment;
			}
			set
			{
				if ((this._TypeofTreatment != value))
				{
					this._TypeofTreatment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.SecondaryTreatment")]
	public partial class SecondaryTreatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _TrailID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    #endregion
		
		public SecondaryTreatment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrailID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrailID;
			}
			set
			{
				if ((this._TrailID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrailID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class SecondaryTreatmentList
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _Trial;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<int> _TrialID;
		
		public SecondaryTreatmentList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarchar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trial", DbType="NVarchar(500)")]
		public string Trial
		{
			get
			{
				return this._Trial;
			}
			set
			{
				if ((this._Trial != value))
				{
					this._Trial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this._TrialID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.PatientTrialsAndTreatments")]
	public partial class PatientTrialsAndTreatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TrialID;
		
		private System.Nullable<int> _TreatmentID;
		
		private System.Nullable<int> _UserID;
		
		private string _TypeofTreatment;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    partial void OnTreatmentIDChanging(System.Nullable<int> value);
    partial void OnTreatmentIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTypeofTreatmentChanging(string value);
    partial void OnTypeofTreatmentChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PatientTrialsAndTreatment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrialID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentID", DbType="Int")]
		public System.Nullable<int> TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this.OnTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._TreatmentID = value;
					this.SendPropertyChanged("TreatmentID");
					this.OnTreatmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeofTreatment", DbType="NVarChar(100)")]
		public string TypeofTreatment
		{
			get
			{
				return this._TypeofTreatment;
			}
			set
			{
				if ((this._TypeofTreatment != value))
				{
					this.OnTypeofTreatmentChanging(value);
					this.SendPropertyChanging();
					this._TypeofTreatment = value;
					this.SendPropertyChanged("TypeofTreatment");
					this.OnTypeofTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.TrialConfiguration")]
	public partial class TrialConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<System.DateTime> _TrailStartDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnTrailStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrailStartDateChanged();
    #endregion
		
		public TrialConfiguration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrailStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrailStartDate
		{
			get
			{
				return this._TrailStartDate;
			}
			set
			{
				if ((this._TrailStartDate != value))
				{
					this.OnTrailStartDateChanging(value);
					this.SendPropertyChanging();
					this._TrailStartDate = value;
					this.SendPropertyChanged("TrailStartDate");
					this.OnTrailStartDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.PatientTrailbyDate")]
	public partial class PatientTrailbyDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _TrialID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    #endregion
		
		public PatientTrailbyDate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrialID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TP.TherapyPatientDetails")]
	public partial class TherapyPatientDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _DateLogged;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _TrialID;
		
		private System.Nullable<System.DateTime> _WeekCommencingDate;
		
		private System.Nullable<int> _TreatmentID;
		
		private System.Nullable<bool> _FlagStartedFromBeginning;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateLoggedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoggedChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTrialIDChanging(System.Nullable<int> value);
    partial void OnTrialIDChanged();
    partial void OnWeekCommencingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeekCommencingDateChanged();
    partial void OnTreatmentIDChanging(System.Nullable<int> value);
    partial void OnTreatmentIDChanged();
    partial void OnFlagStartedFromBeginningChanging(System.Nullable<bool> value);
    partial void OnFlagStartedFromBeginningChanged();
    #endregion
		
		public TherapyPatientDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLogged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLogged
		{
			get
			{
				return this._DateLogged;
			}
			set
			{
				if ((this._DateLogged != value))
				{
					this.OnDateLoggedChanging(value);
					this.SendPropertyChanging();
					this._DateLogged = value;
					this.SendPropertyChanged("DateLogged");
					this.OnDateLoggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialID", DbType="Int")]
		public System.Nullable<int> TrialID
		{
			get
			{
				return this._TrialID;
			}
			set
			{
				if ((this._TrialID != value))
				{
					this.OnTrialIDChanging(value);
					this.SendPropertyChanging();
					this._TrialID = value;
					this.SendPropertyChanged("TrialID");
					this.OnTrialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekCommencingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeekCommencingDate
		{
			get
			{
				return this._WeekCommencingDate;
			}
			set
			{
				if ((this._WeekCommencingDate != value))
				{
					this.OnWeekCommencingDateChanging(value);
					this.SendPropertyChanging();
					this._WeekCommencingDate = value;
					this.SendPropertyChanged("WeekCommencingDate");
					this.OnWeekCommencingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentID", DbType="Int")]
		public System.Nullable<int> TreatmentID
		{
			get
			{
				return this._TreatmentID;
			}
			set
			{
				if ((this._TreatmentID != value))
				{
					this.OnTreatmentIDChanging(value);
					this.SendPropertyChanging();
					this._TreatmentID = value;
					this.SendPropertyChanged("TreatmentID");
					this.OnTreatmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagStartedFromBeginning", DbType="Bit")]
		public System.Nullable<bool> FlagStartedFromBeginning
		{
			get
			{
				return this._FlagStartedFromBeginning;
			}
			set
			{
				if ((this._FlagStartedFromBeginning != value))
				{
					this.OnFlagStartedFromBeginningChanging(value);
					this.SendPropertyChanging();
					this._FlagStartedFromBeginning = value;
					this.SendPropertyChanged("FlagStartedFromBeginning");
					this.OnFlagStartedFromBeginningChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
